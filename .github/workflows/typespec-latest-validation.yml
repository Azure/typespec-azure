name: TypeSpec Latest Validation

on:
  pull_request:
    branches: ["main", "release/*"]
    paths-ignore:
      - "website/**"
      - "docs/**"
      - "*.md"
      - "*.txt"
      - ".gitignore"
      - ".editorconfig"
      - ".prettierrc.json"
      - ".prettierignore"
      - "cspell.yaml"
  # Allow manual triggering for testing integration
  workflow_dispatch:
    inputs:
      typespec_ref:
        description: 'TypeSpec branch/ref to test against'
        required: false
        default: 'main'
        type: string
  # Run on schedule to catch breaking changes in TypeSpec main
  schedule:
    # Run daily at 6 AM UTC to catch any new changes in TypeSpec main
    - cron: "0 6 * * *"

# This check validates that changes in typespec-azure work with latest TypeSpec development
# It's similar to the external-integration check in the TypeSpec repository but in reverse:
# instead of testing TypeSpec changes against typespec-azure, this tests typespec-azure changes against TypeSpec.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  typespec-latest-validation:
    name: Validate against TypeSpec Latest
    runs-on: ubuntu-latest
    # Skip validation for dependabot, publish, backmerge, or revert branches 
    # as these are automated and should be covered by regular CI
    if: |
      !startsWith(github.head_ref, 'dependabot/') &&
      !startsWith(github.head_ref, 'publish/') &&
      !startsWith(github.head_ref, 'backmerge/') &&
      !startsWith(github.head_ref, 'revert-')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch submodules to get the core TypeSpec repository
          submodules: true
          # Need sufficient depth for submodule operations
          fetch-depth: 0

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup
        with:
          node-version: "20.x"

      - name: Update core submodule to latest TypeSpec
        run: |
          cd core
          # Fetch the latest changes from the typespec repository
          git fetch origin
          # Use the specified ref or default to main
          TYPESPEC_REF="${{ github.event.inputs.typespec_ref || 'main' }}"
          echo "Testing against TypeSpec ref: $TYPESPEC_REF"
          git checkout origin/$TYPESPEC_REF
          # Update the parent repository to track this change
          cd ..
          git add core

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build core TypeSpec packages
        run: |
          cd core
          # Skip docusaurus build to avoid playwright dependency issues in CI
          TYPESPEC_SKIP_DOCUSAURUS_BUILD=true pnpm build:all
        env:
          TYPESPEC_SKIP_DOCUSAURUS_BUILD: true

      - name: Build TypeSpec Azure packages
        run: |
          # Skip docusaurus build and build only the Azure packages
          TYPESPEC_SKIP_DOCUSAURUS_BUILD=true pnpm build
        env:
          TYPESPEC_SKIP_DOCUSAURUS_BUILD: true
        continue-on-error: true  # Continue even if build fails to provide feedback

      - name: Run basic tests
        run: |
          # Run basic tests to validate compatibility
          # Using continue-on-error to provide feedback on what works/doesn't work
          pnpm test
        env:
          TYPESPEC_SKIP_DOCUSAURUS_BUILD: true
        continue-on-error: true

      - name: Generate compatibility report
        if: always()
        run: |
          echo "## TypeSpec Latest Validation Report" >> $GITHUB_STEP_SUMMARY
          echo "This validation tests the current TypeSpec Azure packages against the latest TypeSpec main branch." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Get TypeSpec version info
          TYPESPEC_REF="${{ github.event.inputs.typespec_ref || 'main' }}"
          TYPESPEC_COMMIT=$(cd core && git rev-parse HEAD)
          echo "**TypeSpec Reference**: \`$TYPESPEC_REF\`" >> $GITHUB_STEP_SUMMARY
          echo "**TypeSpec Commit**: [\`${TYPESPEC_COMMIT:0:8}\`](https://github.com/microsoft/typespec/commit/$TYPESPEC_COMMIT)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Report on workflow steps
          echo "### Validation Steps" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ **Core Update**: Successfully updated to latest TypeSpec" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ **Dependencies**: Installed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- ℹ️ **Build/Test**: Check individual step results above" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "💡 **Note**: This workflow uses \`continue-on-error\` to provide feedback even when compatibility issues exist." >> $GITHUB_STEP_SUMMARY
          echo "Failures here don't necessarily block the PR but indicate potential future compatibility issues." >> $GITHUB_STEP_SUMMARY