{
  "swagger": "2.0",
  "info": {
    "title": "sample",
    "version": "0000-00-00",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "String Operations"
    }
  ],
  "paths": {
    "/string/base64Encoding": {
      "get": {
        "operationId": "String_GetBase64Encoding",
        "tags": [
          "String Operations"
        ],
        "description": "Get value that is base64 encoded",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "String_PutBase64Encoding",
        "tags": [
          "String Operations"
        ],
        "description": "Put value that is base64 encoded",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "format": "byte"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/string/empty": {
      "get": {
        "operationId": "String_GetEmpty",
        "tags": [
          "String Operations"
        ],
        "description": "Get empty string value",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "string",
              "enum": [
                ""
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "String_PutEmpty",
        "tags": [
          "String Operations"
        ],
        "description": "Put empty string value",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                ""
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/string/enum/constant": {
      "get": {
        "operationId": "Enums_GetConstant",
        "tags": [
          "String Operations"
        ],
        "description": "Gets value 'green-color' from a constant",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Colors"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "Enums_PutConstant",
        "tags": [
          "String Operations"
        ],
        "description": "Sends value 'green-color' from a constant",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Colors"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/string/enum/empty": {
      "get": {
        "operationId": "Enums_GetNotExpandable",
        "tags": [
          "String Operations"
        ],
        "description": "Get non expandable string enum value",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Colors"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "Enums_PutNotExpandable",
        "tags": [
          "String Operations"
        ],
        "description": "Put non expandable string enum value",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Colors"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/string/mbcs": {
      "get": {
        "operationId": "String_GetMbcs",
        "tags": [
          "String Operations"
        ],
        "description": "Get mbcs string value '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€'",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "string",
              "enum": [
                "啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€"
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "String_PutMbCs",
        "tags": [
          "String Operations"
        ],
        "description": "Put mbcs string value '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€'",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€"
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/string/null": {
      "get": {
        "operationId": "String_GetNull",
        "tags": [
          "String Operations"
        ],
        "description": "Get null string value",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "string",
              "x-nullable": true
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "String_PutNull",
        "tags": [
          "String Operations"
        ],
        "description": "Put null string value",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "x-nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/string/whitespace": {
      "get": {
        "operationId": "String_GetWhitespace",
        "tags": [
          "String Operations"
        ],
        "description": "Get string value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "string",
              "enum": [
                "   Now is the time for all good men to come to the aid of their country    "
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "String_PutWhitespace",
        "tags": [
          "String Operations"
        ],
        "description": "Get string value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "   Now is the time for all good men to come to the aid of their country    "
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Colors": {
      "type": "string",
      "enum": [
        "red color",
        "green-color",
        "blue-color"
      ],
      "x-ms-enum": {
        "name": "Colors",
        "modelAsString": false
      }
    },
    "Error": {
      "type": "object",
      "description": "Error",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "status",
        "message"
      ]
    }
  },
  "parameters": {}
}
