{
  "swagger": "2.0",
  "info": {
    "title": "Dynatrace.Observability",
    "version": "2022-04-30-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Monitors"
    },
    {
      "name": "TagRules"
    },
    {
      "name": "SingleSignOn"
    }
  ],
  "paths": {
    "/providers/Dynatrace.Observability/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Dynatrace.Observability/checkNameAvailability": {
      "post": {
        "operationId": "Operations_CheckName",
        "description": "Implements global CheckNameAvailability operations",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The CheckAvailability request",
            "required": true,
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Dynatrace.Observability/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "Operations_CheckLocalName",
        "description": "Implements local CheckNameAvailability operations",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The CheckAvailability request",
            "required": true,
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Dynatrace.Observability/monitors": {
      "get": {
        "operationId": "Monitors_ListBySubscription",
        "tags": [
          "Monitors"
        ],
        "description": "List MonitorResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors": {
      "get": {
        "operationId": "Monitors_ListByResourceGroup",
        "tags": [
          "Monitors"
        ],
        "description": "List MonitorResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}": {
      "get": {
        "operationId": "Monitors_Get",
        "tags": [
          "Monitors"
        ],
        "description": "Get a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Monitors_CreateOrUpdate",
        "tags": [
          "Monitors"
        ],
        "description": "Create a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MonitorResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            }
          },
          "201": {
            "description": "Resource 'MonitorResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Monitors_Update",
        "tags": [
          "Monitors"
        ],
        "description": "Update a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Monitors_Delete",
        "tags": [
          "Monitors"
        ],
        "description": "Delete a MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/getAccountCredentials": {
      "post": {
        "operationId": "Monitors_GetAccountCredentials",
        "tags": [
          "Monitors"
        ],
        "description": "Gets the user account credentials for a Monitor",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccountInfoSecure"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listMonitoredResources": {
      "post": {
        "operationId": "Monitors_ListMonitoredResources",
        "tags": [
          "Monitors"
        ],
        "description": "List the resources currently being monitored by the Dynatrace monitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitoredResourceListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listVmHosts": {
      "post": {
        "operationId": "Monitors_ListVmHosts",
        "tags": [
          "Monitors"
        ],
        "description": "List the compute resources currently being monitored by the Dynatrace resource.",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMResourcesListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/singleSignOnConfigurations": {
      "get": {
        "operationId": "SingleSignOn_ListByMonitorResource",
        "tags": [
          "SingleSignOn"
        ],
        "description": "List DynatraceSingleSignOnResource resources by MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "operationId": "Monitors_ListSingleSignOnConfigurations",
        "tags": [
          "Monitors"
        ],
        "description": "List the single sign-on configurations for a given monitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMResourcesListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/singleSignOnConfigurations/{configurationName}": {
      "get": {
        "operationId": "SingleSignOn_Get",
        "tags": [
          "SingleSignOn"
        ],
        "description": "Get a DynatraceSingleSignOnResource",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Single Sign On Configuration Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "SingleSignOn_CreateOrUpdate",
        "tags": [
          "SingleSignOn"
        ],
        "description": "Create a DynatraceSingleSignOnResource",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Single Sign On Configuration Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynatraceSingleSignOnResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResource"
            }
          },
          "201": {
            "description": "Resource 'DynatraceSingleSignOnResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynatraceSingleSignOnResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/tagRules": {
      "get": {
        "operationId": "TagRules_ListByMonitorResource",
        "tags": [
          "TagRules"
        ],
        "description": "List TagRule resources by MonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/tagRules/{ruleSetName}": {
      "get": {
        "operationId": "TagRules_Get",
        "tags": [
          "TagRules"
        ],
        "description": "Get a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor RuleSet resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "TagRules_CreateOrUpdate",
        "tags": [
          "TagRules"
        ],
        "description": "Create a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor RuleSet resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          },
          "201": {
            "description": "Resource 'TagRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagRule"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "TagRules_Update",
        "tags": [
          "TagRules"
        ],
        "description": "Update a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor RuleSet resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagRuleUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "TagRules_Delete",
        "tags": [
          "TagRules"
        ],
        "description": "Delete a TagRule",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Monitor RuleSet resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/vmHostPayload": {
      "post": {
        "operationId": "Monitors_GetVmHostPayload",
        "tags": [
          "Monitors"
        ],
        "description": "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM.",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMExtensionPayload"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/vmHostUpdate": {
      "post": {
        "operationId": "Monitors_ListVmHostUpdate",
        "tags": [
          "Monitors"
        ],
        "description": "Sending request to update the collection when Dynatrace agent has been installed on a VM for a given monitor.",
        "parameters": [
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "monitorName",
            "in": "path",
            "description": "Monitor resource name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/VMHostUpdateParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VMResourcesListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AccountInfo": {
      "type": "object",
      "description": "Dynatrace Account Information",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account Id of the account this environment is linked to",
          "readOnly": true
        },
        "regionId": {
          "type": "string",
          "description": "Region in which the account is created",
          "readOnly": true
        }
      }
    },
    "AccountInfoSecure": {
      "type": "object",
      "description": "Dynatrace account API Key",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account Id of the account this environment is linked to",
          "readOnly": true
        },
        "apiKey": {
          "$ref": "#/definitions/SecureString",
          "description": "API Key of the user account",
          "readOnly": true
        },
        "regionId": {
          "type": "string",
          "description": "Region in which the account is created",
          "readOnly": true
        }
      }
    },
    "DynatraceEnvironmentBase": {
      "type": "object",
      "description": "An artificial model for testing versioning",
      "properties": {
        "environmentInfo": {
          "$ref": "#/definitions/EnvironmentInfo",
          "description": "Dynatrace Environment Information",
          "readOnly": true
        }
      }
    },
    "DynatraceEnvironmentProperties": {
      "type": "object",
      "description": "Properties of the Dynatrace environment.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "User id",
          "readOnly": true
        },
        "accountInfo": {
          "$ref": "#/definitions/AccountInfo",
          "description": "Dynatrace Account Information",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DynatraceEnvironmentBase"
        }
      ]
    },
    "DynatraceSingleSignOnProperties": {
      "type": "object",
      "description": "The details of a DynaTrace single sign-on.",
      "properties": {
        "singleSignOnState": {
          "$ref": "#/definitions/SingleSignOnStates",
          "description": "State of Single Sign On"
        },
        "enterpriseAppId": {
          "type": "string",
          "description": "Version of the Dynatrace agent installed on the VM."
        },
        "singleSignOnUrl": {
          "type": "string",
          "description": "The login URL specific to this Dynatrace Environment"
        },
        "aadDomains": {
          "type": "array",
          "description": "array of Aad(azure active directory) domains",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource."
        }
      },
      "required": [
        "singleSignOnUrl",
        "aadDomains"
      ]
    },
    "DynatraceSingleSignOnResource": {
      "type": "object",
      "description": "Single sign-on configurations for a given monitor resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynatraceSingleSignOnProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynatraceSingleSignOnResourceListResult": {
      "type": "object",
      "description": "The response of a DynatraceSingleSignOnResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynatraceSingleSignOnResource items on this page",
          "items": {
            "$ref": "#/definitions/DynatraceSingleSignOnResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentInfo": {
      "type": "object",
      "description": "Dynatrace Environment Information",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Id of the environment created",
          "readOnly": true
        },
        "ingestionKey": {
          "type": "string",
          "description": "Ingestion key of the environment",
          "readOnly": true
        },
        "logsIngestionEndpoint": {
          "type": "string",
          "description": "Ingestion endpoint used for sending logs",
          "readOnly": true
        }
      }
    },
    "FilteringTag": {
      "type": "object",
      "description": "The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name (also known as the key) of the tag."
        },
        "value": {
          "type": "string",
          "description": "The value of the tag."
        },
        "action": {
          "$ref": "#/definitions/TagAction",
          "description": "Valid actions for a filtering tag. Exclusion takes priority over inclusion."
        }
      }
    },
    "LiftrResourceCategories": {
      "type": "string",
      "description": "Liftr resource category",
      "enum": [
        "Unknown",
        "MonitorLogs"
      ],
      "x-ms-enum": {
        "name": "LiftrResourceCategories",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown"
          },
          {
            "name": "MonitorLogs",
            "value": "MonitorLogs",
            "description": "Monitor logs"
          }
        ]
      }
    },
    "LogRules": {
      "type": "object",
      "description": "Set of rules for sending logs for the Monitor resource.",
      "properties": {
        "sendAadLogs": {
          "$ref": "#/definitions/SendAadLogsStatus",
          "description": "Flag specifying if AAD logs should be sent for the Monitor resource."
        },
        "sendSubscriptionLogs": {
          "$ref": "#/definitions/SendSubscriptionLogsStatus",
          "description": "Flag specifying if subscription logs should be sent for the Monitor resource."
        },
        "sendActivityLogs": {
          "$ref": "#/definitions/SendActivityLogsStatus",
          "description": "Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."
        },
        "filteringTags": {
          "type": "array",
          "description": "List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured.\nIf only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.",
          "items": {
            "$ref": "#/definitions/FilteringTag"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "MarketplaceSubscriptionStatus": {
      "type": "string",
      "description": "Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.",
      "enum": [
        "Active",
        "Suspended"
      ],
      "x-ms-enum": {
        "name": "MarketplaceSubscriptionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "Subscription is active"
          },
          {
            "name": "Suspended",
            "value": "Suspended",
            "description": "Subscription is suspended"
          }
        ]
      }
    },
    "MediumString": {
      "type": "string",
      "description": "Shorthand for setting length limit.",
      "maxLength": 50
    },
    "MonitorProperties": {
      "type": "object",
      "description": "Properties specific to the monitor resource.",
      "properties": {
        "monitoringStatus": {
          "$ref": "#/definitions/MonitoringStatus",
          "description": "Status of the monitor."
        },
        "marketplaceSubscriptionStatus": {
          "$ref": "#/definitions/MarketplaceSubscriptionStatus",
          "description": "Marketplace subscription status."
        },
        "dynatraceEnvironmentProperties": {
          "$ref": "#/definitions/DynatraceEnvironmentProperties",
          "description": "Properties of the Dynatrace environment."
        },
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "Billing plan information."
        },
        "liftrResourceCategory": {
          "$ref": "#/definitions/LiftrResourceCategories",
          "description": "Liftr Resource category.",
          "readOnly": true
        },
        "liftrResourcePreference": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "foo": {
          "type": "string",
          "description": "A foo"
        }
      }
    },
    "MonitorResource": {
      "type": "object",
      "description": "Dynatrace Monitor Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../../../../specs/resource-manager/common-types/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MonitorResourceListResult": {
      "type": "object",
      "description": "The response of a MonitorResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MonitorResource items on this page",
          "items": {
            "$ref": "#/definitions/MonitorResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "MonitorResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the MonitorResource.",
      "properties": {
        "identity": {
          "$ref": "../../../../../../../../specs/resource-manager/common-types/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/MonitorResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "MonitorResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the MonitorResource.",
      "properties": {
        "monitoringStatus": {
          "$ref": "#/definitions/MonitoringStatus",
          "description": "Status of the monitor."
        },
        "marketplaceSubscriptionStatus": {
          "$ref": "#/definitions/MarketplaceSubscriptionStatus",
          "description": "Marketplace subscription status."
        },
        "dynatraceEnvironmentProperties": {
          "$ref": "#/definitions/DynatraceEnvironmentProperties",
          "description": "Properties of the Dynatrace environment."
        },
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "Billing plan information."
        },
        "foo": {
          "type": "string",
          "description": "A foo"
        }
      }
    },
    "MonitoredResource": {
      "type": "object",
      "description": "Details of resource being monitored by Dynatrace monitor resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Resource id of the resource."
        },
        "sendingMetrics": {
          "$ref": "#/definitions/SendingMetricsStatus",
          "description": "Flag indicating if resource is sending metrics to Dynatrace."
        },
        "reasonForMetricsStatus": {
          "type": "string",
          "description": "Reason for why the resource is sending metrics (or why it is not sending)."
        },
        "sendingLogs": {
          "$ref": "#/definitions/SendingLogsStatus",
          "description": "Flag indicating if resource is sending logs to Dynatrace."
        },
        "reasonForLogsStatus": {
          "type": "string",
          "description": "Reason for why the resource is sending logs (or why it is not sending)."
        }
      }
    },
    "MonitoredResourceListResponse": {
      "type": "object",
      "description": "List of all the resources being monitored by Dynatrace monitor resource",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MonitoredResource items on this page",
          "items": {
            "$ref": "#/definitions/MonitoredResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "MonitoringStatus": {
      "type": "string",
      "description": "Flag specifying if the resource monitoring is enabled or disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "MonitoringStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Monitoring enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Monitoring disabled"
          }
        ]
      }
    },
    "MonitoringTagRulesProperties": {
      "type": "object",
      "description": "Properties for the Tag rules resource of a Monitor account.",
      "properties": {
        "logRules": {
          "$ref": "#/definitions/LogRules",
          "description": "Set of rules for sending logs for the Monitor resource."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "PlanData": {
      "type": "object",
      "description": "Billing plan information.",
      "properties": {
        "usageType": {
          "$ref": "#/definitions/MediumString",
          "description": "different usage type like PAYG/COMMITTED. this could be enum"
        },
        "billingCycle": {
          "$ref": "#/definitions/MediumString",
          "description": "different billing cycles like MONTHLY/WEEKLY. this could be enum"
        },
        "planDetails": {
          "$ref": "#/definitions/MediumString",
          "description": "plan id as published by Dynatrace"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "date when plan was applied"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the monitoring resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted",
        "Creating",
        "Updating",
        "Deleting",
        "Deleted",
        "NotSpecified"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource provisioning has been accepted."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The resource is being created."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is being updated."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted."
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "The resource has been deleted."
          },
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "The resource status is unspecified."
          }
        ]
      },
      "readOnly": true
    },
    "SecureString": {
      "type": "string",
      "format": "password",
      "description": "Credential string.",
      "x-ms-secret": true
    },
    "SendAadLogsStatus": {
      "type": "string",
      "description": "Indicates whether AAD logs are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendAadLogsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "AAD logs are enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "AAD logs are disabled."
          }
        ]
      }
    },
    "SendActivityLogsStatus": {
      "type": "string",
      "description": "Indicates whether activity logs are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendActivityLogsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Activity logs are enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Activity logs are disabled."
          }
        ]
      }
    },
    "SendSubscriptionLogsStatus": {
      "type": "string",
      "description": "Indicates whether subscription logs are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendSubscriptionLogsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Subscription logs are enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Subscription logs are disabled."
          }
        ]
      }
    },
    "SendingLogsStatus": {
      "type": "string",
      "description": "Indicates whether logs are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendingLogsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Logs are enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Logs are disabled."
          }
        ]
      }
    },
    "SendingMetricsStatus": {
      "type": "string",
      "description": "Indicates whether metrics are being sent.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SendingMetricsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Metrics are enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Metrics are disabled."
          }
        ]
      }
    },
    "SingleSignOnStates": {
      "type": "string",
      "description": "Various states of the SSO resource",
      "enum": [
        "Initial",
        "Enable",
        "Disable",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "SingleSignOnStates",
        "modelAsString": true,
        "values": [
          {
            "name": "Initial",
            "value": "Initial",
            "description": "Initial state"
          },
          {
            "name": "Enable",
            "value": "Enable",
            "description": "SSO is enabled"
          },
          {
            "name": "Disable",
            "value": "Disable",
            "description": "SSO is disabled"
          },
          {
            "name": "Existing",
            "value": "Existing",
            "description": "Existing SSO authentication"
          }
        ]
      }
    },
    "TagAction": {
      "type": "string",
      "description": "Valid actions for a filtering tag. Exclusion takes priority over inclusion.",
      "enum": [
        "Include",
        "Exclude"
      ],
      "x-ms-enum": {
        "name": "TagAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Include",
            "value": "Include",
            "description": "Include tag"
          },
          {
            "name": "Exclude",
            "value": "Exclude",
            "description": "Exclude tag"
          }
        ]
      }
    },
    "TagRule": {
      "type": "object",
      "description": "Tag rules for a monitor resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitoringTagRulesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TagRuleListResult": {
      "type": "object",
      "description": "The response of a TagRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TagRule items on this page",
          "items": {
            "$ref": "#/definitions/TagRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "TagRuleUpdate": {
      "type": "object",
      "description": "The type used for update operations of the TagRule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagRuleUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "TagRuleUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the TagRule.",
      "properties": {
        "logRules": {
          "$ref": "#/definitions/LogRules",
          "description": "Set of rules for sending logs for the Monitor resource."
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "description": "User info.",
      "properties": {
        "firstName": {
          "$ref": "#/definitions/MediumString",
          "description": "First Name of the user"
        },
        "lastName": {
          "$ref": "#/definitions/MediumString",
          "description": "Last Name of the user"
        },
        "emailAddress": {
          "$ref": "#/definitions/email",
          "description": "Email of the user used by Dynatrace for contacting them if needed"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the user used by Dynatrace for contacting them if needed",
          "maxLength": 40
        },
        "country": {
          "type": "string",
          "description": "Country of the user"
        }
      }
    },
    "VMExtensionPayload": {
      "type": "object",
      "description": "Response of payload to be passed while installing VM agent.",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/SecureString",
          "description": "API Key of the user account"
        },
        "environmentId": {
          "type": "string",
          "description": "Id of the environment created"
        }
      }
    },
    "VMHostUpdateRequest": {
      "type": "object",
      "description": "Request of a list VM Host Update Operation.",
      "properties": {
        "vmResourceIds": {
          "type": "array",
          "description": "VM resource ID on which agent is installed/deleted",
          "items": {
            "$ref": "#/definitions/VMResources"
          }
        },
        "state": {
          "$ref": "#/definitions/VMHostUpdateState",
          "description": "Specifies the state of the operation - install/ delete."
        }
      }
    },
    "VMHostUpdateState": {
      "type": "string",
      "description": "Various states of the updating vm extension on resource",
      "enum": [
        "Install",
        "Delete"
      ],
      "x-ms-enum": {
        "name": "VMHostUpdateState",
        "modelAsString": true,
        "values": [
          {
            "name": "Install",
            "value": "Install",
            "description": "Extension is being installed"
          },
          {
            "name": "Delete",
            "value": "Delete",
            "description": "Extension is being deleted"
          }
        ]
      }
    },
    "VMResources": {
      "type": "object",
      "description": "VM Resource Ids",
      "properties": {
        "id": {
          "$ref": "#/definitions/virtualMachineId",
          "description": "VM resource ID on which agent is installed"
        },
        "agentVersion": {
          "type": "string",
          "description": "Version of the Dynatrace agent installed on the VM."
        }
      }
    },
    "VMResourcesListResponse": {
      "type": "object",
      "description": "Response of a list VM Host Update Operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VMResources items on this page",
          "items": {
            "$ref": "#/definitions/VMResources"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "Dynatrace Monitor Resource version",
      "enum": [
        "2021-06-13-preview",
        "2022-04-30-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "2021-06-13-preview",
            "value": "2021-06-13-preview",
            "description": "Version 2021-06-13-preview"
          },
          {
            "name": "2022-04-30-preview",
            "value": "2022-04-30-preview",
            "description": "Version 2021-07-01-preview"
          }
        ]
      }
    },
    "email": {
      "type": "string",
      "description": "Reusable representation of an email address",
      "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
    },
    "virtualMachineId": {
      "type": "string",
      "description": "A virtual machine reference",
      "pattern": "\\/subscriptions\\/[a-z0-9\\-]+\\/resourceGroups\\/[^\\/]+\\/providers\\/Microsoft\\.Compute\\/virtualMachines\\/[^\\/]+"
    }
  },
  "parameters": {
    "VMHostUpdateParameter": {
      "name": "request",
      "in": "body",
      "description": "The details of the VMHost update request.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/VMHostUpdateRequest"
      },
      "x-ms-parameter-location": "method"
    }
  }
}
