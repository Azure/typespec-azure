{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.EnvelopeTest",
    "version": "2021-09-21-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "AllProperties"
    },
    {
      "name": "SystemsOnlyResources"
    }
  ],
  "paths": {
    "/providers/Microsoft.EnvelopeTest/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EnvelopeTest/allProperties": {
      "get": {
        "operationId": "AllProperties_ListBySubscription",
        "tags": [
          "AllProperties"
        ],
        "description": "List AllPropertiesResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AllPropertiesResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EnvelopeTest/systems": {
      "get": {
        "operationId": "SystemsOnlyResources_ListBySubscription",
        "tags": [
          "SystemsOnlyResources"
        ],
        "description": "List SystemOnlyResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SystemOnlyResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EnvelopeTest/allProperties": {
      "get": {
        "operationId": "AllProperties_ListByResourceGroup",
        "tags": [
          "AllProperties"
        ],
        "description": "List AllPropertiesResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AllPropertiesResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EnvelopeTest/allProperties/{allPropertiesName}": {
      "get": {
        "operationId": "AllProperties_Get",
        "tags": [
          "AllProperties"
        ],
        "description": "Get a AllPropertiesResource",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "allPropertiesName",
            "in": "path",
            "description": "The name of the all properties resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AllPropertiesResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "AllProperties_CreateOrUpdate",
        "tags": [
          "AllProperties"
        ],
        "description": "Create a AllPropertiesResource",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "allPropertiesName",
            "in": "path",
            "description": "The name of the all properties resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllPropertiesResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AllPropertiesResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AllPropertiesResource"
            }
          },
          "201": {
            "description": "Resource 'AllPropertiesResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AllPropertiesResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "AllProperties_Update",
        "tags": [
          "AllProperties"
        ],
        "description": "Update a AllPropertiesResource",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "allPropertiesName",
            "in": "path",
            "description": "The name of the all properties resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllPropertiesResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AllPropertiesResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "AllProperties_Delete",
        "tags": [
          "AllProperties"
        ],
        "description": "Delete a AllPropertiesResource",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "allPropertiesName",
            "in": "path",
            "description": "The name of the all properties resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EnvelopeTest/systems": {
      "get": {
        "operationId": "SystemsOnlyResources_ListByResourceGroup",
        "tags": [
          "SystemsOnlyResources"
        ],
        "description": "List SystemOnlyResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SystemOnlyResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EnvelopeTest/systems/{systemOnlyPropertiesName}": {
      "get": {
        "operationId": "SystemsOnlyResources_Get",
        "tags": [
          "SystemsOnlyResources"
        ],
        "description": "Get a SystemOnlyResource",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "systemOnlyPropertiesName",
            "in": "path",
            "description": "The name of the all properties resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SystemOnlyResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "SystemsOnlyResources_CreateOrUpdate",
        "tags": [
          "SystemsOnlyResources"
        ],
        "description": "Create a SystemOnlyResource",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "systemOnlyPropertiesName",
            "in": "path",
            "description": "The name of the all properties resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemOnlyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SystemOnlyResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SystemOnlyResource"
            }
          },
          "201": {
            "description": "Resource 'SystemOnlyResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SystemOnlyResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SystemsOnlyResources_Update",
        "tags": [
          "SystemsOnlyResources"
        ],
        "description": "Update a SystemOnlyResource",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "systemOnlyPropertiesName",
            "in": "path",
            "description": "The name of the all properties resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemOnlyResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SystemOnlyResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "SystemsOnlyResources_Delete",
        "tags": [
          "SystemsOnlyResources"
        ],
        "description": "Delete a SystemOnlyResource",
        "parameters": [
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "systemOnlyPropertiesName",
            "in": "path",
            "description": "The name of the all properties resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AllPropertiesProperties": {
      "type": "object",
      "description": "rp-specific proeprties for the resource with all envelope properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/EnvelopeProvisioningState",
          "description": "The status of the last operation performed on this resource."
        },
        "displayName": {
          "type": "string",
          "description": "Name of the resource",
          "default": "default"
        }
      },
      "required": [
        "provisioningState"
      ]
    },
    "AllPropertiesResource": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AllPropertiesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        },
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\\\\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "plan": {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/Plan",
          "description": "Details of the resource plan."
        },
        "sku": {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "identity": {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AllPropertiesResourceListResult": {
      "type": "object",
      "description": "The response of a AllPropertiesResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AllPropertiesResource items on this page",
          "items": {
            "$ref": "#/definitions/AllPropertiesResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AllPropertiesResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the AllPropertiesResource.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
        },
        "plan": {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/Plan",
          "description": "Details of the resource plan."
        },
        "sku": {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "identity": {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AllPropertiesResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "AllPropertiesResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the AllPropertiesResource.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/EnvelopeProvisioningState",
          "description": "The status of the last operation performed on this resource."
        },
        "displayName": {
          "type": "string",
          "description": "Name of the resource",
          "default": "default"
        }
      }
    },
    "EnvelopeProvisioningState": {
      "type": "string",
      "description": "Envelope provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Working"
      ],
      "x-ms-enum": {
        "name": "EnvelopeProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Working",
            "value": "Working",
            "description": "Working"
          }
        ]
      },
      "readOnly": true
    },
    "SystemOnlyProperties": {
      "type": "object",
      "description": "rp-specific properties for the resource using system-only Managed Identity",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/EnvelopeProvisioningState",
          "description": "The status of the last operation performed on this resource."
        }
      },
      "required": [
        "provisioningState"
      ]
    },
    "SystemOnlyResource": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SystemOnlyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v4/managedidentity.json#/definitions/SystemAssignedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SystemOnlyResourceListResult": {
      "type": "object",
      "description": "The response of a SystemOnlyResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SystemOnlyResource items on this page",
          "items": {
            "$ref": "#/definitions/SystemOnlyResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SystemOnlyResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the SystemOnlyResource.",
      "properties": {
        "identity": {
          "$ref": "../../../../../../../specs/resource-manager/common-types/v4/managedidentity.json#/definitions/SystemAssignedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/SystemOnlyResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SystemOnlyResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the SystemOnlyResource.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/EnvelopeProvisioningState",
          "description": "The status of the last operation performed on this resource."
        }
      }
    }
  },
  "parameters": {}
}
