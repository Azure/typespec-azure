{
  "swagger": "2.0",
  "info": {
    "title": "Search Service",
    "version": "2021-04-30-Preview",
    "description": "Client that can be used to manage and query indexes and documents, as well as manage other resources, on a search service.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://cognitiveservices.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "api-key",
      "in": "header"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.contoso.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://cognitiveservices.azure.com/.default": ""
      }
    }
  },
  "tags": [
    {
      "name": "DataSources"
    },
    {
      "name": "Service"
    },
    {
      "name": "Indexers"
    },
    {
      "name": "Indexes"
    },
    {
      "name": "Skillsets"
    }
  ],
  "paths": {
    "/datasources": {
      "get": {
        "operationId": "DatasourcesApis_List",
        "tags": [
          "DataSources"
        ],
        "description": "Lists all indexe data sources available for a search service.",
        "parameters": [
          {
            "$ref": "#/parameters/SelectParameter"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "$ref": "#/definitions/SearchIndexerDataSource",
                  "x-ms-client-name": "DataSources"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "post": {
        "operationId": "DatasourcesApis_Create",
        "tags": [
          "DataSources"
        ],
        "description": "Creates a new datasource.",
        "parameters": [
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The definition of the data source to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndexerDataSource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SearchIndexerDataSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/datasources('{dataSourceName}')": {
      "get": {
        "operationId": "DatasourcesApis_Get",
        "tags": [
          "DataSources"
        ],
        "description": "Retrieves an index definition.",
        "parameters": [
          {
            "name": "dataSourceName",
            "in": "path",
            "description": "The name of the data source to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SearchIndexerDataSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "put": {
        "operationId": "DatasourcesApis_CreateOrUpdate",
        "tags": [
          "DataSources"
        ],
        "description": "Creates a new search data source or updates an data source if it already exists.",
        "parameters": [
          {
            "name": "dataSourceName",
            "in": "path",
            "description": "The name of the data source to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/IgnoreResetRequirementsParameter"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          },
          {
            "$ref": "#/parameters/PreferHeaderParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The definition of the data source to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndexerDataSource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SearchIndexerDataSource"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SearchIndexerDataSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "delete": {
        "operationId": "DatasourcesApis_Delete",
        "tags": [
          "DataSources"
        ],
        "description": "Deletes a datasource.",
        "parameters": [
          {
            "name": "dataSourceName",
            "in": "path",
            "description": "The name of the data source to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexers": {
      "get": {
        "operationId": "IndexersApis_List",
        "tags": [
          "Indexers"
        ],
        "description": "Lists all indexers available for a search service.",
        "parameters": [
          {
            "$ref": "#/parameters/SelectParameter"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "$ref": "#/definitions/SearchIndexer",
                  "x-ms-client-name": "Indexers"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "post": {
        "operationId": "IndexersApis_Create",
        "tags": [
          "Indexers"
        ],
        "description": "Creates a new search indexer.",
        "parameters": [
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The definition of the data source to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndexer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SearchIndexer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexers('{indexerName}')": {
      "get": {
        "operationId": "IndexersApis_Get",
        "tags": [
          "Indexers"
        ],
        "description": "Retrieves an indexer definition.",
        "parameters": [
          {
            "name": "indexerName",
            "in": "path",
            "description": "The name of the data source to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SearchIndexer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "put": {
        "operationId": "IndexersApis_CreateOrUpdate",
        "tags": [
          "Indexers"
        ],
        "description": "Creates a new indexer or updates an indexer if it already exists.",
        "parameters": [
          {
            "name": "indexerName",
            "in": "path",
            "description": "The name of the indexer to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/IgnoreResetRequirementsParameter"
          },
          {
            "$ref": "#/parameters/DisableCacheReprocessingChangeDetectionParameter"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          },
          {
            "$ref": "#/parameters/PreferHeaderParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The definition of the data source to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndexer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SearchIndexer"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SearchIndexer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "delete": {
        "operationId": "IndexersApis_Delete",
        "tags": [
          "Indexers"
        ],
        "description": "Deletes a indexer.",
        "parameters": [
          {
            "name": "indexerName",
            "in": "path",
            "description": "The name of the indexer to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexers('{indexerName}')/search.reset": {
      "post": {
        "operationId": "IndexersApis_Reset",
        "tags": [
          "Indexers"
        ],
        "description": "Resets the change tracking state associated with an indexer.",
        "parameters": [
          {
            "name": "indexerName",
            "in": "path",
            "description": "The name of the indexer to reset.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexers('{indexerName}')/search.resetdocs": {
      "post": {
        "operationId": "IndexersApis_ResetDocs",
        "tags": [
          "Indexers"
        ],
        "description": "Resets specific documents in the datasource to be selectively re-ingested by the indexer.",
        "parameters": [
          {
            "name": "indexerName",
            "in": "path",
            "description": "The name of the indexer to reset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "overwrite",
            "in": "query",
            "description": "If false, keys or ids will be appended to existing ones. If true, only the keys or ids in this payload will be queued to be re-ingested.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "keysOrIds",
            "in": "body",
            "description": "datasource document identifiers to be reset",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-ms-client-name": "documentKeysOrIds"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexers('{indexerName}')/search.run": {
      "post": {
        "operationId": "IndexersApis_Run",
        "tags": [
          "Indexers"
        ],
        "description": "Runs an indexer on-demand.",
        "parameters": [
          {
            "name": "indexerName",
            "in": "path",
            "description": "The name of the indexer to reset.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexers('{indexerName}')/search.status": {
      "get": {
        "operationId": "IndexersApis_GetStatus",
        "tags": [
          "Indexers"
        ],
        "description": "Returns the current status and execution history of an indexer.",
        "parameters": [
          {
            "name": "indexerName",
            "in": "path",
            "description": "The name of the indexer for which to retrieve status.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SearchIndexerStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexes": {
      "get": {
        "operationId": "Indexes_List",
        "tags": [
          "Indexes"
        ],
        "description": "Lists all indexes available for a search service.",
        "parameters": [
          {
            "$ref": "#/parameters/SelectParameter"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "$ref": "#/definitions/SearchIndex",
                  "x-ms-client-name": "Indexes"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "post": {
        "operationId": "Indexes_Create",
        "tags": [
          "Indexes"
        ],
        "description": "Creates a new search index.",
        "parameters": [
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The definition of the index to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndex"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SearchIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexes('{indexName}')": {
      "get": {
        "operationId": "Indexes_Get",
        "tags": [
          "Indexes"
        ],
        "description": "Retrieves an index definition.",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "description": "The name of the index to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SearchIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "put": {
        "operationId": "Indexes_CreateOrUpdate",
        "tags": [
          "Indexes"
        ],
        "description": "Creates a new search index or updates an index if it already exists.",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "description": "The name of the index to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "allowIndexDowntime",
            "in": "query",
            "description": "Allows new analyzers, tokenizers, token filters, or char filters to be added to an index by taking the index offline for at least a few seconds. This temporarily causes indexing and query requests to fail. Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          },
          {
            "$ref": "#/parameters/PreferHeaderParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The definition of the index to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndex"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SearchIndex"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SearchIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "delete": {
        "operationId": "Indexes_Delete",
        "tags": [
          "Indexes"
        ],
        "description": "Deletes a search index and all the documents it contains. This operation is permanent, with no recovery option. Make sure you have a master copy of your index definition, data ingestion code, and a backup of the primary data source in case you need to re-build the index.",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "description": "The name of the index to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexes('{indexName}')/search.analyze": {
      "post": {
        "operationId": "Indexes_Analyze",
        "tags": [
          "Indexes"
        ],
        "description": "Shows how an analyzer breaks text into tokens.",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "description": "The name of the index for which to test an analyzer.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The text and analyzer or analysis components to test.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyzeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AnalyzeResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/indexes('{indexName}')/search.stats": {
      "get": {
        "operationId": "Indexes_GetStatistics",
        "tags": [
          "Indexes"
        ],
        "description": "Returns statistics for the given index, including a document count and storage usage.",
        "parameters": [
          {
            "name": "indexName",
            "in": "path",
            "description": "The name of the index for which to retrieve statistics.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GetIndexStatisticsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/servicestats": {
      "get": {
        "operationId": "ServiceApis_GetServiceStatistics",
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceStatistics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/skillsets": {
      "get": {
        "operationId": "Skillsets_List",
        "tags": [
          "Skillsets"
        ],
        "description": "List all skillsets in a search service.",
        "parameters": [
          {
            "$ref": "#/parameters/SelectParameter"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "$ref": "#/definitions/SearchIndexerSkillset",
                  "x-ms-client-name": "Skillsets"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "post": {
        "operationId": "Skillsets_Create",
        "tags": [
          "Skillsets"
        ],
        "description": "Creates a new skillset in a search service.",
        "parameters": [
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The skillset containing one or more skills to create in a search service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndexerSkillset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SearchIndexerSkillset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    },
    "/skillsets('{skillsetName}')": {
      "get": {
        "operationId": "Skillsets_Get",
        "tags": [
          "Skillsets"
        ],
        "description": "Retrieves a skillset in a search service.",
        "parameters": [
          {
            "name": "skillsetName",
            "in": "path",
            "description": "The name of the skillset to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SearchIndexerSkillset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "put": {
        "operationId": "Skillsets_CreateOrUpdate",
        "tags": [
          "Skillsets"
        ],
        "description": "Creates a new skillset in a search service or updates the skillset if it already exists.",
        "parameters": [
          {
            "name": "skillsetName",
            "in": "path",
            "description": "The name of the skillset to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The skillset containing one or more skills to create or update in a search service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndexerSkillset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SearchIndexerSkillset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "post": {
        "operationId": "Skillsets_ResetSkills",
        "tags": [
          "Skillsets"
        ],
        "description": "Reset an existing skillset in a search service",
        "parameters": [
          {
            "name": "skillsetName",
            "in": "path",
            "description": "The name of the skillset to reset.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkillNames"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      },
      "delete": {
        "operationId": "Skillsets_Delete",
        "tags": [
          "Skillsets"
        ],
        "description": "Deletes a skillset in a search service.",
        "parameters": [
          {
            "name": "skillsetName",
            "in": "path",
            "description": "The name of the skillset to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ClientRequestIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/SearchError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AmlSkill": {
      "type": "object",
      "description": "The AML skill allows you to extend AI enrichment with a custom Azure Machine Learning (AML) model. Once an AML model is trained and deployed, an AML skill integrates it into AI enrichment.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "(Required for no authentication or key authentication) The scoring URI of the AML service to which the JSON payload will be sent. Only the https URI scheme is allowed."
        },
        "key": {
          "type": "string",
          "description": "(Required for key authentication) The key for the AML service."
        },
        "resourceId": {
          "type": "string",
          "description": "(Required for token authentication). The Azure Resource Manager resource ID of the AML service. It should be in the format subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.MachineLearningServices/workspaces/{workspace-name}/services/{service_name}."
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "description": "(Optional) When specified, indicates the timeout for the http client making the API call."
        },
        "region": {
          "type": "string",
          "description": "(Optional for token authentication). The region the AML service is deployed in."
        },
        "degreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "description": "(Optional) When specified, indicates the number of calls the indexer will make in parallel to the endpoint you have provided. You can decrease this value if your endpoint is failing under too high of a request load, or raise it if your endpoint is able to accept more requests and you would like an increase in the performance of the indexer. If not set, a default value of 5 is used. The degreeOfParallelism can be set to a maximum of 10 and a minimum of 1."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Custom.AmlSkill"
    },
    "AnalyzeRequest": {
      "type": "object",
      "description": "Specifies some text and analysis components used to break that text into tokens.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text to break into tokens."
        },
        "analyzer": {
          "$ref": "#/definitions/LexicalAnalyzerName",
          "description": "The name of the analyzer to use to break the given text."
        },
        "tokenizer": {
          "$ref": "#/definitions/LexicalTokenizerName",
          "description": "The name of the tokenizer to use to break the given text."
        },
        "normalizer": {
          "$ref": "#/definitions/LexicalNormalizerName",
          "description": "The name of the normalizer to use to normalize the given text."
        },
        "tokenFilters": {
          "type": "array",
          "description": "An optional list of token filters to use when breaking the given text.",
          "items": {
            "$ref": "#/definitions/TokenFilterName"
          }
        },
        "charFilters": {
          "type": "array",
          "description": "An optional list of character filters to use when breaking the given text.",
          "items": {
            "$ref": "#/definitions/CharFilterName"
          }
        }
      },
      "required": [
        "text"
      ]
    },
    "AnalyzeResult": {
      "type": "object",
      "description": "The result of testing an analyzer on text.",
      "properties": {
        "tokens": {
          "type": "array",
          "description": "The list of tokens returned by the analyzer specified in the request.",
          "items": {
            "$ref": "#/definitions/AnalyzedTokenInfo"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "tokens"
      ]
    },
    "AnalyzedTokenInfo": {
      "type": "object",
      "description": "Information about a token returned by an analyzer.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token returned by the analyzer."
        },
        "startOffset": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the first character of the token in the input text."
        },
        "endOffset": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the last character of the token in the input text."
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "The position of the token in the input text relative to other tokens. The first token in the input text has position 0, the next has position 1, and so on. Depending on the analyzer used, some tokens might have the same position, for example if they are synonyms of each other."
        }
      },
      "required": [
        "token",
        "startOffset",
        "endOffset",
        "position"
      ]
    },
    "AsciiFoldingTokenFilter": {
      "type": "object",
      "description": "Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if such equivalents exist. This token filter is implemented using Apache Lucene.",
      "properties": {
        "preserveOriginal": {
          "type": "boolean",
          "description": "A value indicating whether the original token will be kept. Default is false.",
          "default": false
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.AsciiFoldingTokenFilter"
    },
    "AzureActiveDirectoryApplicationCredentials": {
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "string",
          "description": "An AAD Application ID that was granted the required access permissions to the Azure Key Vault that is to be used when encrypting your data at rest. The Application ID should not be confused with the Object ID for your AAD Application."
        },
        "applicationSecret": {
          "type": "string",
          "description": "The authentication key of the specified AAD application."
        }
      }
    },
    "BM25Similarity": {
      "type": "object",
      "description": "Ranking function based on the Okapi BM25 similarity algorithm. BM25 is a TF-IDF-like algorithm that includes length normalization (controlled by the 'b' parameter) as well as term frequency saturation (controlled by the 'k1' parameter).",
      "properties": {
        "k1": {
          "type": "number",
          "format": "double",
          "description": "This property controls the scaling function between the term frequency of each matching terms and the final relevance score of a document-query pair. By default, a value of 1.2 is used. A value of 0.0 means the score does not scale with an increase in term frequency."
        },
        "b": {
          "type": "number",
          "format": "double",
          "description": "This property controls how the length of a document affects the relevance score. By default, a value of 0.75 is used. A value of 0.0 means no length normalization is applied, while a value of 1.0 means the score is fully normalized by the length of the document."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Similarity"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.BM25Similarity"
    },
    "BlobIndexerDataToExtract": {
      "type": "string",
      "description": "Specifies the data to extract from Azure blob storage and tells the indexer which data to extract from image content when \"imageAction\" is set to a value other than \"none\".  This applies to embedded image content in a .PDF or other application, or image files such as .jpg and .png, in Azure blobs.",
      "enum": [
        "storageMetadata",
        "allMetadata",
        "contentAndMetadata"
      ],
      "x-ms-enum": {
        "name": "BlobIndexerDataToExtract",
        "modelAsString": true,
        "values": [
          {
            "name": "StorageMetadata",
            "value": "storageMetadata",
            "description": "Indexes just the standard blob properties and user-specified metadata."
          },
          {
            "name": "AllMetadata",
            "value": "allMetadata",
            "description": "Extracts metadata provided by the Azure blob storage subsystem and the content-type specific metadata (for example, metadata unique to just .png files are indexed)."
          },
          {
            "name": "ContentAndMetadata",
            "value": "contentAndMetadata",
            "description": "Extracts all metadata and textual content from each blob."
          }
        ]
      }
    },
    "BlobIndexerImageAction": {
      "type": "string",
      "description": "Determines how to process embedded images and image files in Azure blob storage.  Setting the \"imageAction\" configuration to any value other than \"none\" requires that a skillset also be attached to that indexer.",
      "enum": [
        "none",
        "generateNormalizedImages",
        "generateNormalizedImagePerPage"
      ],
      "x-ms-enum": {
        "name": "BlobIndexerImageAction",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none",
            "description": "Ignores embedded images or image files in the data set.  This is the default."
          },
          {
            "name": "GenerateNormalizedImages",
            "value": "generateNormalizedImages",
            "description": "Extracts text from images (for example, the word \"STOP\" from a traffic stop sign), and embeds it into the content field.  This action requires that \"dataToExtract\" is set to \"contentAndMetadata\".  A normalized image refers to additional processing resulting in uniform image output, sized and rotated to promote consistent rendering when you include images in visual search results. This information is generated for each image when you use this option."
          },
          {
            "name": "GenerateNormalizedImagePerPage",
            "value": "generateNormalizedImagePerPage",
            "description": "Extracts text from images (for example, the word \"STOP\" from a traffic stop sign), and embeds it into the content field, but treats PDF files differently in that each page will be rendered as an image and normalized accordingly, instead of extracting embedded images.  Non-PDF file types will be treated the same as if \"generateNormalizedImages\" was set."
          }
        ]
      }
    },
    "BlobIndexerPDFTextRotationAlgorithm": {
      "type": "string",
      "description": "Determines algorithm for text extraction from PDF files in Azure blob storage.",
      "enum": [
        "none",
        "detectAngles"
      ],
      "x-ms-enum": {
        "name": "BlobIndexerPDFTextRotationAlgorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none",
            "description": "Leverages normal text extraction.  This is the default."
          },
          {
            "name": "DetectAngles",
            "value": "detectAngles",
            "description": "May produce better and more readable text extraction from PDF files that have rotated text within them.  Note that there may be a small performance speed impact when this parameter is used.  This parameter only applies to PDF files, and only to PDFs with embedded text.  If the rotated text appears within an embedded image in the PDF, this parameter does not apply."
          }
        ]
      }
    },
    "BlobIndexerParsingMode": {
      "type": "string",
      "description": "Represents the parsing mode for indexing from an Azure blob data source.",
      "enum": [
        "default",
        "text",
        "delimitedText",
        "json",
        "jsonArray",
        "jsonLines"
      ],
      "x-ms-enum": {
        "name": "BlobIndexerParsingMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "default",
            "description": "Set to default for normal file processing."
          },
          {
            "name": "Text",
            "value": "text",
            "description": "Set to text to improve indexing performance on plain text files in blob storage."
          },
          {
            "name": "DelimitedText",
            "value": "delimitedText",
            "description": "Set to delimitedText when blobs are plain CSV files."
          },
          {
            "name": "Json",
            "value": "json",
            "description": "Set to json to extract structured content from JSON files."
          },
          {
            "name": "JsonArray",
            "value": "jsonArray",
            "description": "Set to jsonArray to extract individual elements of a JSON array as separate documents in Azure Cognitive Search."
          },
          {
            "name": "JsonLines",
            "value": "jsonLines",
            "description": "Set to jsonLines to extract individual JSON entities, separated by a new line, as separate documents in Azure Cognitive Search."
          }
        ]
      }
    },
    "CharFilter": {
      "type": "object",
      "description": "Base type for character filters.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Discriminator property for CharFilter."
        },
        "name": {
          "type": "string",
          "description": "The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters."
        }
      },
      "discriminator": "@odata.type",
      "required": [
        "@odata.type",
        "name"
      ]
    },
    "CharFilterName": {
      "type": "string",
      "description": "Defines the names of all character filters supported by Azure Cognitive Search.",
      "enum": [
        "html_strip"
      ],
      "x-ms-enum": {
        "name": "CharFilterName",
        "modelAsString": true,
        "values": [
          {
            "name": "HtmlStrip",
            "value": "html_strip",
            "description": "A character filter that attempts to strip out HTML constructs. See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.html"
          }
        ]
      }
    },
    "CjkBigramTokenFilter": {
      "type": "object",
      "description": "Forms bigrams of CJK terms that are generated from the standard tokenizer. This token filter is implemented using Apache Lucene.",
      "properties": {
        "ignoreScripts": {
          "type": "array",
          "description": "The scripts to ignore.",
          "items": {
            "$ref": "#/definitions/CjkBigramTokenFilterScripts"
          }
        },
        "outputUnigrams": {
          "type": "boolean",
          "description": "Forms bigrams of CJK terms that are generated from the standard tokenizer. This token filter is implemented using Apache Lucene."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.CjkBigramTokenFilter"
    },
    "CjkBigramTokenFilterScripts": {
      "type": "string",
      "description": "Scripts that can be ignored by CjkBigramTokenFilter.",
      "enum": [
        "han",
        "hiragana",
        "katakana",
        "hangul"
      ],
      "x-ms-enum": {
        "name": "CjkBigramTokenFilterScripts",
        "modelAsString": true,
        "values": [
          {
            "name": "Han",
            "value": "han",
            "description": "Ignore Han script when forming bigrams of CJK terms."
          },
          {
            "name": "Hiragana",
            "value": "hiragana",
            "description": "Ignore Hiragana script when forming bigrams of CJK terms."
          },
          {
            "name": "Katakana",
            "value": "katakana",
            "description": "Ignore Katakana script when forming bigrams of CJK terms."
          },
          {
            "name": "Hangul",
            "value": "hangul",
            "description": "Ignore Hangul script when forming bigrams of CJK terms."
          }
        ]
      }
    },
    "ClassicSimilarity": {
      "type": "object",
      "description": "Legacy similarity algorithm which uses the Lucene TFIDFSimilarity implementation of TF-IDF. This variation of TF-IDF introduces static document length normalization as well as coordinating factors that penalize documents that only partially match the searched queries.",
      "allOf": [
        {
          "$ref": "#/definitions/Similarity"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.ClassicSimilarity"
    },
    "ClassicTokenizer": {
      "type": "object",
      "description": "Grammar-based tokenizer that is suitable for processing most European-language documents. This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "maxTokenLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.",
          "default": 255,
          "maximum": 300
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.ClassicTokenizer"
    },
    "CognitiveServicesAccount": {
      "type": "object",
      "description": "Base type for describing any cognitive service resource attached to a skillset.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the cognitive service resource attached to a skillset."
        }
      },
      "required": [
        "description"
      ]
    },
    "CognitiveServicesAccountKey": {
      "type": "object",
      "description": "A cognitive service resource provisioned with a key that is attached to a skillset.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Azure.Search.CognitiveServicesByKey"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "key": {
          "type": "string",
          "description": "The key used to provision the cognitive service resource attached to a skillset."
        }
      },
      "required": [
        "@odata.type",
        "key"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CognitiveServicesAccount"
        }
      ]
    },
    "CommonGramTokenFilter": {
      "type": "object",
      "description": "Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. This token filter is implemented using Apache Lucene.",
      "properties": {
        "commonWords": {
          "type": "array",
          "description": "The set of common words.",
          "items": {
            "type": "string"
          }
        },
        "ignoreCase": {
          "type": "boolean",
          "description": "A value indicating whether common words matching will be case insensitive. Default is false.",
          "default": false
        },
        "queryMode": {
          "type": "boolean",
          "description": "A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false.",
          "x-ms-client-name": "useQueryMode"
        }
      },
      "required": [
        "commonWords"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.CommonGramTokenFilter"
    },
    "ConditionalSkill": {
      "type": "object",
      "description": "A skill that enables scenarios that require a Boolean operation to determine the data to assign to an output.",
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Util.ConditionalSkill"
    },
    "CorsOptions": {
      "type": "object",
      "description": "Defines options to control Cross-Origin Resource Sharing (CORS) for an index.",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "description": "The list of origins from which JavaScript code will be granted access to your index. Can contain a list of hosts of the form {protocol}://{fully-qualified-domain-name}[:{port#}], or a single '*' to allow all origins (not recommended).",
          "items": {
            "type": "string"
          }
        },
        "maxAgeInSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "The duration for which browsers should cache CORS preflight responses. Defaults to 5 minutes."
        }
      },
      "required": [
        "allowedOrigins"
      ]
    },
    "CustomAnalyzer": {
      "type": "object",
      "description": "Allows you to take control over the process of converting text into indexable/searchable tokens. It's a user-defined configuration consisting of a single predefined tokenizer and one or more filters. The tokenizer is responsible for breaking text into tokens, and the filters for modifying tokens emitted by the tokenizer.",
      "properties": {
        "tokenizer": {
          "$ref": "#/definitions/LexicalTokenizerName",
          "description": "The name of the tokenizer to use to divide continuous text into a sequence of tokens, such as breaking a sentence into words."
        },
        "tokenFilters": {
          "type": "array",
          "description": "A list of token filters used to filter out or modify the tokens generated by a tokenizer. For example, you can specify a lowercase filter that converts all characters to lowercase. The filters are run in the order in which they are listed.",
          "items": {
            "$ref": "#/definitions/TokenFilterName"
          }
        },
        "charFilters": {
          "type": "array",
          "description": "A list of character filters used to prepare input text before it is processed by the tokenizer. For instance, they can replace certain characters or symbols. The filters are run in the order in which they are listed.",
          "items": {
            "$ref": "#/definitions/CharFilterName"
          }
        }
      },
      "required": [
        "tokenizer"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/LexicalAnalyzer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.CustomAnalyzer"
    },
    "CustomEntity": {
      "type": "object",
      "description": "An object that contains information about the matches that were found, and related metadata.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The top-level entity descriptor. Matches in the skill output will be grouped by this name, and it should represent the \"normalized\" form of the text being found."
        },
        "description": {
          "type": "string",
          "description": "This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output."
        },
        "type": {
          "type": "string",
          "description": "This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output."
        },
        "subtype": {
          "type": "string",
          "description": "This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output."
        },
        "id": {
          "type": "string",
          "description": "This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output."
        },
        "caseSensitive": {
          "type": "boolean",
          "description": "Defaults to false. Boolean value denoting whether comparisons with the entity name should be sensitive to character casing. Sample case insensitive matches of \"Microsoft\" could be: microsoft, microSoft, MICROSOFT.",
          "default": false
        },
        "accentSensitive": {
          "type": "boolean",
          "description": "Defaults to false. Boolean value denoting whether comparisons with the entity name should be sensitive to accent.",
          "default": false
        },
        "fuzzyEditDistance": {
          "type": "integer",
          "format": "int32",
          "description": "Defaults to 0. Maximum value of 5. Denotes the acceptable number of divergent characters that would still constitute a match with the entity name. The smallest possible fuzziness for any given match is returned. For instance, if the edit distance is set to 3, \"Windows10\" would still match \"Windows\", \"Windows10\" and \"Windows 7\". When case sensitivity is set to false, case differences do NOT count towards fuzziness tolerance, but otherwise do.",
          "default": 0
        },
        "defaultCaseSensitive": {
          "type": "boolean",
          "description": "Changes the default case sensitivity value for this entity. It be used to change the default value of all aliases caseSensitive values."
        },
        "defaultAccentSensitive": {
          "type": "boolean",
          "description": "Changes the default case sensitivity value for this entity. It be used to change the default value of all aliases caseSensitive values."
        },
        "defaultFuzzyEditDistance": {
          "type": "integer",
          "format": "int32",
          "description": "Changes the default fuzzy edit distance value for this entity. It can be used to change the default value of all aliases fuzzyEditDistance values."
        },
        "aliases": {
          "type": "array",
          "description": "An array of complex objects that can be used to specify alternative spellings or synonyms to the root entity name.",
          "items": {
            "$ref": "#/definitions/CustomEntityAlias"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "CustomEntityAlias": {
      "type": "object",
      "description": "A complex object that can be used to specify alternative spellings or synonyms to the root entity name.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text of the alias."
        },
        "caseSensitive": {
          "type": "boolean",
          "description": "Determine if the alias is case sensitive."
        },
        "accentSensitive": {
          "type": "boolean",
          "description": "Determine if the alias is accent sensitive."
        },
        "fuzzyEditDistance": {
          "type": "integer",
          "format": "int32",
          "description": "Determine the fuzzy edit distance of the alias."
        }
      },
      "required": [
        "text"
      ]
    },
    "CustomEntityLookupSkill": {
      "type": "object",
      "description": "A skill looks for text from a custom, user-defined list of words and phrases.",
      "properties": {
        "defaultLanguageCode": {
          "$ref": "#/definitions/CustomEntityLookupSkillLanguage",
          "description": "A value indicating which language code to use. Default is en."
        },
        "entitiesDefinitionUri": {
          "type": "string",
          "description": "Path to a JSON or CSV file containing all the target text to match against. This entity definition is read at the beginning of an indexer run. Any updates to this file during an indexer run will not take effect until subsequent runs. This config must be accessible over HTTPS."
        },
        "inlineEntitiesDefinition": {
          "type": "array",
          "description": "The inline CustomEntity definition.",
          "items": {
            "$ref": "#/definitions/CustomEntity"
          }
        },
        "globalDefaultCaseSensitive": {
          "type": "boolean",
          "description": "A global flag for CaseSensitive. If CaseSensitive is not set in CustomEntity, this value will be the default value."
        },
        "globalDefaultAccentSensitive": {
          "type": "boolean",
          "description": "A global flag for AccentSensitive. If AccentSensitive is not set in CustomEntity, this value will be the default value."
        },
        "globalDefaultFuzzyEditDistance": {
          "type": "integer",
          "format": "int32",
          "description": "A global flag for FuzzyEditDistance. If FuzzyEditDistance is not set in CustomEntity, this value will be the default value."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.CustomEntityLookupSkill"
    },
    "CustomEntityLookupSkillLanguage": {
      "type": "string",
      "description": "The language codes supported for input text by CustomEntityLookupSkill.",
      "enum": [
        "da",
        "de",
        "en",
        "es",
        "fi",
        "fr",
        "it",
        "ko",
        "pt"
      ],
      "x-ms-enum": {
        "name": "CustomEntityLookupSkillLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "da",
            "value": "da",
            "description": "Danish"
          },
          {
            "name": "de",
            "value": "de",
            "description": "German"
          },
          {
            "name": "en",
            "value": "en",
            "description": "English"
          },
          {
            "name": "es",
            "value": "es",
            "description": "Spanish"
          },
          {
            "name": "fi",
            "value": "fi",
            "description": "Finnish"
          },
          {
            "name": "fr",
            "value": "fr",
            "description": "French"
          },
          {
            "name": "it",
            "value": "it",
            "description": "Italian"
          },
          {
            "name": "ko",
            "value": "ko",
            "description": "Korean"
          },
          {
            "name": "pt",
            "value": "pt",
            "description": "Portuguese"
          }
        ]
      }
    },
    "CustomNormalizer": {
      "type": "object",
      "description": "Allows you to configure normalization for filterable, sortable, and facetable fields, which by default operate with strict matching. This is a user-defined configuration consisting of at least one or more filters, which modify the token that is stored.",
      "properties": {
        "tokenFilters": {
          "type": "array",
          "description": "A list of token filters used to filter out or modify the input token. For example, you can specify a lowercase filter that converts all characters to lowercase. The filters are run in the order in which they are listed.",
          "items": {
            "$ref": "#/definitions/TokenFilterName"
          }
        },
        "charFilters": {
          "$ref": "#/definitions/CharFilterName",
          "description": "A list of character filters used to prepare input text before it is processed. For instance, they can replace certain characters or symbols. The filters are run in the order in which they are listed."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalNormalizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.CustomNormalizer"
    },
    "DataChangeDetectionPolicy": {
      "type": "object",
      "description": "Base type for data change detection policies.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Identifies the concrete type of the data change detection policy."
        }
      },
      "required": [
        "@odata.type"
      ]
    },
    "DataDeletionDetectionPolicy": {
      "type": "object",
      "description": "Base type for data deletion detection policies.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Identifies the concrete type of the data deletion detection policy."
        }
      },
      "required": [
        "@odata.type"
      ]
    },
    "DataSourceCredentials": {
      "type": "object",
      "description": "Represents credentials that can be used to connect to a datasource.",
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "The connection string for the datasource. Set to '<unchanged>' if you do not want the connection string updated."
        }
      }
    },
    "DefaultCognitiveServicesAccount": {
      "type": "object",
      "description": "An empty object that represents the default cognitive service resource for a skillset.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Azure.Search.DefaultCognitiveServices"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "@odata.type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CognitiveServicesAccount"
        }
      ]
    },
    "DictionaryDecompounderTokenFilter": {
      "type": "object",
      "description": "Decomposes compound words found in many Germanic languages. This token filter is implemented using Apache Lucene.",
      "properties": {
        "wordList": {
          "type": "array",
          "description": "The list of words to match against.",
          "items": {
            "type": "string"
          }
        },
        "minWordSize": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum word size. Only words longer than this get processed. Default is 5. Maximum is 300.",
          "default": 5,
          "maximum": 300
        },
        "minSubwordSize": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum subword size. Only words longer than this get processed. Default is 5. Maximum is 300.",
          "default": 2,
          "maximum": 300
        },
        "maxSubwordSize": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum subword size. Only words longer than this get processed. Default is 5. Maximum is 300.",
          "default": 15,
          "maximum": 300
        },
        "onlyLongestMatch": {
          "type": "boolean",
          "description": "A value indicating whether to add only the longest matching subword to the output. Default is false.",
          "default": false
        }
      },
      "required": [
        "wordList"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.DictionaryDecompounderTokenFilter"
    },
    "DistanceScoringFunction": {
      "type": "object",
      "description": "Defines a function that boosts scores based on distance from a geographic location.",
      "properties": {
        "distance": {
          "$ref": "#/definitions/DistanceScoringParameters",
          "description": "Parameter values for the distance scoring function."
        }
      },
      "required": [
        "distance"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScoringFunction"
        }
      ],
      "x-ms-discriminator-value": "distance"
    },
    "DistanceScoringParameters": {
      "type": "object",
      "description": "Provides parameter values to a distance scoring function.",
      "properties": {
        "referencePointParameter": {
          "type": "string",
          "description": "The name of the parameter passed in search queries to specify the reference location."
        },
        "boostingDistance": {
          "type": "number",
          "format": "double",
          "description": "The distance in kilometers from the reference location where the boosting range ends."
        }
      },
      "required": [
        "referencePointParameter",
        "boostingDistance"
      ]
    },
    "DocumentExtractionSkill": {
      "type": "object",
      "description": "A skill that extracts content from a file within the enrichment pipeline.",
      "properties": {
        "parsingMode": {
          "type": "string",
          "description": "The parsingMode for the skill. Will be set to 'default' if not defined."
        },
        "dataToExtract": {
          "type": "string",
          "description": "The type of data to be extracted for the skill. Will be set to 'contentAndMetadata' if not defined."
        },
        "configuration": {
          "type": "object",
          "description": "A dictionary of configurations for the skill.",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Util.DocumentExtractionSkill"
    },
    "ETag": {
      "type": "object",
      "properties": {
        "@odata.etag": {
          "type": "string",
          "description": "The ETag of the resource.",
          "x-ms-client-name": "eTag"
        }
      },
      "required": [
        "@odata.etag"
      ]
    },
    "EdgeNGramTokenFilter": {
      "type": "object",
      "description": "Generates n-grams of the given size(s) starting from the front or the back of an input token. This token filter is implemented using Apache Lucene.",
      "properties": {
        "minGram": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum n-gram length. Default is 1. Must be less than the value of maxGram.",
          "default": 1
        },
        "maxGram": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum n-gram length. Default is 2.",
          "default": 2
        },
        "side": {
          "$ref": "#/definitions/EdgeNGramTokenFilterSide",
          "description": "Specifies which side of the input the n-gram should be generated from. Default is \"front\"."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.EdgeNGramTokenFilter"
    },
    "EdgeNGramTokenFilterSide": {
      "type": "string",
      "description": "Specifies which side of the input an n-gram should be generated from.",
      "enum": [
        "front",
        "back"
      ],
      "x-ms-enum": {
        "name": "EdgeNGramTokenFilterSide",
        "modelAsString": true,
        "values": [
          {
            "name": "Front",
            "value": "front",
            "description": "Specifies that the n-gram should be generated from the front of the input."
          },
          {
            "name": "Back",
            "value": "back",
            "description": "Specifies that the n-gram should be generated from the back of the input."
          }
        ]
      }
    },
    "EdgeNGramTokenFilterV2": {
      "type": "object",
      "description": "Generates n-grams of the given size(s) starting from the front or the back of an input token. This token filter is implemented using Apache Lucene.",
      "properties": {
        "minGram": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum n-gram length. Default is 1. Must be less than the value of maxGram.",
          "default": 1
        },
        "maxGram": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum n-gram length. Default is 2.",
          "default": 2
        },
        "side": {
          "$ref": "#/definitions/EdgeNGramTokenFilterSide",
          "description": "Specifies which side of the input the n-gram should be generated from. Default is \"front\"."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.EdgeNGramTokenFilterV2"
    },
    "EdgeNGramTokenizer": {
      "type": "object",
      "description": "Tokenizes the input from an edge into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "minGram": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram.",
          "default": 1,
          "maximum": 300
        },
        "maxGram": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum n-gram length. Default is 2. Maximum is 300.",
          "default": 2,
          "maximum": 300
        },
        "tokenChars": {
          "type": "array",
          "description": "Character classes to keep in the tokens.",
          "items": {
            "$ref": "#/definitions/TokenCharacterKind"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.EdgeNGramTokenizer"
    },
    "ElisionTokenFilter": {
      "type": "object",
      "description": "Removes elisions. For example, \"l'avion\" (the plane) will be converted to \"avion\" (plane). This token filter is implemented using Apache Lucene.",
      "properties": {
        "articles": {
          "type": "array",
          "description": "The set of articles to remove.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.ElisionTokenFilter"
    },
    "EntityCategory": {
      "type": "string",
      "description": "A string indicating what entity categories to return.",
      "enum": [
        "location",
        "organization",
        "person",
        "quantity",
        "datetime",
        "url",
        "email"
      ],
      "x-ms-enum": {
        "name": "EntityCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "Location",
            "value": "location",
            "description": "Entities describing a physical location."
          },
          {
            "name": "Organization",
            "value": "organization",
            "description": "Entities describing an organization."
          },
          {
            "name": "Person",
            "value": "person",
            "description": "Entities describing a person."
          },
          {
            "name": "Quantity",
            "value": "quantity",
            "description": "Entities describing a quantity."
          },
          {
            "name": "Datetime",
            "value": "datetime",
            "description": "Entities describing a date and time."
          },
          {
            "name": "Url",
            "value": "url",
            "description": "Entities describing a URL."
          },
          {
            "name": "Email",
            "value": "email",
            "description": "Entities describing an email address."
          }
        ]
      }
    },
    "EntityLinkingSkill": {
      "type": "object",
      "description": "Using the Text Analytics API, extracts linked entities from text.",
      "properties": {
        "defaultLanguageCode": {
          "type": "string",
          "description": "A value indicating which language code to use. Default is en."
        },
        "minimumPrecision": {
          "type": "number",
          "format": "double",
          "description": "A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included.",
          "minimum": 0,
          "maximum": 1
        },
        "modelVersion": {
          "type": "string",
          "description": "The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.V3.EntityLinkingSkill"
    },
    "EntityRecognitionSkill": {
      "type": "object",
      "description": "Text analytics entity recognition.",
      "properties": {
        "categories": {
          "type": "array",
          "description": "A list of entity categories that should be extracted.",
          "items": {
            "$ref": "#/definitions/EntityCategory"
          }
        },
        "defaultLanguageCode": {
          "$ref": "#/definitions/EntityRecognitionSkillLanguage",
          "description": "A value indicating which language code to use. Default is en."
        },
        "includeTypelessEntities": {
          "type": "boolean",
          "description": "Determines whether or not to include entities which are well known but don't conform to a pre-defined type. If this configuration is not set (default), set to null or set to false, entities which don't conform to one of the pre-defined types will not be surfaced."
        },
        "minimumPrecision": {
          "type": "number",
          "format": "double",
          "description": "A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.EntityRecognitionSkill"
    },
    "EntityRecognitionSkillLanguage": {
      "type": "string",
      "description": "The language codes supported for input text by EntityRecognitionSkill.",
      "enum": [
        "ar",
        "cs",
        "zh-Hans",
        "zh-Hant",
        "da",
        "nl",
        "en",
        "fi",
        "fr",
        "de",
        "el",
        "hu",
        "it",
        "ja",
        "ko",
        "no",
        "pl",
        "pt-PT",
        "pt-BR",
        "ru",
        "es",
        "sv",
        "tr"
      ],
      "x-ms-enum": {
        "name": "EntityRecognitionSkillLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "ar",
            "value": "ar",
            "description": "Arabic"
          },
          {
            "name": "cs",
            "value": "cs",
            "description": "Czech"
          },
          {
            "name": "zh-Hans",
            "value": "zh-Hans",
            "description": "Chinese-Simplified"
          },
          {
            "name": "zh-Hant",
            "value": "zh-Hant",
            "description": "Chinese-Traditional"
          },
          {
            "name": "da",
            "value": "da",
            "description": "Danish"
          },
          {
            "name": "nl",
            "value": "nl",
            "description": "Dutch"
          },
          {
            "name": "en",
            "value": "en",
            "description": "English"
          },
          {
            "name": "fi",
            "value": "fi",
            "description": "Finnish"
          },
          {
            "name": "fr",
            "value": "fr",
            "description": "French"
          },
          {
            "name": "de",
            "value": "de",
            "description": "German"
          },
          {
            "name": "el",
            "value": "el",
            "description": "Greek"
          },
          {
            "name": "hu",
            "value": "hu",
            "description": "Hungarian"
          },
          {
            "name": "it",
            "value": "it",
            "description": "Italian"
          },
          {
            "name": "ja",
            "value": "ja",
            "description": "Japanese"
          },
          {
            "name": "ko",
            "value": "ko",
            "description": "Korean"
          },
          {
            "name": "no",
            "value": "no",
            "description": "Norwegian (Bokmaal)"
          },
          {
            "name": "pl",
            "value": "pl",
            "description": "Polish"
          },
          {
            "name": "pt-PT",
            "value": "pt-PT",
            "description": "Portuguese (Portugal)"
          },
          {
            "name": "pt-BR",
            "value": "pt-BR",
            "description": "Portuguese (Brazil)"
          },
          {
            "name": "ru",
            "value": "ru",
            "description": "Russian"
          },
          {
            "name": "es",
            "value": "es",
            "description": "Spanish"
          },
          {
            "name": "sv",
            "value": "sv",
            "description": "Swedish"
          },
          {
            "name": "tr",
            "value": "tr",
            "description": "Turkish"
          }
        ]
      }
    },
    "EntityRecognitionSkillV3": {
      "type": "object",
      "description": "Using the Text Analytics API, extracts entities of different types from text.",
      "properties": {
        "categories": {
          "type": "array",
          "description": "A list of entity categories that should be extracted.",
          "items": {
            "type": "string"
          }
        },
        "defaultLanguageCode": {
          "type": "string",
          "description": "A value indicating which language code to use. Default is en."
        },
        "minimumPrecision": {
          "type": "number",
          "format": "double",
          "description": "A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included.",
          "minimum": 0,
          "maximum": 1
        },
        "modelVersion": {
          "type": "string",
          "description": "The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.V3.EntityRecognitionSkill"
    },
    "FieldMapping": {
      "type": "object",
      "description": "Defines a mapping between a field in a data source and a target field in an index.",
      "properties": {
        "sourceFieldName": {
          "type": "string",
          "description": "The name of the field in the data source."
        },
        "targetFieldName": {
          "type": "string",
          "description": "The name of the target field in the index. Same as the source field name by default."
        },
        "mappingFunction": {
          "$ref": "#/definitions/FieldMappingFunction",
          "description": "A function to apply to each source field value before indexing."
        }
      },
      "required": [
        "sourceFieldName"
      ]
    },
    "FieldMappingFunction": {
      "type": "object",
      "description": "Represents a function that transforms a value from a data source before indexing.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the field mapping function."
        },
        "parameters": {
          "type": "object",
          "description": "A dictionary of parameter name/value pairs to pass to the function. Each value must be of a primitive type.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "FreshnessScoringFunction": {
      "type": "object",
      "description": "Defines a function that boosts scores based on the value of a date-time field.",
      "properties": {
        "freshness": {
          "$ref": "#/definitions/FreshnessScoringParameters",
          "description": "Parameter values for the freshness scoring function."
        }
      },
      "required": [
        "freshness"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScoringFunction"
        }
      ],
      "x-ms-discriminator-value": "freshness"
    },
    "FreshnessScoringParameters": {
      "type": "object",
      "description": "Provides parameter values to a freshness scoring function.",
      "properties": {
        "boostingDuration": {
          "type": "string",
          "format": "duration",
          "description": "The expiration period after which boosting will stop for a particular document."
        }
      },
      "required": [
        "boostingDuration"
      ]
    },
    "GetIndexStatisticsResult": {
      "type": "object",
      "description": "Statistics for a given index. Statistics are collected periodically and are not guaranteed to always be up-to-date.",
      "properties": {
        "documentCount": {
          "type": "integer",
          "format": "int64",
          "description": "The number of documents in the index."
        },
        "storageSize": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of storage in bytes consumed by the index."
        }
      },
      "required": [
        "documentCount",
        "storageSize"
      ]
    },
    "ImageAnalysisSkill": {
      "type": "object",
      "description": "A skill that analyzes image files. It extracts a rich set of visual features based on the image content.",
      "properties": {
        "defaultLanguageCode": {
          "$ref": "#/definitions/ImageAnalysisSkillLanguage",
          "description": "A value indicating which language code to use. Default is en."
        },
        "visualFeatures": {
          "type": "array",
          "description": "A list of visual features.",
          "items": {
            "$ref": "#/definitions/VisualFeature"
          }
        },
        "details": {
          "type": "array",
          "description": "A string indicating which domain-specific details to return.",
          "items": {
            "$ref": "#/definitions/ImageDetail"
          }
        }
      },
      "required": [
        "visualFeatures",
        "details"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Vision.ImageAnalysisSkill"
    },
    "ImageAnalysisSkillLanguage": {
      "type": "string",
      "description": "The language codes supported for input by ImageAnalysisSkill.",
      "enum": [
        "en",
        "es",
        "ja",
        "pt",
        "zh"
      ],
      "x-ms-enum": {
        "name": "ImageAnalysisSkillLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "en",
            "value": "en",
            "description": "English"
          },
          {
            "name": "es",
            "value": "es",
            "description": "Spanish"
          },
          {
            "name": "ja",
            "value": "ja",
            "description": "Japanese"
          },
          {
            "name": "pt",
            "value": "pt",
            "description": "Portuguese"
          },
          {
            "name": "zh",
            "value": "zh",
            "description": "Chinese"
          }
        ]
      }
    },
    "ImageDetail": {
      "type": "string",
      "description": "A string indicating which domain-specific details to return.",
      "enum": [
        "celebrities",
        "landmarks"
      ],
      "x-ms-enum": {
        "name": "ImageDetail",
        "modelAsString": true,
        "values": [
          {
            "name": "Celebrities",
            "value": "celebrities",
            "description": "Details recognized as celebrities."
          },
          {
            "name": "Landmarks",
            "value": "landmarks",
            "description": "Details recognized as landmarks."
          }
        ]
      }
    },
    "IndexerCurrentState": {
      "type": "object",
      "description": "Represents all of the state that defines and dictates the indexer's current execution.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/IndexingMode",
          "description": "The mode the indexer is running in."
        },
        "allDocsInitialChangeTrackingState": {
          "type": "string",
          "description": "Change tracking state used when indexing starts on all documents in the datasource."
        },
        "allDocsFinalChangeTrackingState": {
          "type": "string",
          "description": "Change tracking state value when indexing finishes on all documents in the datasource."
        },
        "resetDocsInitialChangeTrackingState": {
          "type": "string",
          "description": "Change tracking state used when indexing starts on select, reset documents in the datasource."
        },
        "resetDocsFinalChangeTrackingState": {
          "type": "string",
          "description": "Change tracking state value when indexing finishes on select, reset documents in the datasource."
        },
        "resetDocumentKeys": {
          "type": "array",
          "description": "The list of document keys that have been reset. The document key is the document's unique identifier for the data in the search index. The indexer will prioritize selectively re-ingesting these keys.",
          "items": {
            "type": "string"
          }
        },
        "resetDatasourceDocumentIds": {
          "type": "array",
          "description": "The list of datasource document ids that have been reset. The datasource document id is the unique identifier for the data in the datasource. The indexer will prioritize selectively re-ingesting these ids.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IndexerExecutionEnvironment": {
      "type": "string",
      "description": "Specifies the environment in which the indexer should execute.",
      "enum": [
        "standard",
        "private"
      ],
      "x-ms-enum": {
        "name": "IndexerExecutionEnvironment",
        "modelAsString": true,
        "values": [
          {
            "name": "standard",
            "value": "standard",
            "description": "Indicates that Azure Cognitive Search can determine where the indexer should execute. This is the default environment when nothing is specified and is the recommended value."
          },
          {
            "name": "private",
            "value": "private",
            "description": "Indicates that the indexer should run with the environment provisioned specifically for the search service. This should only be specified as the execution environment if the indexer needs to access resources securely over shared private link resources."
          }
        ]
      }
    },
    "IndexerExecutionResult": {
      "type": "object",
      "description": "Represents the result of an individual indexer execution.",
      "properties": {
        "status": {
          "$ref": "#/definitions/IndexerExecutionStatus",
          "description": "The outcome of this indexer execution."
        },
        "statusDetail": {
          "$ref": "#/definitions/IndexerExecutionStatusDetail",
          "description": "The outcome of this indexer execution."
        },
        "currentState": {
          "$ref": "#/definitions/IndexerCurrentState",
          "description": "All of the state that defines and dictates the indexer's current execution."
        },
        "errorMessage": {
          "type": "string",
          "description": "The error message indicating the top-level error, if any."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of this indexer execution."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of this indexer execution, if the execution has already completed."
        },
        "errors": {
          "type": "array",
          "description": "The item-level indexing errors.",
          "items": {
            "$ref": "#/definitions/SearchIndexerError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "warnings": {
          "type": "array",
          "description": "The item-level indexing warnings.",
          "items": {
            "$ref": "#/definitions/SearchIndexerWarning"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "itemsProcessed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items that were processed during this indexer execution. This includes both successfully processed items and items where indexing was attempted but failed.",
          "readOnly": true,
          "x-ms-client-name": "itemCount"
        },
        "itemsFailed": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items that failed to be indexed during this indexer execution.",
          "readOnly": true,
          "x-ms-client-name": "failedItemCount"
        },
        "initialTrackingState": {
          "type": "string",
          "description": "Change tracking state with which an indexer execution started.",
          "readOnly": true
        },
        "finalTrackingState": {
          "type": "string",
          "description": "Change tracking state with which an indexer execution finished.",
          "readOnly": true
        }
      },
      "required": [
        "status",
        "errors",
        "warnings",
        "itemsProcessed",
        "itemsFailed"
      ]
    },
    "IndexerExecutionStatus": {
      "type": "string",
      "description": "Represents the status of an individual indexer execution.",
      "enum": [
        "transientFailure",
        "success",
        "inProgress",
        "reset"
      ],
      "x-ms-enum": {
        "name": "IndexerExecutionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "TransientFailure",
            "value": "transientFailure",
            "description": "An indexer invocation has failed, but the failure may be transient. Indexer invocations will continue per schedule."
          },
          {
            "name": "Success",
            "value": "success",
            "description": "Indexer execution completed successfully."
          },
          {
            "name": "InProgress",
            "value": "inProgress",
            "description": "Indexer execution is in progress."
          },
          {
            "name": "Reset",
            "value": "reset",
            "description": "Indexer has been reset."
          }
        ]
      }
    },
    "IndexerExecutionStatusDetail": {
      "type": "string",
      "description": "Details the status of an individual indexer execution.",
      "enum": [
        "resetDocs"
      ],
      "x-ms-enum": {
        "name": "IndexerExecutionStatusDetail",
        "modelAsString": true,
        "values": [
          {
            "name": "ResetDocs",
            "value": "resetDocs",
            "description": "Indicates that the reset that occurred was for a call to ResetDocs."
          }
        ]
      }
    },
    "IndexerStatus": {
      "type": "string",
      "description": "Represents the overall indexer status.",
      "enum": [
        "unknown",
        "error",
        "running"
      ],
      "x-ms-enum": {
        "name": "IndexerStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "unknown",
            "description": "Indicates that the indexer is in an unknown state."
          },
          {
            "name": "Error",
            "value": "error",
            "description": "Indicates that the indexer experienced an error that cannot be corrected without human intervention."
          },
          {
            "name": "Running",
            "value": "running",
            "description": "Indicates that the indexer is running normally."
          }
        ]
      }
    },
    "IndexingMode": {
      "type": "string",
      "description": "Represents the mode the indexer is executing in.",
      "enum": [
        "indexingAllDocs",
        "indexingResetDocs"
      ],
      "x-ms-enum": {
        "name": "IndexingMode",
        "modelAsString": true,
        "values": [
          {
            "name": "IndexingAllDocs",
            "value": "indexingAllDocs",
            "description": "The indexer is indexing all documents in the datasource."
          },
          {
            "name": "IndexingResetDocs",
            "value": "indexingResetDocs",
            "description": "The indexer is indexing selective, reset documents in the datasource. The documents being indexed are defined on indexer status."
          }
        ]
      }
    },
    "IndexingParameters": {
      "type": "object",
      "description": "Represents parameters for indexer execution.",
      "properties": {
        "batchSize": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items that are read from the data source and indexed as a single batch in order to improve performance. The default depends on the data source type."
        },
        "maxFailedItems": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of items that can fail indexing for indexer execution to still be considered successful. -1 means no limit. Default is 0."
        },
        "maxFailedItemsPerBatch": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of items in a single batch that can fail indexing for the batch to still be considered successful. -1 means no limit. Default is 0."
        },
        "configuration": {
          "$ref": "#/definitions/IndexingParametersConfiguration"
        }
      }
    },
    "IndexingParametersConfiguration": {
      "type": "object",
      "description": "A dictionary of indexer-specific configuration properties. Each name is the name of a specific property. Each value must be of a primitive type.",
      "properties": {
        "parsingMode": {
          "$ref": "#/definitions/BlobIndexerParsingMode"
        },
        "excludedFileNameExtensions": {
          "type": "string",
          "description": "Comma-delimited list of filename extensions to ignore when processing from Azure blob storage.  For example, you could exclude '.png, .mp4' to skip over those files during indexing."
        },
        "indexedFileNameExtensions": {
          "type": "string",
          "description": "Comma-delimited list of filename extensions to select when processing from Azure blob storage.  For example, you could focus indexing on specific application files '.docx, .pptx, .msg' to specifically include those file types."
        },
        "failOnUnsupportedContentType": {
          "type": "boolean",
          "description": "For Azure blobs, set to false if you want to continue indexing when an unsupported content type is encountered, and you don't know all the content types (file extensions) in advance.",
          "default": false
        },
        "failOnUnprocessableDocument": {
          "type": "boolean",
          "description": "For Azure blobs, set to false if you want to continue indexing if a document fails indexing.",
          "default": false
        },
        "indexStorageMetadataOnlyForOversizedDocuments": {
          "type": "boolean",
          "description": "For Azure blobs, set this property to true to still index storage metadata for blob content that is too large to process. Oversized blobs are treated as errors by default. For limits on blob size, see https://docs.microsoft.com/azure/search/search-limits-quotas-capacity.",
          "default": false
        },
        "delimitedTextHeaders": {
          "type": "string",
          "description": "For CSV blobs, specifies a comma-delimited list of column headers, useful for mapping source fields to destination fields in an index."
        },
        "delimitedTextDelimiter": {
          "type": "string",
          "description": "For CSV blobs, specifies the end-of-line single-character delimiter for CSV files where each line starts a new document (for example, \" | \")."
        },
        "firstLineContainsHeaders": {
          "type": "boolean",
          "description": "For CSV blobs, indicates that the first (non-blank) line of each blob contains headers.",
          "default": true
        },
        "documentRoot": {
          "type": "string",
          "description": "For JSON arrays, given a structured or semi-structured document, you can specify a path to the array using this property."
        },
        "dataToExtract": {
          "$ref": "#/definitions/BlobIndexerDataToExtract"
        },
        "imageAction": {
          "$ref": "#/definitions/BlobIndexerImageAction"
        },
        "allowSkillsetToReadFileData": {
          "type": "boolean",
          "description": "If true, will create a path //document//file_data that is an object representing the original file data downloaded from your blob data source.  This allows you to pass the original file data to a custom skill for processing within the enrichment pipeline, or to the Document Extraction skill.",
          "default": false
        },
        "pdfTextRotationAlgorithm": {
          "$ref": "#/definitions/BlobIndexerPDFTextRotationAlgorithm"
        },
        "executionEnvironment": {
          "$ref": "#/definitions/IndexerExecutionEnvironment"
        },
        "queryTimeout": {
          "type": "string",
          "description": "Increases the timeout beyond the 5-minute default for Azure SQL database data sources, specified in the format 'hh:mm:ss'.",
          "default": "00:05:00"
        }
      }
    },
    "IndexingSchedule": {
      "type": "object",
      "description": "Represents a schedule for indexer execution.",
      "properties": {
        "interval": {
          "type": "string",
          "description": "The interval of time between indexer executions."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when an indexer should start running."
        }
      },
      "required": [
        "interval"
      ]
    },
    "InputFieldMappingEntry": {
      "type": "object",
      "description": "Input field mapping for a skill.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the input."
        },
        "source": {
          "type": "string",
          "description": "The source of the input."
        },
        "sourceContext": {
          "type": "string",
          "description": "The source context used for selecting recursive inputs."
        },
        "inputs": {
          "type": "array",
          "description": "The recursive inputs used when creating a complex type.",
          "items": {
            "$ref": "#/definitions/InputFieldMappingEntry"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "KeepTokenFilter": {
      "type": "object",
      "description": "A token filter that only keeps tokens with text contained in a specified list of words. This token filter is implemented using Apache Lucene.",
      "properties": {
        "keepWords": {
          "type": "array",
          "description": "The list of words to keep.",
          "items": {
            "type": "string"
          }
        },
        "keepWordsCase": {
          "type": "boolean",
          "description": "A value indicating whether to lower case all words first. Default is false.",
          "default": false,
          "x-ms-client-name": "lowerCaseKeepWords"
        }
      },
      "required": [
        "keepWords"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.KeepTokenFilter"
    },
    "KeyPhraseExtractionSkill": {
      "type": "object",
      "description": "A skill that uses text analytics for key phrase extraction.",
      "properties": {
        "defaultLanguageCode": {
          "$ref": "#/definitions/KeyPhraseExtractionSkillLanguage",
          "description": "A value indicating which language code to use. Default is en."
        },
        "maxKeyPhraseCount": {
          "type": "integer",
          "format": "int32",
          "description": "A number indicating how many key phrases to return. If absent, all identified key phrases will be returned."
        },
        "modelVersion": {
          "type": "string",
          "description": "The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.KeyPhraseExtractionSkill"
    },
    "KeyPhraseExtractionSkillLanguage": {
      "type": "string",
      "description": "The language codes supported for input text by KeyPhraseExtractionSkill.",
      "enum": [
        "da",
        "nl",
        "en",
        "fi",
        "fr",
        "de",
        "it",
        "ja",
        "ko",
        "no",
        "pl",
        "pt-PT",
        "pt-BR",
        "ru",
        "es",
        "sv"
      ],
      "x-ms-enum": {
        "name": "KeyPhraseExtractionSkillLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "da",
            "value": "da",
            "description": "Danish"
          },
          {
            "name": "nl",
            "value": "nl",
            "description": "Dutch"
          },
          {
            "name": "en",
            "value": "en",
            "description": "English"
          },
          {
            "name": "fi",
            "value": "fi",
            "description": "Finnish"
          },
          {
            "name": "fr",
            "value": "fr",
            "description": "French"
          },
          {
            "name": "de",
            "value": "de",
            "description": "German"
          },
          {
            "name": "it",
            "value": "it",
            "description": "Italian"
          },
          {
            "name": "ja",
            "value": "ja",
            "description": "Japanese"
          },
          {
            "name": "ko",
            "value": "ko",
            "description": "Korean"
          },
          {
            "name": "no",
            "value": "no",
            "description": "Norwegian (Bokmaal)"
          },
          {
            "name": "pl",
            "value": "pl",
            "description": "Polish"
          },
          {
            "name": "pt-PT",
            "value": "pt-PT",
            "description": "Portuguese (Portugal)"
          },
          {
            "name": "pt-BR",
            "value": "pt-BR",
            "description": "Portuguese (Brazil)"
          },
          {
            "name": "ru",
            "value": "ru",
            "description": "Russian"
          },
          {
            "name": "es",
            "value": "es",
            "description": "Spanish"
          },
          {
            "name": "sv",
            "value": "sv",
            "description": "Swedish"
          }
        ]
      }
    },
    "KeywordMarkerTokenFilter": {
      "type": "object",
      "description": "Marks terms as keywords. This token filter is implemented using Apache Lucene.",
      "properties": {
        "keepWords": {
          "type": "array",
          "description": "A list of words to mark as keywords.",
          "items": {
            "type": "string"
          }
        },
        "ignoreCase": {
          "type": "boolean",
          "description": "A value indicating whether to ignore case. If true, all words are converted to lower case first. Default is false.",
          "default": false
        }
      },
      "required": [
        "keepWords"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.KeywordMarkerTokenFilter"
    },
    "KeywordTokenizer": {
      "type": "object",
      "description": "Emits the entire input as a single token. This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "bufferSize": {
          "type": "integer",
          "format": "int32",
          "description": "The read buffer size in bytes. Default is 256.",
          "default": 256
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.KeywordTokenizer"
    },
    "KeywordTokenizerV2": {
      "type": "object",
      "description": "Emits the entire input as a single token. This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "maxTokenLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum token length. Default is 256. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.",
          "default": 255,
          "maximum": 300
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.KeywordTokenizerV2"
    },
    "LanguageDetectionSkill": {
      "type": "object",
      "description": "A skill that detects the language of input text and reports a single language code for every document submitted on the request. The language code is paired with a score indicating the confidence of the analysis.",
      "properties": {
        "defaultCountryHint": {
          "type": "string",
          "description": "A country code to use as a hint to the language detection model if it cannot disambiguate the language."
        },
        "modelVersion": {
          "type": "string",
          "description": "The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.LanguageDetectionSkill"
    },
    "LengthTokenFilter": {
      "type": "object",
      "description": "Removes words that are too long or too short. This token filter is implemented using Apache Lucene.",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum length in characters. Default is 0. Maximum is 300. Must be less than the value of max.",
          "default": 0,
          "maximum": 300,
          "x-ms-client-name": "minLength"
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum  length in characters. Default is 0. Maximum is 300. Must be less than the value of max.",
          "default": 300,
          "maximum": 300,
          "x-ms-client-name": "maxLength"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.LengthTokenFilter"
    },
    "LexicalAnalyzer": {
      "type": "object",
      "description": "Base type for analyzers.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Discriminator property for LexicalAnalyzer."
        },
        "name": {
          "type": "string",
          "description": "The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters."
        }
      },
      "discriminator": "@odata.type",
      "required": [
        "@odata.type",
        "name"
      ]
    },
    "LexicalAnalyzerName": {
      "type": "string",
      "description": "Defines the names of all text analyzers supported by Azure Cognitive Search.",
      "enum": [
        "ar.microsoft",
        "ar.lucene",
        "hy.lucene",
        "bn.microsoft",
        "eu.lucene",
        "bg.microsoft",
        "bg.lucene",
        "ca.microsoft",
        "ca.lucene",
        "zh-Hans.microsoft",
        "zh-Hans.lucene",
        "zh-Hant.microsoft",
        "zh-Hant.lucene",
        "hr.microsoft",
        "cs.microsoft",
        "cs.lucene",
        "da.microsoft",
        "da.lucene",
        "nl.microsoft",
        "nl.lucene",
        "en.microsoft",
        "en.lucene",
        "et.microsoft",
        "fi.microsoft",
        "fi.lucene",
        "fr.microsoft",
        "fr.lucene",
        "gl.lucene",
        "de.microsoft",
        "de.lucene",
        "el.microsoft",
        "el.lucene",
        "gu.microsoft",
        "he.microsoft",
        "hi.microsoft",
        "hi.lucene",
        "hu.microsoft",
        "hu.lucene",
        "is.microsoft",
        "id.microsoft",
        "id.lucene",
        "ga.lucene",
        "it.microsoft",
        "it.lucene",
        "ja.microsoft",
        "ja.lucene",
        "kn.microsoft",
        "ko.microsoft",
        "ko.lucene",
        "lv.microsoft",
        "lv.lucene",
        "lt.microsoft",
        "ml.microsoft",
        "ms.microsoft",
        "mr.microsoft",
        "nb.microsoft",
        "no.lucene",
        "fa.lucene",
        "pl.microsoft",
        "pl.lucene",
        "pt-BR.microsoft",
        "pt-BR.lucene",
        "pt-PT.microsoft",
        "pt-PT.lucene",
        "pa.microsoft",
        "ro.microsoft",
        "ro.lucene",
        "ru.microsoft",
        "ru.lucene",
        "sr-cyrillic.microsoft",
        "sr-latin.microsoft",
        "sk.microsoft",
        "sl.microsoft",
        "es.microsoft",
        "es.lucene",
        "sv.microsoft",
        "sv.lucene",
        "ta.microsoft",
        "te.microsoft",
        "th.microsoft",
        "th.lucene",
        "tr.microsoft",
        "tr.lucene",
        "uk.microsoft",
        "ur.microsoft",
        "vi.microsoft",
        "standard.lucene",
        "standardasciifolding.lucene",
        "keyword",
        "pattern",
        "simple",
        "stop",
        "whitespace"
      ],
      "x-ms-enum": {
        "name": "LexicalAnalyzerName",
        "modelAsString": true,
        "values": [
          {
            "name": "ArMicrosoft",
            "value": "ar.microsoft",
            "description": "Microsoft analyzer for Arabic."
          },
          {
            "name": "ArLucene",
            "value": "ar.lucene",
            "description": "Lucene analyzer for Arabic."
          },
          {
            "name": "HyLucene",
            "value": "hy.lucene",
            "description": "Lucene analyzer for Armenian."
          },
          {
            "name": "BnMicrosoft",
            "value": "bn.microsoft",
            "description": "Microsoft analyzer for Bangla."
          },
          {
            "name": "EuLucene",
            "value": "eu.lucene",
            "description": "Lucene analyzer for Basque."
          },
          {
            "name": "BgMicrosoft",
            "value": "bg.microsoft",
            "description": "Microsoft analyzer for Bulgarian."
          },
          {
            "name": "BgLucene",
            "value": "bg.lucene",
            "description": "Lucene analyzer for Bulgarian."
          },
          {
            "name": "CaMicrosoft",
            "value": "ca.microsoft",
            "description": "Microsoft analyzer for Catalan."
          },
          {
            "name": "CaLucene",
            "value": "ca.lucene",
            "description": "Lucene analyzer for Catalan."
          },
          {
            "name": "ZhHansMicrosoft",
            "value": "zh-Hans.microsoft",
            "description": "Microsoft analyzer for Chinese (Simplified)."
          },
          {
            "name": "ZhHansLucene",
            "value": "zh-Hans.lucene",
            "description": "Lucene analyzer for Chinese (Simplified)."
          },
          {
            "name": "ZhHantMicrosoft",
            "value": "zh-Hant.microsoft",
            "description": "Microsoft analyzer for Chinese (Traditional)."
          },
          {
            "name": "ZhHantLucene",
            "value": "zh-Hant.lucene",
            "description": "Lucene analyzer for Chinese (Traditional)."
          },
          {
            "name": "HrMicrosoft",
            "value": "hr.microsoft",
            "description": "Microsoft analyzer for Croatian."
          },
          {
            "name": "CsMicrosoft",
            "value": "cs.microsoft",
            "description": "Microsoft analyzer for Czech."
          },
          {
            "name": "CsLucene",
            "value": "cs.lucene",
            "description": "Lucene analyzer for Czech."
          },
          {
            "name": "DaMicrosoft",
            "value": "da.microsoft",
            "description": "Microsoft analyzer for Danish."
          },
          {
            "name": "DaLucene",
            "value": "da.lucene",
            "description": "Lucene analyzer for Danish."
          },
          {
            "name": "NlMicrosoft",
            "value": "nl.microsoft",
            "description": "Microsoft analyzer for Dutch."
          },
          {
            "name": "NlLucene",
            "value": "nl.lucene",
            "description": "Lucene analyzer for Dutch."
          },
          {
            "name": "EnMicrosoft",
            "value": "en.microsoft",
            "description": "Microsoft analyzer for English."
          },
          {
            "name": "EnLucene",
            "value": "en.lucene",
            "description": "Lucene analyzer for English."
          },
          {
            "name": "EtMicrosoft",
            "value": "et.microsoft",
            "description": "Microsoft analyzer for Estonian."
          },
          {
            "name": "FiMicrosoft",
            "value": "fi.microsoft",
            "description": "Microsoft analyzer for Finnish."
          },
          {
            "name": "FiLucene",
            "value": "fi.lucene",
            "description": "Lucene analyzer for Finnish."
          },
          {
            "name": "FrMicrosoft",
            "value": "fr.microsoft",
            "description": "Microsoft analyzer for French."
          },
          {
            "name": "FrLucene",
            "value": "fr.lucene",
            "description": "Lucene analyzer for French."
          },
          {
            "name": "GlLucene",
            "value": "gl.lucene",
            "description": "Lucene analyzer for Galician."
          },
          {
            "name": "DeMicrosoft",
            "value": "de.microsoft",
            "description": "Microsoft analyzer for German."
          },
          {
            "name": "DeLucene",
            "value": "de.lucene",
            "description": "Lucene analyzer for German."
          },
          {
            "name": "ElMicrosoft",
            "value": "el.microsoft",
            "description": "Microsoft analyzer for Greek."
          },
          {
            "name": "ElLucene",
            "value": "el.lucene",
            "description": "Lucene analyzer for Greek."
          },
          {
            "name": "GuMicrosoft",
            "value": "gu.microsoft",
            "description": "Microsoft analyzer for Gujarati."
          },
          {
            "name": "HeMicrosoft",
            "value": "he.microsoft",
            "description": "Microsoft analyzer for Hebrew."
          },
          {
            "name": "HiMicrosoft",
            "value": "hi.microsoft",
            "description": "Microsoft analyzer for Hindi."
          },
          {
            "name": "HiLucene",
            "value": "hi.lucene",
            "description": "Lucene analyzer for Hindi."
          },
          {
            "name": "HuMicrosoft",
            "value": "hu.microsoft",
            "description": "Microsoft analyzer for Hungarian."
          },
          {
            "name": "HuLucene",
            "value": "hu.lucene",
            "description": "Lucene analyzer for Hungarian."
          },
          {
            "name": "IsMicrosoft",
            "value": "is.microsoft",
            "description": "Microsoft analyzer for Icelandic."
          },
          {
            "name": "IdMicrosoft",
            "value": "id.microsoft",
            "description": "Microsoft analyzer for Indonesian (Bahasa)."
          },
          {
            "name": "IdLucene",
            "value": "id.lucene",
            "description": "Lucene analyzer for Indonesian."
          },
          {
            "name": "GaLucene",
            "value": "ga.lucene",
            "description": "Lucene analyzer for Irish."
          },
          {
            "name": "ItMicrosoft",
            "value": "it.microsoft",
            "description": "Microsoft analyzer for Italian."
          },
          {
            "name": "ItLucene",
            "value": "it.lucene",
            "description": "Lucene analyzer for Italian."
          },
          {
            "name": "JaMicrosoft",
            "value": "ja.microsoft",
            "description": "Microsoft analyzer for Japanese."
          },
          {
            "name": "JaLucene",
            "value": "ja.lucene",
            "description": "Lucene analyzer for Japanese."
          },
          {
            "name": "KnMicrosoft",
            "value": "kn.microsoft",
            "description": "Microsoft analyzer for Kannada."
          },
          {
            "name": "KoMicrosoft",
            "value": "ko.microsoft",
            "description": "Microsoft analyzer for Korean."
          },
          {
            "name": "KoLucene",
            "value": "ko.lucene",
            "description": "Lucene analyzer for Korean."
          },
          {
            "name": "LvMicrosoft",
            "value": "lv.microsoft",
            "description": "Microsoft analyzer for Latvian."
          },
          {
            "name": "LvLucene",
            "value": "lv.lucene",
            "description": "Lucene analyzer for Latvian."
          },
          {
            "name": "LtMicrosoft",
            "value": "lt.microsoft",
            "description": "Microsoft analyzer for Lithuanian."
          },
          {
            "name": "MlMicrosoft",
            "value": "ml.microsoft",
            "description": "Microsoft analyzer for Malayalam."
          },
          {
            "name": "MsMicrosoft",
            "value": "ms.microsoft",
            "description": "Microsoft analyzer for Malay (Latin)."
          },
          {
            "name": "MrMicrosoft",
            "value": "mr.microsoft",
            "description": "Microsoft analyzer for Marathi."
          },
          {
            "name": "NbMicrosoft",
            "value": "nb.microsoft",
            "description": "Microsoft analyzer for Norwegian (Bokmål)."
          },
          {
            "name": "NoLucene",
            "value": "no.lucene",
            "description": "Lucene analyzer for Norwegian."
          },
          {
            "name": "FaLucene",
            "value": "fa.lucene",
            "description": "Lucene analyzer for Persian."
          },
          {
            "name": "PlMicrosoft",
            "value": "pl.microsoft",
            "description": "Microsoft analyzer for Polish."
          },
          {
            "name": "PlLucene",
            "value": "pl.lucene",
            "description": "Lucene analyzer for Polish."
          },
          {
            "name": "PtBrMicrosoft",
            "value": "pt-BR.microsoft",
            "description": "Microsoft analyzer for Portuguese (Brazil)."
          },
          {
            "name": "PtBrLucene",
            "value": "pt-BR.lucene",
            "description": "Lucene analyzer for Portuguese (Brazil)."
          },
          {
            "name": "PtPtMicrosoft",
            "value": "pt-PT.microsoft",
            "description": "Microsoft analyzer for Portuguese (Portugal)."
          },
          {
            "name": "PtPtLucene",
            "value": "pt-PT.lucene",
            "description": "Lucene analyzer for Portuguese (Portugal)."
          },
          {
            "name": "PaMicrosoft",
            "value": "pa.microsoft",
            "description": "Microsoft analyzer for Punjabi."
          },
          {
            "name": "RoMicrosoft",
            "value": "ro.microsoft",
            "description": "Microsoft analyzer for Romanian."
          },
          {
            "name": "RoLucene",
            "value": "ro.lucene",
            "description": "Lucene analyzer for Romanian."
          },
          {
            "name": "RuMicrosoft",
            "value": "ru.microsoft",
            "description": "Microsoft analyzer for Russian."
          },
          {
            "name": "RuLucene",
            "value": "ru.lucene",
            "description": "Lucene analyzer for Russian."
          },
          {
            "name": "SrCyrillicMicrosoft",
            "value": "sr-cyrillic.microsoft",
            "description": "Microsoft analyzer for Serbian (Cyrillic)."
          },
          {
            "name": "SrLatinMicrosoft",
            "value": "sr-latin.microsoft",
            "description": "Microsoft analyzer for Serbian (Latin)."
          },
          {
            "name": "SkMicrosoft",
            "value": "sk.microsoft",
            "description": "Microsoft analyzer for Slovak."
          },
          {
            "name": "SlMicrosoft",
            "value": "sl.microsoft",
            "description": "Microsoft analyzer for Slovenian."
          },
          {
            "name": "EsMicrosoft",
            "value": "es.microsoft",
            "description": "Microsoft analyzer for Spanish."
          },
          {
            "name": "EsLucene",
            "value": "es.lucene",
            "description": "Lucene analyzer for Spanish."
          },
          {
            "name": "SvMicrosoft",
            "value": "sv.microsoft",
            "description": "Microsoft analyzer for Swedish."
          },
          {
            "name": "SvLucene",
            "value": "sv.lucene",
            "description": "Lucene analyzer for Swedish."
          },
          {
            "name": "TaMicrosoft",
            "value": "ta.microsoft",
            "description": "Microsoft analyzer for Tamil."
          },
          {
            "name": "TeMicrosoft",
            "value": "te.microsoft",
            "description": "Microsoft analyzer for Telugu."
          },
          {
            "name": "ThMicrosoft",
            "value": "th.microsoft",
            "description": "Microsoft analyzer for Thai."
          },
          {
            "name": "ThLucene",
            "value": "th.lucene",
            "description": "Lucene analyzer for Thai."
          },
          {
            "name": "TrMicrosoft",
            "value": "tr.microsoft",
            "description": "Microsoft analyzer for Turkish."
          },
          {
            "name": "TrLucene",
            "value": "tr.lucene",
            "description": "Lucene analyzer for Turkish."
          },
          {
            "name": "UkMicrosoft",
            "value": "uk.microsoft",
            "description": "Microsoft analyzer for Ukrainian."
          },
          {
            "name": "UrMicrosoft",
            "value": "ur.microsoft",
            "description": "Microsoft analyzer for Urdu."
          },
          {
            "name": "ViMicrosoft",
            "value": "vi.microsoft",
            "description": "Microsoft analyzer for Vietnamese."
          },
          {
            "name": "StandardLucene",
            "value": "standard.lucene",
            "description": "Standard Lucene analyzer."
          },
          {
            "name": "StandardAsciiFoldingLucene",
            "value": "standardasciifolding.lucene",
            "description": "Standard ASCII Folding Lucene analyzer. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#Analyzers"
          },
          {
            "name": "Keyword",
            "value": "keyword",
            "description": "Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordAnalyzer.html"
          },
          {
            "name": "Pattern",
            "value": "pattern",
            "description": "Flexibly separates text into terms via a regular expression pattern. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html"
          },
          {
            "name": "Simple",
            "value": "simple",
            "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/SimpleAnalyzer.html"
          },
          {
            "name": "Stop",
            "value": "stop",
            "description": "Divides text at non-letters; Applies the lowercase and stopword token filters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html"
          },
          {
            "name": "Whitespace",
            "value": "whitespace",
            "description": "An analyzer that uses the whitespace tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceAnalyzer.html"
          }
        ]
      }
    },
    "LexicalNormalizer": {
      "type": "object",
      "description": "Base type for normalizers.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Discriminator property for LexicalNormalizer."
        },
        "name": {
          "type": "string",
          "description": "The name of the normalizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. It cannot end in '.microsoft' nor '.lucene', nor be named 'asciifolding', 'standard', 'lowercase', 'uppercase', or 'elision'."
        }
      },
      "discriminator": "@odata.type",
      "required": [
        "@odata.type",
        "name"
      ]
    },
    "LexicalNormalizerName": {
      "type": "string",
      "description": "Defines the names of all text normalizers supported by Azure Cognitive Search.",
      "enum": [
        "asciifolding",
        "elision",
        "lowercase",
        "standard",
        "uppercase"
      ],
      "x-ms-enum": {
        "name": "LexicalNormalizerName",
        "modelAsString": true,
        "values": [
          {
            "name": "Asciifolding",
            "value": "asciifolding",
            "description": "Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if such equivalents exist. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html"
          },
          {
            "name": "Elision",
            "value": "elision",
            "description": "Removes elisions. For example, \"l'avion\" (the plane) will be converted to \"avion\" (plane). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html"
          },
          {
            "name": "Lowercase",
            "value": "lowercase",
            "description": "Normalizes token text to lowercase. See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.html"
          },
          {
            "name": "Standard",
            "value": "standard",
            "description": "Standard normalizer, which consists of lowercase and asciifolding. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html"
          },
          {
            "name": "Uppercase",
            "value": "uppercase",
            "description": "Normalizes token text to uppercase. See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html"
          }
        ]
      }
    },
    "LexicalTokenizer": {
      "type": "object",
      "description": "Base type for tokenizers.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Discriminator property for LexicalTokenizer."
        },
        "name": {
          "type": "string",
          "description": "The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters."
        }
      },
      "discriminator": "@odata.type",
      "required": [
        "@odata.type",
        "name"
      ]
    },
    "LexicalTokenizerName": {
      "type": "string",
      "description": "Defines the names of all tokenizers supported by Azure Cognitive Search.",
      "enum": [
        "classic",
        "edgeNGram",
        "keyword_v2",
        "letter",
        "lowercase",
        "microsoft_language_tokenizer",
        "microsoft_language_stemming_tokenizer",
        "nGram",
        "path_hierarchy_v2",
        "pattern",
        "standard_v2",
        "uax_url_email",
        "whitespace"
      ],
      "x-ms-enum": {
        "name": "LexicalTokenizerName",
        "modelAsString": true,
        "values": [
          {
            "name": "Classic",
            "value": "classic",
            "description": "Grammar-based tokenizer that is suitable for processing most European-language documents. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html"
          },
          {
            "name": "EdgeNGram",
            "value": "edgeNGram",
            "description": "Tokenizes the input from an edge into n-grams of the given size(s). See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html"
          },
          {
            "name": "Keyword",
            "value": "keyword_v2",
            "description": "Emits the entire input as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html"
          },
          {
            "name": "Letter",
            "value": "letter",
            "description": "Divides text at non-letters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html"
          },
          {
            "name": "Lowercase",
            "value": "lowercase",
            "description": "Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html"
          },
          {
            "name": "MicrosoftLanguageTokenizer",
            "value": "microsoft_language_tokenizer",
            "description": "Divides text using language-specific rules."
          },
          {
            "name": "MicrosoftLanguageStemmingTokenizer",
            "value": "microsoft_language_stemming_tokenizer",
            "description": "Divides text using language-specific rules and reduces words to their base forms."
          },
          {
            "name": "NGram",
            "value": "nGram",
            "description": "Tokenizes the input into n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html"
          },
          {
            "name": "PathHierarchy",
            "value": "path_hierarchy_v2",
            "description": "Tokenizer for path-like hierarchies. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html"
          },
          {
            "name": "Pattern",
            "value": "pattern",
            "description": "Tokenizer that uses regex pattern matching to construct distinct tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html"
          },
          {
            "name": "Standard",
            "value": "standard_v2",
            "description": "Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html"
          },
          {
            "name": "UaxUrlEmail",
            "value": "uax_url_email",
            "description": "Tokenizes urls and emails as one token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html"
          },
          {
            "name": "Whitespace",
            "value": "whitespace",
            "description": "Divides text at whitespace. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html"
          }
        ]
      }
    },
    "LimitTokenFilter": {
      "type": "object",
      "description": "Limits the number of tokens while indexing. This token filter is implemented using Apache Lucene.",
      "properties": {
        "maxTokenCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tokens to produce. Default is 1.",
          "default": 1,
          "maximum": 300
        },
        "consumeAllTokens": {
          "type": "boolean",
          "description": "A value indicating whether all tokens from the input must be consumed even if maxTokenCount is reached. Default is false.",
          "default": false
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.LimitTokenFilter"
    },
    "LineEnding": {
      "type": "string",
      "enum": [
        "space",
        "carriageReturn",
        "lineFeed",
        "carriageReturnLineFeed"
      ],
      "x-ms-enum": {
        "name": "LineEnding",
        "modelAsString": true,
        "values": [
          {
            "name": "Space",
            "value": "space",
            "description": "Lines are separated by a single space character."
          },
          {
            "name": "CarriageReturn",
            "value": "carriageReturn",
            "description": "Lines are separated by a carriage return ('\\r') character."
          },
          {
            "name": "LineFeed",
            "value": "lineFeed",
            "description": "Lines are separated by a single line feed ('\\n') character."
          },
          {
            "name": "CarriageReturnLineFeed",
            "value": "carriageReturnLineFeed",
            "description": "Lines are separated by a carriage return and a line feed ('\\r\\n') character."
          }
        ]
      }
    },
    "LuceneStandardAnalyzer": {
      "type": "object",
      "description": "Standard Apache Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter.",
      "properties": {
        "maxTokenLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.",
          "default": 255,
          "maximum": 300
        },
        "stopwords": {
          "type": "array",
          "description": "A list of stopwords.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalAnalyzer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.StandardAnalyzer"
    },
    "LuceneStandardTokenizer": {
      "type": "object",
      "description": "Breaks text following the Unicode Text Segmentation rules. This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "maxTokenLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.",
          "default": 255,
          "maximum": 300
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.StandardTokenizer"
    },
    "LuceneStandardTokenizerV2": {
      "type": "object",
      "description": "Breaks text following the Unicode Text Segmentation rules. This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "maxTokenLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.",
          "default": 255,
          "maximum": 300
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.StandardTokenizerV2"
    },
    "MagnitudeScoringFunction": {
      "type": "object",
      "description": "Defines a function that boosts scores based on the magnitude of a numeric field.",
      "properties": {
        "magnitude": {
          "$ref": "#/definitions/MagnitudeScoringParameters",
          "description": "Parameter values for the magnitude scoring function."
        }
      },
      "required": [
        "magnitude"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScoringFunction"
        }
      ],
      "x-ms-discriminator-value": "magnitude"
    },
    "MagnitudeScoringParameters": {
      "type": "object",
      "description": "Provides parameter values to a magnitude scoring function.",
      "properties": {
        "boostingRangeStart": {
          "type": "number",
          "format": "double",
          "description": "The field value at which boosting stgarts."
        },
        "boostingRangeEnd": {
          "type": "number",
          "format": "double",
          "description": "The field value at which boosting ends."
        },
        "constantBoostBeyondRange": {
          "type": "boolean",
          "description": "A value indicating whether to apply a constant boost for field values beyond the range end value; default is false."
        }
      },
      "required": [
        "boostingRangeStart",
        "boostingRangeEnd"
      ]
    },
    "MappingCharFilter": {
      "type": "object",
      "description": "A character filter that applies mappings defined with the mappings option. Matching is greedy (longest pattern matching at a given point wins). Replacement is allowed to be the empty string. This character filter is implemented using Apache Lucene.",
      "properties": {
        "mappings": {
          "type": "array",
          "description": "A list of mappings of the following format: \"a=>b\" (all occurrences of the character \"a\" will be replaced with character \"b\").",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "mappings"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CharFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.MappingCharFilter"
    },
    "MergeSkill": {
      "type": "object",
      "description": "A skill for merging two or more strings into a single unified string, with an optional user-defined delimiter separating each component part.",
      "properties": {
        "insertPreTag": {
          "type": "string",
          "description": "The tag indicates the start of the merged text. By default, the tag is an empty space.",
          "default": " "
        },
        "insertPostTag": {
          "type": "string",
          "description": "The tag indicates the end of the merged text. By default, the tag is an empty space.",
          "default": " "
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.MergeSkill"
    },
    "MicrosoftLanguageStemmingTokenizer": {
      "type": "object",
      "description": "Divides text using language-specific rules and reduces words to their base forms.",
      "properties": {
        "maxTokenLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.",
          "default": 255,
          "maximum": 300
        },
        "isSearchTokenizer": {
          "type": "boolean",
          "description": "A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false.",
          "default": false
        },
        "language": {
          "$ref": "#/definitions/MicrosoftStemmingTokenizerLanguage",
          "description": "The language to use. The default is English."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.MicrosoftLanguageStemmingTokenizer"
    },
    "MicrosoftLanguageTokenizer": {
      "type": "object",
      "description": "Grammar-based tokenizer that is suitable for processing most European-language documents. This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "maxTokenLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.",
          "default": 255,
          "maximum": 300
        },
        "isSearchTokenizer": {
          "type": "boolean",
          "description": "A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false.",
          "default": false
        },
        "language": {
          "$ref": "#/definitions/MicrosoftTokenizerLanguage",
          "description": "The language to use. The default is English."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.MicrosoftLanguageTokenizer"
    },
    "MicrosoftStemmingTokenizerLanguage": {
      "type": "string",
      "description": "Lists the languages supported by the Microsoft language stemming  tokenizer.",
      "enum": [
        "bangla",
        "bulgarian",
        "catalan",
        "chineseSimplified",
        "chineseTraditional",
        "croatian",
        "czech",
        "danish",
        "dutch",
        "english",
        "french",
        "german",
        "greek",
        "gujarati",
        "hindi",
        "icelandic",
        "indonesian",
        "italian",
        "japanese",
        "kannada",
        "korean",
        "malay",
        "malayalam",
        "marathi",
        "norwegianBokmaal",
        "polish",
        "portuguese",
        "portugueseBrazilian",
        "punjabi",
        "romanian",
        "russian",
        "serbianCyrillic",
        "serbianLatin",
        "slovenian",
        "spanish",
        "swedish",
        "tamil",
        "telugu",
        "thai",
        "ukrainian",
        "urdu",
        "vietnamese"
      ],
      "x-ms-enum": {
        "name": "MicrosoftStemmingTokenizerLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "Bangla",
            "value": "bangla",
            "description": "Selects the Microsoft stemming tokenizer for Bangla."
          },
          {
            "name": "Bulgarian",
            "value": "bulgarian",
            "description": "Selects the Microsoft stemming tokenizer for Bulgarian."
          },
          {
            "name": "Catalan",
            "value": "catalan",
            "description": "Selects the Microsoft stemming tokenizer for Catalan."
          },
          {
            "name": "ChineseSimplified",
            "value": "chineseSimplified",
            "description": "Selects the Microsoft stemming tokenizer for Chinese (Simplified)."
          },
          {
            "name": "ChineseTraditional",
            "value": "chineseTraditional",
            "description": "Selects the Microsoft stemming tokenizer for Chinese (Traditional)."
          },
          {
            "name": "Croatian",
            "value": "croatian",
            "description": "Selects the Microsoft stemming tokenizer for Croatian."
          },
          {
            "name": "Czech",
            "value": "czech",
            "description": "Selects the Microsoft stemming tokenizer for Czech."
          },
          {
            "name": "Danish",
            "value": "danish",
            "description": "Selects the Microsoft stemming tokenizer for Danish."
          },
          {
            "name": "Dutch",
            "value": "dutch",
            "description": "Selects the Microsoft stemming tokenizer for Dutch."
          },
          {
            "name": "English",
            "value": "english",
            "description": "Selects the Microsoft stemming tokenizer for English."
          },
          {
            "name": "French",
            "value": "french",
            "description": "Selects the Microsoft stemming tokenizer for French."
          },
          {
            "name": "German",
            "value": "german",
            "description": "Selects the Microsoft stemming tokenizer for German."
          },
          {
            "name": "Greek",
            "value": "greek",
            "description": "Selects the Microsoft stemming tokenizer for Greek."
          },
          {
            "name": "Gujarati",
            "value": "gujarati",
            "description": "Selects the Microsoft stemming tokenizer for Gujarati."
          },
          {
            "name": "Hindi",
            "value": "hindi",
            "description": "Selects the Microsoft stemming tokenizer for Hindi."
          },
          {
            "name": "Icelandic",
            "value": "icelandic",
            "description": "Selects the Microsoft stemming tokenizer for Icelandic."
          },
          {
            "name": "Indonesian",
            "value": "indonesian",
            "description": "Selects the Microsoft stemming tokenizer for Indonesian."
          },
          {
            "name": "Italian",
            "value": "italian",
            "description": "Selects the Microsoft stemming tokenizer for Italian."
          },
          {
            "name": "Japanese",
            "value": "japanese",
            "description": "Selects the Microsoft stemming tokenizer for Japanese."
          },
          {
            "name": "Kannada",
            "value": "kannada",
            "description": "Selects the Microsoft stemming tokenizer for Kannada."
          },
          {
            "name": "Korean",
            "value": "korean",
            "description": "Selects the Microsoft stemming tokenizer for Korean."
          },
          {
            "name": "Malay",
            "value": "malay",
            "description": "Selects the Microsoft stemming tokenizer for Malay."
          },
          {
            "name": "Malayalam",
            "value": "malayalam",
            "description": "Selects the Microsoft stemming tokenizer for Malayalam."
          },
          {
            "name": "Marathi",
            "value": "marathi",
            "description": "Selects the Microsoft stemming tokenizer for Marathi."
          },
          {
            "name": "NorwegianBokmaal",
            "value": "norwegianBokmaal",
            "description": "Selects the Microsoft stemming tokenizer for  Norwegian (Bokmål)."
          },
          {
            "name": "Polish",
            "value": "polish",
            "description": "Selects the Microsoft stemming tokenizer for Polish."
          },
          {
            "name": "Portuguese",
            "value": "portuguese",
            "description": "Selects the Microsoft stemming tokenizer for Portuguese."
          },
          {
            "name": "PortugueseBrazilian",
            "value": "portugueseBrazilian",
            "description": "Selects the Microsoft stemming tokenizer for Portuguese (Brazil)."
          },
          {
            "name": "Punjabi",
            "value": "punjabi",
            "description": "Selects the Microsoft stemming tokenizer for Punjabi."
          },
          {
            "name": "Romanian",
            "value": "romanian",
            "description": "Selects the Microsoft stemming tokenizer for Romanian."
          },
          {
            "name": "Russian",
            "value": "russian",
            "description": "Selects the Microsoft stemming tokenizer for Russian."
          },
          {
            "name": "SerbianCyrillic",
            "value": "serbianCyrillic",
            "description": "Selects the Microsoft stemming tokenizer for Serbian (Cyrillic)."
          },
          {
            "name": "SerbianLatin",
            "value": "serbianLatin",
            "description": "Selects the Microsoft stemming tokenizer for Serbian (Latin)."
          },
          {
            "name": "Slovenian",
            "value": "slovenian",
            "description": "Selects the Microsoft stemming tokenizer for Slovenian."
          },
          {
            "name": "Spanish",
            "value": "spanish",
            "description": "Selects the Microsoft stemming tokenizer for Spanish."
          },
          {
            "name": "Swedish",
            "value": "swedish",
            "description": "Selects the Microsoft stemming tokenizer for Swedish."
          },
          {
            "name": "Tamil",
            "value": "tamil",
            "description": "Selects the Microsoft stemming tokenizer for Tamil."
          },
          {
            "name": "Telugu",
            "value": "telugu",
            "description": "Selects the Microsoft stemming tokenizer for Telugu."
          },
          {
            "name": "Thai",
            "value": "thai",
            "description": "Selects the Microsoft stemming tokenizer for Thai."
          },
          {
            "name": "Ukrainian",
            "value": "ukrainian",
            "description": "Selects the Microsoft stemming tokenizer for Ukrainian."
          },
          {
            "name": "Urdu",
            "value": "urdu",
            "description": "Selects the Microsoft stemming tokenizer for Urdu."
          },
          {
            "name": "Vietnamese",
            "value": "vietnamese",
            "description": "Selects the Microsoft stemming tokenizer for Vietnamese."
          }
        ]
      }
    },
    "MicrosoftTokenizerLanguage": {
      "type": "string",
      "description": "Lists the languages supported by the Microsoft language tokenizer.",
      "enum": [
        "arabic",
        "bangla",
        "bulgarian",
        "catalan",
        "croatian",
        "czech",
        "danish",
        "dutch",
        "english",
        "finnish",
        "french",
        "german",
        "greek",
        "gujarati",
        "hebrew",
        "hindi",
        "hungarian",
        "icelandic",
        "indonesian",
        "italian",
        "kannada",
        "latvian",
        "lithuanian",
        "malay",
        "malayalam",
        "marathi",
        "norwegianBokmaal",
        "polish",
        "portuguese",
        "portugueseBrazilian",
        "punjabi",
        "romanian",
        "russian",
        "serbianCyrillic",
        "serbianLatin",
        "slovak",
        "slovenian",
        "spanish",
        "swedish",
        "tamil",
        "telugu",
        "turkish",
        "ukrainian",
        "urdu"
      ],
      "x-ms-enum": {
        "name": "MicrosoftTokenizerLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "Arabic",
            "value": "arabic",
            "description": "Selects the Microsoft tokenizer for Arabic."
          },
          {
            "name": "Bangla",
            "value": "bangla",
            "description": "Selects the Microsoft tokenizer for Bangla."
          },
          {
            "name": "Bulgarian",
            "value": "bulgarian",
            "description": "Selects the Microsoft tokenizer for Bulgarian."
          },
          {
            "name": "Catalan",
            "value": "catalan",
            "description": "Selects the Microsoft tokenizer for Catalan."
          },
          {
            "name": "Croatian",
            "value": "croatian",
            "description": "Selects the Microsoft tokenizer for Croatian."
          },
          {
            "name": "Czech",
            "value": "czech",
            "description": "Selects the Microsoft tokenizer for Czech."
          },
          {
            "name": "Danish",
            "value": "danish",
            "description": "Selects the Microsoft tokenizer for Danish."
          },
          {
            "name": "Dutch",
            "value": "dutch",
            "description": "Selects the Microsoft tokenizer for Dutch."
          },
          {
            "name": "English",
            "value": "english",
            "description": "Selects the Microsoft tokenizer for English."
          },
          {
            "name": "Finnish",
            "value": "finnish",
            "description": "Selects the Microsoft tokenizer for Finnish."
          },
          {
            "name": "French",
            "value": "french",
            "description": "Selects the Microsoft tokenizer for French."
          },
          {
            "name": "German",
            "value": "german",
            "description": "Selects the Microsoft tokenizer for German."
          },
          {
            "name": "Greek",
            "value": "greek",
            "description": "Selects the Microsoft tokenizer for Greek."
          },
          {
            "name": "Gujarati",
            "value": "gujarati",
            "description": "Selects the Microsoft tokenizer for Gujarati."
          },
          {
            "name": "Hebrew",
            "value": "hebrew",
            "description": "Selects the Microsoft tokenizer for Hebrew."
          },
          {
            "name": "Hindi",
            "value": "hindi",
            "description": "Selects the Microsoft tokenizer for Hindi."
          },
          {
            "name": "Hungarian",
            "value": "hungarian",
            "description": "Selects the Microsoft tokenizer for Hungarian."
          },
          {
            "name": "Icelandic",
            "value": "icelandic",
            "description": "Selects the Microsoft tokenizer for Icelandic."
          },
          {
            "name": "Indonesian",
            "value": "indonesian",
            "description": "Selects the Microsoft tokenizer for Indonesian."
          },
          {
            "name": "Italian",
            "value": "italian",
            "description": "Selects the Microsoft tokenizer for Italian."
          },
          {
            "name": "Kannada",
            "value": "kannada",
            "description": "Selects the Microsoft tokenizer for Kannada."
          },
          {
            "name": "Latvian",
            "value": "latvian",
            "description": "Selects the Microsoft tokenizer for Latvian."
          },
          {
            "name": "Lithuanian",
            "value": "lithuanian",
            "description": "Selects the Microsoft tokenizer for Lithuanian."
          },
          {
            "name": "Malay",
            "value": "malay",
            "description": "Selects the Microsoft tokenizer for Malay."
          },
          {
            "name": "Malayalam",
            "value": "malayalam",
            "description": "Selects the Microsoft tokenizer for Malayalam."
          },
          {
            "name": "Marathi",
            "value": "marathi",
            "description": "Selects the Microsoft tokenizer for Marathi."
          },
          {
            "name": "NorwegianBokmaal",
            "value": "norwegianBokmaal",
            "description": "Selects the Microsoft tokenizer for  Norwegian (Bokmål)."
          },
          {
            "name": "Polish",
            "value": "polish",
            "description": "Selects the Microsoft tokenizer for Polish."
          },
          {
            "name": "Portuguese",
            "value": "portuguese",
            "description": "Selects the Microsoft tokenizer for Portuguese."
          },
          {
            "name": "PortugueseBrazilian",
            "value": "portugueseBrazilian",
            "description": "Selects the Microsoft tokenizer for Portuguese (Brazil)."
          },
          {
            "name": "Punjabi",
            "value": "punjabi",
            "description": "Selects the Microsoft tokenizer for Punjabi."
          },
          {
            "name": "Romanian",
            "value": "romanian",
            "description": "Selects the Microsoft tokenizer for Romanian."
          },
          {
            "name": "Russian",
            "value": "russian",
            "description": "Selects the Microsoft tokenizer for Russian."
          },
          {
            "name": "SerbianCyrillic",
            "value": "serbianCyrillic",
            "description": "Selects the Microsoft tokenizer for Serbian (Cyrillic)."
          },
          {
            "name": "SerbianLatin",
            "value": "serbianLatin",
            "description": "Selects the Microsoft tokenizer for Serbian (Latin)."
          },
          {
            "name": "Slovak",
            "value": "slovak",
            "description": "Selects the Microsoft tokenizer for Slovak."
          },
          {
            "name": "Slovenian",
            "value": "slovenian",
            "description": "Selects the Microsoft tokenizer for Slovenian."
          },
          {
            "name": "Spanish",
            "value": "spanish",
            "description": "Selects the Microsoft tokenizer for Spanish."
          },
          {
            "name": "Swedish",
            "value": "swedish",
            "description": "Selects the Microsoft tokenizer for Swedish."
          },
          {
            "name": "Tamil",
            "value": "tamil",
            "description": "Selects the Microsoft tokenizer for Tamil."
          },
          {
            "name": "Telugu",
            "value": "telugu",
            "description": "Selects the Microsoft tokenizer for Telugu."
          },
          {
            "name": "Turkish",
            "value": "turkish",
            "description": "Selects the Microsoft tokenizer for Turkish."
          },
          {
            "name": "Ukrainian",
            "value": "ukrainian",
            "description": "Selects the Microsoft tokenizer for Ukrainian."
          },
          {
            "name": "Urdu",
            "value": "urdu",
            "description": "Selects the Microsoft tokenizer for Urdu."
          }
        ]
      }
    },
    "NGramTokenFilter": {
      "type": "object",
      "description": "Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene.",
      "properties": {
        "minGram": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum n-gram length. Default is 1. Must be less than the value of maxGram.",
          "default": 1
        },
        "maxGram": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum n-gram length. Default is 2.",
          "default": 2
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.NGramTokenFilter"
    },
    "NGramTokenFilterV2": {
      "type": "object",
      "description": "Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene.",
      "properties": {
        "minGram": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum n-gram length. Default is 1. Must be less than the value of maxGram.",
          "default": 1
        },
        "maxGram": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum n-gram length. Default is 2.",
          "default": 2
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.NGramTokenFilterV2"
    },
    "NGramTokenizer": {
      "type": "object",
      "description": "Tokenizes the input into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "minGram": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram.",
          "default": 1,
          "maximum": 300
        },
        "maxGram": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum n-gram length. Default is 2. Maximum is 300.",
          "default": 2,
          "maximum": 300
        },
        "tokenChars": {
          "type": "array",
          "description": "Character classes to keep in the tokens.",
          "items": {
            "$ref": "#/definitions/TokenCharacterKind"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.NGramTokenizer"
    },
    "OcrSkill": {
      "type": "object",
      "description": "A skill that uses text analytics for key phrase extraction.",
      "properties": {
        "defaultLanguageCode": {
          "$ref": "#/definitions/OcrSkillLanguage",
          "description": "A value indicating which language code to use. Default is en."
        },
        "detectOrientation": {
          "type": "boolean",
          "description": "A value indicating to turn orientation detection on or not. Default is false.",
          "default": false,
          "x-ms-client-name": "shouldDetectOrientation"
        },
        "lineEnding": {
          "$ref": "#/definitions/LineEnding",
          "description": "Defines the sequence of characters to use between the lines of text recognized by the OCR skill. The default value is \"space\"."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Vision.OcrSkill"
    },
    "OcrSkillLanguage": {
      "type": "string",
      "description": "The language codes supported for input by OcrSkill.",
      "enum": [
        "zh-Hans",
        "zh-Hant",
        "cs",
        "da",
        "nl",
        "en",
        "fi",
        "fr",
        "de",
        "el",
        "hu",
        "it",
        "ja",
        "ko",
        "nb",
        "pl",
        "pt",
        "ru",
        "es",
        "sv",
        "tr",
        "ar",
        "ro",
        "sr-Cyrl",
        "sr-Latn",
        "sk",
        "unk"
      ],
      "x-ms-enum": {
        "name": "OcrSkillLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "zh-Hans",
            "value": "zh-Hans",
            "description": "Chinese-Simplified"
          },
          {
            "name": "zh-Hant",
            "value": "zh-Hant",
            "description": "Chinese-Traditional"
          },
          {
            "name": "cs",
            "value": "cs",
            "description": "Czech"
          },
          {
            "name": "da",
            "value": "da",
            "description": "Danish"
          },
          {
            "name": "nl",
            "value": "nl",
            "description": "Dutch"
          },
          {
            "name": "en",
            "value": "en",
            "description": "English"
          },
          {
            "name": "fi",
            "value": "fi",
            "description": "Finnish"
          },
          {
            "name": "fr",
            "value": "fr",
            "description": "French"
          },
          {
            "name": "de",
            "value": "de",
            "description": "German"
          },
          {
            "name": "el",
            "value": "el",
            "description": "Greek"
          },
          {
            "name": "hu",
            "value": "hu",
            "description": "Hungarian"
          },
          {
            "name": "it",
            "value": "it",
            "description": "Italian"
          },
          {
            "name": "ja",
            "value": "ja",
            "description": "Japanese"
          },
          {
            "name": "ko",
            "value": "ko",
            "description": "Korean"
          },
          {
            "name": "nb",
            "value": "nb",
            "description": "Norwegian (Bokmaal)"
          },
          {
            "name": "pl",
            "value": "pl",
            "description": "Polish"
          },
          {
            "name": "pt",
            "value": "pt",
            "description": "Portuguese"
          },
          {
            "name": "ru",
            "value": "ru",
            "description": "Russian"
          },
          {
            "name": "es",
            "value": "es",
            "description": "Spanish"
          },
          {
            "name": "sv",
            "value": "sv",
            "description": "Swedish"
          },
          {
            "name": "tr",
            "value": "tr",
            "description": "Turkish"
          },
          {
            "name": "ar",
            "value": "ar",
            "description": "Arabic"
          },
          {
            "name": "ro",
            "value": "ro",
            "description": "Romanian"
          },
          {
            "name": "sr-Cyrl",
            "value": "sr-Cyrl",
            "description": "Serbian (Cyrillic, Serbia)"
          },
          {
            "name": "sr-Latn",
            "value": "sr-Latn",
            "description": "Serbian (Latin, Serbia)"
          },
          {
            "name": "sk",
            "value": "sk",
            "description": "Slovak"
          },
          {
            "name": "unk",
            "value": "unk",
            "description": "Unknown.  If the language is explicitly set to \"unk\", the language will be auto-detected."
          }
        ]
      }
    },
    "OutputFieldMappingEntry": {
      "type": "object",
      "description": "Output field mapping for a skill.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the output defined by the skill."
        },
        "targetName": {
          "type": "string",
          "description": "The target name of the output. It is optional and default to name."
        }
      },
      "required": [
        "name"
      ]
    },
    "PIIDetectionSkill": {
      "type": "object",
      "description": "Using the Text Analytics API, extracts personal information from an input text and gives you the option of masking it.",
      "properties": {
        "defaultLanguageCode": {
          "type": "string",
          "description": "A value indicating which language code to use. Default is en."
        },
        "minimumPrecision": {
          "type": "number",
          "format": "double",
          "description": "A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included.",
          "minimum": 0,
          "maximum": 1
        },
        "maskingMode": {
          "$ref": "#/definitions/PIIDetectionSkillMaskingMode",
          "description": "A parameter that provides various ways to mask the personal information detected in the input text. Default is 'none'."
        },
        "maskingCharacter": {
          "type": "string",
          "description": "The character used to mask the text if the maskingMode parameter is set to replace. Default is '*'.",
          "maxLength": 1
        },
        "modelVersion": {
          "type": "string",
          "description": "The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary."
        },
        "piiCategories": {
          "type": "array",
          "description": "A list of PII entity categories that should be extracted and masked.",
          "items": {
            "type": "string"
          }
        },
        "domain": {
          "type": "string",
          "description": "If specified, will set the PII domain to include only a subset of the entity categories. Possible values include: 'phi', 'none'. Default is 'none'."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.PIIDetectionSkill"
    },
    "PIIDetectionSkillMaskingMode": {
      "type": "string",
      "enum": [
        "none",
        "replace"
      ],
      "x-ms-enum": {
        "name": "PIIDetectionSkillMaskingMode",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none",
            "description": "No masking occurs and the maskedText output will not be returned."
          },
          {
            "name": "Replace",
            "value": "replace",
            "description": "Replaces the detected entities with the character given in the maskingCharacter parameter. The character will be repeated to the length of the detected entity so that the offsets will correctly correspond to both the input text as well as the output maskedText."
          }
        ]
      }
    },
    "PathHierarchyTokenizerV2": {
      "type": "object",
      "description": "Tokenizer for path-like hierarchies. This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "delimiter": {
          "type": "string",
          "description": "The delimiter character to use. Default is \"/\".",
          "default": "/",
          "maxLength": 1
        },
        "replacement": {
          "type": "string",
          "description": "A value that, if set, replaces the delimiter character. Default is \"/\".",
          "default": "/",
          "maxLength": 1
        },
        "maxTokenLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum token length. Default and maximum is 300.",
          "default": 300,
          "maximum": 300
        },
        "reverse": {
          "type": "boolean",
          "description": "A value indicating whether to generate tokens in reverse order. Default is false."
        },
        "skip": {
          "type": "integer",
          "format": "int32",
          "description": "The number of initial tokens to skip. Default is 0.",
          "default": 0
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.PathHierarchyTokenizerV2"
    },
    "PatternAnalyzer": {
      "type": "object",
      "description": "Flexibly separates text into terms via a regular expression pattern. This analyzer is implemented using Apache Lucene.",
      "properties": {
        "lowercase": {
          "type": "boolean",
          "description": "A value indicating whether terms should be lower-cased. Default is true.",
          "default": true
        },
        "pattern": {
          "type": "string",
          "description": "A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters.",
          "default": "\\W+"
        },
        "flags": {
          "$ref": "#/definitions/RegexFlags",
          "description": "Regular expression flags."
        },
        "stopwords": {
          "type": "array",
          "description": "A list of stopwords.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "stopwords"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/LexicalAnalyzer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternAnalyzer"
    },
    "PatternCaptureTokenFilter": {
      "type": "object",
      "description": "Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene.",
      "properties": {
        "patterns": {
          "type": "array",
          "description": "A list of patterns to match against each token.",
          "items": {
            "type": "string"
          }
        },
        "preserveOriginal": {
          "type": "boolean",
          "description": "A value indicating whether to return the original token even if one of the patterns matches. Default is true.",
          "default": true
        }
      },
      "required": [
        "patterns"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternCaptureTokenFilter"
    },
    "PatternReplaceCharFilter": {
      "type": "object",
      "description": "A character filter that replaces characters in the input string. It uses a regular expression to identify character sequences to preserve and a replacement pattern to identify characters to replace. For example, given the input text \"aa bb aa bb\", pattern \"(aa)\\s+(bb)\", and replacement \"$1#$2\", the result would be \"aa#bb aa#bb\". This character filter is implemented using Apache Lucene.",
      "properties": {
        "pattern": {
          "type": "string",
          "description": "A regular expression pattern."
        },
        "replacement": {
          "type": "string",
          "description": "The replacement text."
        }
      },
      "required": [
        "pattern",
        "replacement"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CharFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternReplaceCharFilter"
    },
    "PatternReplaceTokenFilter": {
      "type": "object",
      "description": "A character filter that replaces characters in the input string. It uses a regular expression to identify character sequences to preserve and a replacement pattern to identify characters to replace. For example, given the input text \"aa bb aa bb\", pattern \"(aa)\\s+(bb)\", and replacement \"$1#$2\", the result would be \"aa#bb aa#bb\". This token filter is implemented using Apache Lucene.",
      "properties": {
        "pattern": {
          "type": "string",
          "description": "A regular expression pattern."
        },
        "replacement": {
          "type": "string",
          "description": "The replacement text."
        }
      },
      "required": [
        "pattern",
        "replacement"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TokenFilter"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternReplaceTokenFilter"
    },
    "PatternTokenizer": {
      "type": "object",
      "description": "Tokenizer that uses regex pattern matching to construct distinct tokens. This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "pattern": {
          "type": "string",
          "description": "A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters.",
          "default": "\\W+"
        },
        "flags": {
          "$ref": "#/definitions/RegexFlags",
          "description": "Regular expression flags."
        },
        "group": {
          "type": "integer",
          "format": "int32",
          "description": "The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1.",
          "default": -1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.PatternTokenizer"
    },
    "PrioritizedFields": {
      "type": "object",
      "description": "Describes the title, content, and keywords fields to be used for semantic ranking, captions, highlights, and answers.",
      "properties": {
        "titleField": {
          "type": "array",
          "description": "Defines the title field to be used for semantic ranking, captions, highlights, and answers. If you don't have a title field in your index, leave this blank.",
          "items": {
            "$ref": "#/definitions/SemanticField"
          },
          "x-ms-identifiers": []
        },
        "prioritizedContentFields": {
          "type": "array",
          "description": "Defines the content fields to be used for semantic ranking, captions, highlights, and answers. For the best result, the selected fields should contain text in natural language form. The order of the fields in the array represents their priority. Fields with lower priority may get truncated if the content is long.",
          "items": {
            "$ref": "#/definitions/SemanticField"
          },
          "x-ms-identifiers": []
        },
        "prioritizedKeywordsFields": {
          "type": "array",
          "description": "Defines the keyword fields to be used for semantic ranking, captions, highlights, and answers. For the best result, the selected fields should contain a list of keywords. The order of the fields in the array represents their priority. Fields with lower priority may get truncated if the content is long.",
          "items": {
            "$ref": "#/definitions/SemanticField"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RegexFlags": {
      "type": "string",
      "description": "Defines flags that can be combined to control how regular expressions are used in the pattern analyzer and pattern tokenizer.",
      "enum": [
        "CANON_EQ",
        "CASE_INSENSITIVE",
        "COMMENTS",
        "DOTALL",
        "LITERAL",
        "MULTILINE",
        "UNICODE_CASE",
        "UNIX_LINES"
      ],
      "x-ms-enum": {
        "name": "RegexFlags",
        "modelAsString": true,
        "values": [
          {
            "name": "CanonEq",
            "value": "CANON_EQ",
            "description": "Enables canonical equivalence."
          },
          {
            "name": "CaseInsensitive",
            "value": "CASE_INSENSITIVE",
            "description": "Enables case-insensitive matching."
          },
          {
            "name": "Comments",
            "value": "COMMENTS",
            "description": "Permits whitespace and comments in the pattern."
          },
          {
            "name": "DotAll",
            "value": "DOTALL",
            "description": "Enables dotall mode."
          },
          {
            "name": "Literal",
            "value": "LITERAL",
            "description": "Enables literal parsing of the pattern."
          },
          {
            "name": "Multiline",
            "value": "MULTILINE",
            "description": "Enables multiline mode."
          },
          {
            "name": "UnicodeCase",
            "value": "UNICODE_CASE",
            "description": "Enables Unicode-aware case folding."
          },
          {
            "name": "UnixLines",
            "value": "UNIX_LINES",
            "description": "Enables Unix lines mode."
          }
        ]
      }
    },
    "ResourceCounter": {
      "type": "object",
      "properties": {
        "usage": {
          "type": "integer",
          "format": "int64",
          "description": "The resource usage amount."
        },
        "quota": {
          "type": "integer",
          "format": "int64",
          "description": "The resource amount quota."
        }
      },
      "required": [
        "usage"
      ]
    },
    "ScoringFunction": {
      "type": "object",
      "description": "Base type for functions that can modify document scores during ranking.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for ScoringFunction."
        },
        "fieldName": {
          "type": "string",
          "description": "The name of the field used as input to the scoring function."
        },
        "boost": {
          "type": "number",
          "format": "double",
          "description": "A multiplier for the raw score. Must be a positive number not equal to 1.0."
        },
        "interpolation": {
          "$ref": "#/definitions/ScoringFunctionInterpolation",
          "description": "A value indicating how boosting will be interpolated across document scores; defaults to \"Linear\"."
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "fieldName",
        "boost"
      ]
    },
    "ScoringFunctionAggregation": {
      "type": "string",
      "description": "Defines the aggregation function used to combine the results of all the scoring functions in a scoring profile.",
      "enum": [
        "sum",
        "average",
        "minimum",
        "maximum",
        "firstMatching"
      ],
      "x-ms-enum": {
        "name": "ScoringFunctionAggregation",
        "modelAsString": true,
        "values": [
          {
            "name": "Sum",
            "value": "sum",
            "description": "Boost scores by the sum of all scoring function results."
          },
          {
            "name": "Average",
            "value": "average",
            "description": "Boost scores by the average of all scoring function results."
          },
          {
            "name": "Minimum",
            "value": "minimum",
            "description": "Boost scores by the minimum of all scoring function results."
          },
          {
            "name": "Maximum",
            "value": "maximum",
            "description": "Boost scores by the maximum of all scoring function results."
          },
          {
            "name": "FirstMatching",
            "value": "firstMatching",
            "description": "Boost scores using the first applicable scoring function in the scoring profile."
          }
        ]
      }
    },
    "ScoringFunctionInterpolation": {
      "type": "string",
      "description": "Defines the function used to interpolate score boosting across a range of documents.",
      "enum": [
        "linear",
        "constant",
        "quadratic",
        "logarithmic"
      ],
      "x-ms-enum": {
        "name": "ScoringFunctionInterpolation",
        "modelAsString": true,
        "values": [
          {
            "name": "Linear",
            "value": "linear",
            "description": "Boosts scores by a linearly decreasing amount. This is the default interpolation for scoring functions."
          },
          {
            "name": "Constant",
            "value": "constant",
            "description": "Boosts scores by a constant factor."
          },
          {
            "name": "Quadratic",
            "value": "quadratic",
            "description": "Boosts scores by an amount that decreases quadratically. Boosts decrease slowly for higher scores, and more quickly as the scores decrease. This interpolation option is not allowed in tag scoring functions."
          },
          {
            "name": "Logarithmic",
            "value": "logarithmic",
            "description": "Boosts scores by an amount that decreases logarithmically. Boosts decrease quickly for higher scores, and more slowly as the scores decrease. This interpolation option is not allowed in tag scoring functions."
          }
        ]
      }
    },
    "ScoringProfile": {
      "type": "object",
      "description": "Defines parameters for a search index that influence scoring in search queries.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the scoring profile."
        },
        "text": {
          "$ref": "#/definitions/TextWeights",
          "description": "Parameters that boost scoring based on text matches in certain index fields."
        },
        "functions": {
          "type": "array",
          "description": "The collection of functions that influence the scoring of documents.",
          "items": {
            "$ref": "#/definitions/ScoringFunction"
          },
          "x-ms-identifiers": []
        },
        "functionAggregation": {
          "$ref": "#/definitions/ScoringFunctionAggregation",
          "description": "A value indicating how the results of individual scoring functions should be combined. Defaults to \"Sum\". Ignored if there are no scoring functions."
        }
      },
      "required": [
        "name"
      ]
    },
    "SearchError": {
      "type": "object",
      "description": "The error object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/SearchError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "SearchField": {
      "type": "object",
      "description": "Represents a field in an index definition, which describes the name, data type, and search behavior of a field.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the field, which must be unique within the fields collection of the index or parent field."
        },
        "type": {
          "$ref": "#/definitions/SearchFieldDataType",
          "description": "The data type of the field."
        },
        "key": {
          "type": "boolean",
          "description": "A value indicating whether the field uniquely identifies documents in the index. Exactly one top-level field in each index must be chosen as the key field and it must be of type Edm.String. Key fields can be used to look up documents directly and update or delete specific documents. Default is false for simple fields and null for complex fields."
        },
        "retrievable": {
          "type": "boolean",
          "description": "A value indicating whether the field can be returned in a search result. You can disable this option if you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user. This property must be true for key fields, and it must be null for complex fields. This property can be changed on existing fields. Enabling this property does not cause any increase in index storage requirements. Default is true for simple fields and null for complex fields."
        },
        "searchable": {
          "type": "boolean",
          "description": "A value indicating whether the field is full-text searchable. This means it will undergo analysis such as word-breaking during indexing. If you set a searchable field to a value like \"sunny day\", internally it will be split into the individual tokens \"sunny\" and \"day\". This enables full-text searches for these terms. Fields of type Edm.String or Collection(Edm.String) are searchable by default. This property must be false for simple fields of other non-string data types, and it must be null for complex fields. Note: searchable fields consume extra space in your index since Azure Cognitive Search will store an additional tokenized version of the field value for full-text searches. If you want to save space in your index and you don't need a field to be included in searches, set searchable to false."
        },
        "filterable": {
          "type": "boolean",
          "description": "A value indicating whether to enable the field to be referenced in $filter queries. filterable differs from searchable in how strings are handled. Fields of type Edm.String or Collection(Edm.String) that are filterable do not undergo word-breaking, so comparisons are for exact matches only. For example, if you set such a field f to \"sunny day\", $filter=f eq 'sunny' will find no matches, but $filter=f eq 'sunny day' will. This property must be null for complex fields. Default is true for simple fields and null for complex fields."
        },
        "sortable": {
          "type": "boolean",
          "description": "A value indicating whether to enable the field to be referenced in $orderby expressions. By default Azure Cognitive Search sorts results by score, but in many experiences users will want to sort by fields in the documents. A simple field can be sortable only if it is single-valued (it has a single value in the scope of the parent document). Simple collection fields cannot be sortable, since they are multi-valued. Simple sub-fields of complex collections are also multi-valued, and therefore cannot be sortable. This is true whether it's an immediate parent field, or an ancestor field, that's the complex collection. Complex fields cannot be sortable and the sortable property must be null for such fields. The default for sortable is true for single-valued simple fields, false for multi-valued simple fields, and null for complex fields."
        },
        "facetable": {
          "type": "boolean",
          "description": "A value indicating whether to enable the field to be referenced in facet queries. Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, and so on). This property must be null for complex fields. Fields of type Edm.GeographyPoint or Collection(Edm.GeographyPoint) cannot be facetable. Default is true for all other simple fields."
        },
        "analyzer": {
          "$ref": "#/definitions/LexicalAnalyzerName",
          "description": "The name of the analyzer to use for the field. This option can be used only with searchable fields and it can't be set together with either searchAnalyzer or indexAnalyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields."
        },
        "searchAnalyzer": {
          "$ref": "#/definitions/LexicalAnalyzerName",
          "description": "The name of the analyzer used at search time for the field. This option can be used only with searchable fields. It must be set together with indexAnalyzer and it cannot be set together with the analyzer option. This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. This analyzer can be updated on an existing field. Must be null for complex fields."
        },
        "indexAnalyzer": {
          "$ref": "#/definitions/LexicalAnalyzerName",
          "description": "The name of the analyzer used at indexing time for the field. This option can be used only with searchable fields. It must be set together with searchAnalyzer and it cannot be set together with the analyzer option.  This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields."
        },
        "normalizer": {
          "$ref": "#/definitions/LexicalNormalizerName",
          "description": "The name of the normalizer to use for the field. This option can be used only with fields with filterable, sortable, or facetable enabled. Once the normalizer is chosen, it cannot be changed for the field. Must be null for complex fields."
        },
        "synonymMaps": {
          "type": "array",
          "description": "A list of the names of synonym maps to associate with this field. This option can be used only with searchable fields. Currently only one synonym map per field is supported. Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map. This attribute can be changed on existing fields. Must be null or an empty collection for complex fields.",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "description": "A list of sub-fields if this is a field of type Edm.ComplexType or Collection(Edm.ComplexType). Must be null or empty for simple fields.",
          "items": {
            "$ref": "#/definitions/SearchField"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name",
        "type",
        "synonymMaps"
      ]
    },
    "SearchFieldDataType": {
      "type": "string",
      "description": "Defines the data type of a field in a search index.",
      "enum": [
        "Edm.String",
        "Edm.Int32",
        "Edm.Int64",
        "Edm.Double",
        "Edm.Boolean",
        "Edm.DateTimeOffset",
        "Edm.GeographyPoint",
        "Edm.ComplexType"
      ],
      "x-ms-enum": {
        "name": "SearchFieldDataType",
        "modelAsString": true,
        "values": [
          {
            "name": "String",
            "value": "Edm.String",
            "description": "Indicates that a field contains a string."
          },
          {
            "name": "Int32",
            "value": "Edm.Int32",
            "description": "Indicates that a field contains a 32-bit signed integer."
          },
          {
            "name": "Int64",
            "value": "Edm.Int64",
            "description": "Indicates that a field contains a 64-bit signed integer."
          },
          {
            "name": "Double",
            "value": "Edm.Double",
            "description": "Indicates that a field contains an IEEE double-precision floating point number."
          },
          {
            "name": "Boolean",
            "value": "Edm.Boolean",
            "description": "Indicates that a field contains a Boolean value (true or false)."
          },
          {
            "name": "DateTimeOffset",
            "value": "Edm.DateTimeOffset",
            "description": "Indicates that a field contains a date/time value, including timezone information."
          },
          {
            "name": "GeographyPoint",
            "value": "Edm.GeographyPoint",
            "description": "Indicates that a field contains a geo-location in terms of longitude and latitude."
          },
          {
            "name": "ComplexType",
            "value": "Edm.ComplexType",
            "description": "Indicates that a field contains one or more complex objects that in turn have sub-fields of other types."
          }
        ]
      }
    },
    "SearchIndex": {
      "type": "object",
      "description": "Represents a search index definition, which describes the fields and search behavior of an index.",
      "properties": {
        "@odata.etag": {
          "type": "string",
          "description": "The ETag of the resource.",
          "x-ms-client-name": "eTag"
        },
        "name": {
          "type": "string",
          "description": "The name of the index."
        },
        "fields": {
          "type": "array",
          "description": "The fields of the index.",
          "items": {
            "$ref": "#/definitions/SearchField"
          },
          "x-ms-identifiers": []
        },
        "scoringProfiles": {
          "type": "array",
          "description": "The scoring profiles for the index.",
          "items": {
            "$ref": "#/definitions/ScoringProfile"
          },
          "x-ms-identifiers": []
        },
        "defaultScoringProfile": {
          "type": "string",
          "description": "The name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used."
        },
        "corsOptions": {
          "$ref": "#/definitions/CorsOptions",
          "description": "Options to control Cross-Origin Resource Sharing (CORS) for the index."
        },
        "suggesters": {
          "$ref": "#/definitions/Suggester",
          "description": "The suggesters for the index."
        },
        "analyzers": {
          "$ref": "#/definitions/LexicalAnalyzer",
          "description": "The analyzers for the index."
        },
        "tokenizers": {
          "$ref": "#/definitions/LexicalTokenizer",
          "description": "The tokenizers for the index."
        },
        "tokenFilter": {
          "$ref": "#/definitions/TokenFilter",
          "description": "The token filters for the index."
        },
        "charFilters": {
          "$ref": "#/definitions/CharFilter",
          "description": "The character filters for the index."
        },
        "normalizers": {
          "$ref": "#/definitions/LexicalNormalizer",
          "description": "The normalizers for the index."
        },
        "encryptionKey": {
          "$ref": "#/definitions/SearchResourceEncryptionKey",
          "description": "A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019."
        },
        "similarity": {
          "$ref": "#/definitions/Similarity",
          "description": "The type of similarity algorithm to be used when scoring and ranking the documents matching a search query. The similarity algorithm can only be defined at index creation time and cannot be modified on existing indexes. If null, the ClassicSimilarity algorithm is used."
        },
        "semantic": {
          "$ref": "#/definitions/SemanticSettings",
          "description": "Defines parameters for a search index that influence semantic capabilities."
        }
      },
      "required": [
        "@odata.etag",
        "name",
        "fields"
      ]
    },
    "SearchIndexer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the indexer."
        },
        "description": {
          "type": "string",
          "description": "The description of the indexer."
        },
        "dataSourceName": {
          "type": "string",
          "description": "The name of the datasource from which this indexer reads data."
        },
        "skillsetName": {
          "type": "string",
          "description": "The name of the skillset executing with this indexer."
        },
        "targetIndexName": {
          "type": "string",
          "description": "The name of the index to which this indexer writes data."
        },
        "schedule": {
          "$ref": "#/definitions/IndexingSchedule",
          "description": "The schedule for this indexer."
        },
        "parameters": {
          "$ref": "#/definitions/IndexingParameters",
          "description": "Parameters for indexer execution."
        },
        "fieldMappings": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Defines mappings between fields in the data source and corresponding target fields in the index."
        },
        "outputFieldMappings": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Output field mappings are applied after enrichment and immediately before indexing."
        },
        "disabled": {
          "type": "boolean",
          "description": "A value indicating whether the indexer is disabled. Default is false.",
          "default": false
        },
        "@odata.etag": {
          "type": "string",
          "description": "The ETag of the resource.",
          "x-ms-client-name": "eTag"
        },
        "encryptionKey": {
          "$ref": "#/definitions/SearchResourceEncryptionKey",
          "description": "A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your indexer definition (as well as indexer execution status) when you want full assurance that no one, not even Microsoft, can decrypt them in Azure Cognitive Search. Once you have encrypted your indexer definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your indexer definition (and indexer execution status) will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019."
        },
        "cache": {
          "$ref": "#/definitions/SearchIndexerCache",
          "description": "Adds caching to an enrichment pipeline to allow for incremental modification steps without having to rebuild the index every time."
        }
      },
      "required": [
        "name",
        "dataSourceName",
        "targetIndexName",
        "@odata.etag"
      ]
    },
    "SearchIndexerCache": {
      "type": "object",
      "properties": {
        "storageConnectionString": {
          "type": "string",
          "description": "The connection string to the storage account where the cache data will be persisted."
        },
        "enableReprocessing": {
          "type": "boolean",
          "description": "Specifies whether incremental reprocessing is enabled."
        }
      }
    },
    "SearchIndexerDataContainer": {
      "type": "object",
      "description": "Represents information about the entity (such as Azure SQL table or CosmosDB collection) that will be indexed.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the table or view (for Azure SQL data source) or collection (for CosmosDB data source) that will be indexed."
        },
        "query": {
          "type": "string",
          "description": "A query that is applied to this data container. The syntax and meaning of this parameter is datasource-specific. Not supported by Azure SQL datasources."
        }
      },
      "required": [
        "name"
      ]
    },
    "SearchIndexerDataIdentity": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Identifies the concrete type of the identity."
        }
      },
      "required": [
        "@odata.type"
      ]
    },
    "SearchIndexerDataNoneIdentity": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerDataIdentity"
        }
      ]
    },
    "SearchIndexerDataSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the datasource.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the datasource."
        },
        "type": {
          "$ref": "#/definitions/SearchIndexerDataSourceType",
          "description": "The type of the datasource."
        },
        "credentials": {
          "$ref": "#/definitions/DataSourceCredentials",
          "description": "Credentials for the datasource."
        },
        "container": {
          "$ref": "#/definitions/SearchIndexerDataContainer",
          "description": "The data container for the datasource."
        },
        "identity": {
          "$ref": "#/definitions/SearchIndexerDataIdentity",
          "description": "An explicit managed identity to use for this datasource. If not specified and the connection string is a managed identity, the system-assigned managed identity is used. If not specified, the value remains unchanged. If ',none,' is specified, the value of this property is cleared."
        },
        "dataChangeDetectionPolicy": {
          "$ref": "#/definitions/DataChangeDetectionPolicy",
          "description": "The data change detection policy for the datasource."
        },
        "dataDeletionDetectionPolicy": {
          "$ref": "#/definitions/DataDeletionDetectionPolicy",
          "description": "The data deletion detection policy for the datasource."
        },
        "@odata.etag": {
          "type": "string",
          "description": "The ETag of the resource.",
          "x-ms-client-name": "eTag"
        },
        "encryptionKey": {
          "$ref": "#/definitions/SearchResourceEncryptionKey",
          "description": "A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your datasource definition when you want full assurance that no one, not even Microsoft, can decrypt your data source definition in Azure Cognitive Search. Once you have encrypted your data source definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your datasource definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019."
        }
      },
      "required": [
        "name",
        "type",
        "credentials",
        "container",
        "@odata.etag"
      ]
    },
    "SearchIndexerDataSourceType": {
      "type": "string",
      "enum": [
        "azuresql",
        "cosmosdb",
        "azureblob",
        "azuretable",
        "mysql",
        "adlsgen2"
      ],
      "x-ms-enum": {
        "name": "SearchIndexerDataSourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureSql",
            "value": "azuresql",
            "description": "Indicates an Azure SQL datasource."
          },
          {
            "name": "CosmosDb",
            "value": "cosmosdb",
            "description": "Indicates a CosmosDB datasource."
          },
          {
            "name": "AzureBlob",
            "value": "azureblob",
            "description": "Indicates an Azure Blob datasource."
          },
          {
            "name": "AzureTable",
            "value": "azuretable",
            "description": "Indicates an Azure Table datasource."
          },
          {
            "name": "MySql",
            "value": "mysql",
            "description": "Indicates a MySql datasource."
          },
          {
            "name": "AdlsGen2",
            "value": "adlsgen2",
            "description": "Indicates an ADLS Gen2 datasource."
          }
        ]
      }
    },
    "SearchIndexerError": {
      "type": "object",
      "description": "Represents an item- or document-level indexing error.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the item for which indexing failed."
        },
        "errorMessage": {
          "type": "string",
          "description": "The message describing the error that occurred while processing the item."
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "description": "The status code indicating why the indexing operation failed. Possible values include: 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy."
        },
        "name": {
          "type": "string",
          "description": "The name of the source at which the error originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available."
        },
        "details": {
          "type": "string",
          "description": "Additional, verbose details about the error to assist in debugging the indexer. This may not be always available."
        },
        "documentationLink": {
          "type": "string",
          "description": "A link to a troubleshooting guide for these classes of errors. This may not be always available."
        }
      },
      "required": [
        "errorMessage",
        "statusCode"
      ]
    },
    "SearchIndexerKnowledgeStore": {
      "type": "object",
      "description": "Definition of additional projections to azure blob, table, or files, of enriched data.",
      "properties": {
        "storageConnectionString": {
          "type": "string",
          "description": "The connection string to the storage account projections will be stored in."
        },
        "projections": {
          "type": "array",
          "description": "A list of additional projections to perform during indexing.",
          "items": {
            "$ref": "#/definitions/SearchIndexerKnowledgeStoreProjection"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "storageConnectionString",
        "projections"
      ]
    },
    "SearchIndexerKnowledgeStoreBlobProjectionSelector": {
      "type": "object",
      "description": "Abstract class to share properties between concrete selectors.",
      "properties": {
        "storageContainer": {
          "type": "string",
          "description": "Blob container to store projections in."
        }
      },
      "required": [
        "storageContainer"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerKnowledgeStoreProjectionSelector"
        }
      ]
    },
    "SearchIndexerKnowledgeStoreFileProjectionSelector": {
      "type": "object",
      "description": "Projection definition for what data to store in Azure Files.",
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerKnowledgeStoreBlobProjectionSelector"
        }
      ]
    },
    "SearchIndexerKnowledgeStoreObjectProjectionSelector": {
      "type": "object",
      "description": "Projection definition for what data to store in Azure Blob.",
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerKnowledgeStoreBlobProjectionSelector"
        }
      ]
    },
    "SearchIndexerKnowledgeStoreProjection": {
      "type": "object",
      "description": "Container object for various projection selectors.",
      "properties": {
        "tables": {
          "$ref": "#/definitions/SearchIndexerKnowledgeStoreTableProjectionSelector",
          "description": "Projections to Azure Table storage."
        },
        "objects": {
          "$ref": "#/definitions/SearchIndexerKnowledgeStoreObjectProjectionSelector",
          "description": "Projections to Azure Blob storage."
        },
        "files": {
          "$ref": "#/definitions/SearchIndexerKnowledgeStoreFileProjectionSelector",
          "description": "Projections to Azure File storage."
        }
      }
    },
    "SearchIndexerKnowledgeStoreProjectionSelector": {
      "type": "object",
      "description": "Abstract class to share properties between concrete selectors.",
      "properties": {
        "referenceKeyName": {
          "type": "string",
          "description": "Name of reference key to different projection."
        },
        "generatedKeyName": {
          "type": "string",
          "description": "Name of generated  key to  store projection under."
        },
        "source": {
          "type": "string",
          "description": "Source data to project."
        },
        "sourceContext": {
          "type": "string",
          "description": "Source context for complex projections."
        },
        "inputs": {
          "type": "array",
          "description": "Nested inputs for complex projections.",
          "items": {
            "$ref": "#/definitions/InputFieldMappingEntry"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SearchIndexerKnowledgeStoreTableProjectionSelector": {
      "type": "object",
      "description": "Description for what data to store in Azure Tables.",
      "properties": {
        "tableName": {
          "type": "string",
          "description": "Name of the Azure table to store projected data in."
        }
      },
      "required": [
        "tableName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerKnowledgeStoreProjectionSelector"
        }
      ]
    },
    "SearchIndexerLimits": {
      "type": "object",
      "properties": {
        "maxRunTime": {
          "type": "string",
          "description": "The maximum duration that the indexer is permitted to run for one execution."
        },
        "maxDocumentExtractionSize": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum size of a document, in bytes, which will be considered valid for indexing."
        },
        "maxDocumentContentCharactersToExtract": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of characters that will be extracted from a document picked up for indexing."
        }
      }
    },
    "SearchIndexerSkill": {
      "type": "object",
      "description": "Base type for skills.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Discriminator property for SearchIndexerSkill."
        },
        "name": {
          "type": "string",
          "description": "The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'."
        },
        "description": {
          "type": "string",
          "description": "The description of the skill which describes the inputs, outputs, and usage of the skill."
        },
        "context": {
          "type": "string",
          "description": "Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document."
        },
        "inputs": {
          "type": "array",
          "description": "Inputs of the skills could be a column in the source data set, or the output of an upstream skill.",
          "items": {
            "$ref": "#/definitions/InputFieldMappingEntry"
          },
          "x-ms-identifiers": []
        },
        "outputs": {
          "type": "array",
          "description": "The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill.",
          "items": {
            "$ref": "#/definitions/OutputFieldMappingEntry"
          },
          "x-ms-identifiers": []
        }
      },
      "discriminator": "@odata.type",
      "required": [
        "@odata.type",
        "name",
        "inputs",
        "outputs"
      ]
    },
    "SearchIndexerSkillset": {
      "type": "object",
      "description": "A list of skills.",
      "properties": {
        "@odata.etag": {
          "type": "string",
          "description": "The ETag of the resource.",
          "x-ms-client-name": "eTag"
        },
        "name": {
          "type": "string",
          "description": "The name of the skillset."
        },
        "description": {
          "type": "string",
          "description": "The description of the skillset."
        },
        "skills": {
          "type": "array",
          "description": "A list of skills in the skillset.",
          "items": {
            "$ref": "#/definitions/SearchIndexerSkill"
          },
          "x-ms-identifiers": []
        },
        "cognitiveServices": {
          "$ref": "#/definitions/CognitiveServicesAccount",
          "description": "Details about cognitive services to be used when running skills.",
          "x-ms-client-name": "cognitiveServicesAccount"
        },
        "knowledgeStore": {
          "$ref": "#/definitions/SearchIndexerKnowledgeStore",
          "description": "Definition of additional projections to azure blob, table, or files, of enriched data."
        },
        "encryptionKey": {
          "type": "object",
          "description": "A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your skillset definition when you want full assurance that no one, not even Microsoft, can decrypt your skillset definition in Azure Cognitive Search. Once you have encrypted your skillset definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your skillset definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019.",
          "x-nullable": true,
          "allOf": [
            {
              "$ref": "#/definitions/SearchResourceEncryptionKey"
            }
          ]
        }
      },
      "required": [
        "@odata.etag",
        "name",
        "skills"
      ]
    },
    "SearchIndexerStatus": {
      "type": "object",
      "description": "Represents the current status and execution history of an indexer.",
      "properties": {
        "status": {
          "$ref": "#/definitions/IndexerStatus",
          "description": "Overall indexer status."
        },
        "lastResult": {
          "$ref": "#/definitions/IndexerExecutionResult",
          "description": "The result of the most recent or an in-progress indexer execution."
        },
        "executionHistory": {
          "type": "array",
          "description": "History of the recent indexer executions, sorted in reverse chronological order.",
          "items": {
            "$ref": "#/definitions/IndexerExecutionResult"
          },
          "x-ms-identifiers": []
        },
        "limits": {
          "$ref": "#/definitions/SearchIndexerLimits",
          "description": "The execution limits for the indexer."
        }
      },
      "required": [
        "status",
        "executionHistory",
        "limits"
      ]
    },
    "SearchIndexerWarning": {
      "type": "object",
      "description": "Represents an item-level warning.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the item which generated a warning."
        },
        "message": {
          "type": "string",
          "description": "The message describing the warning that occurred while processing the item."
        },
        "name": {
          "type": "string",
          "description": "The name of the source at which the warning originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available."
        },
        "details": {
          "type": "string",
          "description": "Additional, verbose details about the warning to assist in debugging the indexer. This may not be always available."
        },
        "documentationLink": {
          "type": "string",
          "description": "A link to a troubleshooting guide for these classes of warnings. This may not be always available."
        }
      },
      "required": [
        "message"
      ]
    },
    "SearchResourceEncryptionKey": {
      "type": "object",
      "properties": {
        "keyVaultKeyName": {
          "type": "string",
          "description": "The name of your Azure Key Vault key to be used to encrypt your data at rest.",
          "x-ms-client-name": "keyName"
        },
        "keyVaultKeyVersion": {
          "type": "string",
          "description": "The version of your Azure Key Vault key to be used to encrypt your data at rest.",
          "x-ms-client-name": "keyVersion"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "The URI of your Azure Key Vault, also referred to as DNS name, that contains the key to be used to encrypt your data at rest. An example URI might be https://my-keyvault-name.vault.azure.net.",
          "x-ms-client-name": "vaultUri"
        },
        "accessCredentials": {
          "$ref": "#/definitions/AzureActiveDirectoryApplicationCredentials",
          "description": "Optional Azure Active Directory credentials used for accessing your Azure Key Vault. Not required if using managed identity instead."
        },
        "identity": {
          "$ref": "#/definitions/SearchIndexerDataIdentity",
          "description": "An explicit managed identity to use for this encryption key. If not specified and the access credentials property is null, the system-assigned managed identity is used. On update to the resource, if the explicit identity is unspecified, it remains unchanged. If none is specified, the value of this property is cleared."
        }
      },
      "required": [
        "keyVaultKeyName",
        "keyVaultKeyVersion",
        "keyVaultUri"
      ]
    },
    "SemanticConfiguration": {
      "type": "object",
      "description": "Defines a specific configuration to be used in the context of semantic capabilities.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the semantic configuration."
        },
        "prioritizedFields": {
          "$ref": "#/definitions/PrioritizedFields",
          "description": "Describes the title, content, and keyword fields to be used for semantic ranking, captions, highlights, and answers. At least one of the three sub properties (titleField, prioritizedKeywordsFields and prioritizedContentFields) need to be set."
        }
      },
      "required": [
        "name",
        "prioritizedFields"
      ]
    },
    "SemanticField": {
      "type": "object",
      "description": "A field that is used as part of the semantic configuration.",
      "properties": {
        "fieldName": {
          "type": "string",
          "description": "Field name."
        }
      },
      "required": [
        "fieldName"
      ]
    },
    "SemanticSettings": {
      "type": "object",
      "description": "Defines parameters for a search index that influence semantic capabilities.",
      "properties": {
        "configurations": {
          "type": "array",
          "description": "The semantic configurations for the index.",
          "items": {
            "$ref": "#/definitions/SemanticConfiguration"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "configurations"
      ]
    },
    "SentimentSkill": {
      "type": "object",
      "description": "Text analytics positive-negative sentiment analysis, scored as a floating point value in a range of zero to 1.",
      "properties": {
        "defaultLanguageCode": {
          "$ref": "#/definitions/SentimentSkillLanguage",
          "description": "A value indicating which language code to use. Default is en."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.SentimentSkill"
    },
    "SentimentSkillLanguage": {
      "type": "string",
      "description": "The language codes supported for input text by SentimentSkill.",
      "enum": [
        "da",
        "nl",
        "en",
        "fi",
        "fr",
        "de",
        "el",
        "it",
        "ja",
        "ko",
        "no",
        "pl",
        "pt-PT",
        "ru",
        "es",
        "sv",
        "tr"
      ],
      "x-ms-enum": {
        "name": "SentimentSkillLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "da",
            "value": "da",
            "description": "Danish"
          },
          {
            "name": "nl",
            "value": "nl",
            "description": "Dutch"
          },
          {
            "name": "en",
            "value": "en",
            "description": "English"
          },
          {
            "name": "fi",
            "value": "fi",
            "description": "Finnish"
          },
          {
            "name": "fr",
            "value": "fr",
            "description": "French"
          },
          {
            "name": "de",
            "value": "de",
            "description": "German"
          },
          {
            "name": "el",
            "value": "el",
            "description": "Greek"
          },
          {
            "name": "it",
            "value": "it",
            "description": "Italian"
          },
          {
            "name": "ja",
            "value": "ja",
            "description": "Japanese"
          },
          {
            "name": "ko",
            "value": "ko",
            "description": "Korean"
          },
          {
            "name": "no",
            "value": "no",
            "description": "Norwegian (Bokmaal)"
          },
          {
            "name": "pl",
            "value": "pl",
            "description": "Polish"
          },
          {
            "name": "pt-PT",
            "value": "pt-PT",
            "description": "Portuguese (Portugal)"
          },
          {
            "name": "ru",
            "value": "ru",
            "description": "Russian"
          },
          {
            "name": "es",
            "value": "es",
            "description": "Spanish"
          },
          {
            "name": "sv",
            "value": "sv",
            "description": "Swedish"
          },
          {
            "name": "tr",
            "value": "tr",
            "description": "Turkish"
          }
        ]
      }
    },
    "SentimentSkillV3": {
      "type": "object",
      "description": "Using the Text Analytics API, evaluates unstructured text and for each record, provides sentiment labels (such as \"negative\", \"neutral\" and \"positive\") based on the highest confidence score found by the service at a sentence and document-level.",
      "properties": {
        "defaultLanguageCode": {
          "type": "string",
          "description": "A value indicating which language code to use. Default is en."
        },
        "includeOpinionMining": {
          "type": "boolean",
          "description": "If set to true, the skill output will include information from Text Analytics for opinion mining, namely targets (nouns or verbs) and their associated assessment (adjective) in the text. Default is false.",
          "default": false
        },
        "modelVersion": {
          "type": "string",
          "description": "The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary."
        }
      },
      "required": [
        "modelVersion"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.V3.SentimentSkill"
    },
    "ServiceCounters": {
      "type": "object",
      "properties": {
        "documentCount": {
          "$ref": "#/definitions/ResourceCounter",
          "description": "Total number of documents across all indexes in the service."
        },
        "indexesCount": {
          "$ref": "#/definitions/ResourceCounter",
          "description": "Total number of indexes."
        },
        "indexersCount": {
          "$ref": "#/definitions/ResourceCounter",
          "description": "Total number of indexers."
        },
        "dataSourcesCount": {
          "$ref": "#/definitions/ResourceCounter",
          "description": "Total number of data sources."
        },
        "storageSize": {
          "$ref": "#/definitions/ResourceCounter",
          "description": "Total size of used storage in bytes."
        },
        "synonymMaps": {
          "$ref": "#/definitions/ResourceCounter",
          "description": "Total number of synonym maps."
        },
        "skillsetCount": {
          "$ref": "#/definitions/ResourceCounter",
          "description": "Total number of skillsets."
        }
      }
    },
    "ServiceLimits": {
      "type": "object",
      "properties": {
        "maxFieldsPerIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed fields per index."
        },
        "maxFieldNestingDepthPerIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3."
        },
        "maxComplexCollectionFieldsPerIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index."
        },
        "maxComplexObjectsInCollectionsPerDocument": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of objects in complex collections allowed per document."
        }
      }
    },
    "ServiceStatistics": {
      "type": "object",
      "description": "Response from a get service statistics request. If successful, it includes service level counters and limits.",
      "properties": {
        "counters": {
          "$ref": "#/definitions/ServiceCounters",
          "description": "Service level resource counters."
        },
        "limits": {
          "$ref": "#/definitions/ServiceLimits",
          "description": "Service level general limits."
        }
      }
    },
    "ShaperSkill": {
      "type": "object",
      "description": "A skill for reshaping the outputs. It creates a complex type to support composite fields (also known as multipart fields).",
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Util.ShaperSkill"
    },
    "Similarity": {
      "type": "object",
      "description": "Base type for similarity algorithms. Similarity algorithms are used to calculate scores that tie queries to documents. The higher the score, the more relevant the document is to that specific query. Those scores are used to rank the search results.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Discriminator property for Similarity."
        }
      },
      "discriminator": "@odata.type",
      "required": [
        "@odata.type"
      ]
    },
    "SkillNames": {
      "type": "object",
      "description": "The names of skills to reset.",
      "properties": {
        "skillNames": {
          "type": "array",
          "description": "the names of skills to be reset.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "skillNames"
      ]
    },
    "SplitSkill": {
      "type": "object",
      "description": "A skill to split a string into chunks of text.",
      "properties": {
        "defaultLanguageCode": {
          "$ref": "#/definitions/SplitSkillLanguage",
          "description": "A value indicating which language code to use. Default is en."
        },
        "textSplitMode": {
          "$ref": "#/definitions/TextSplitMode",
          "description": "A value indicating which split mode to perform."
        },
        "maximumPageLength": {
          "type": "integer",
          "format": "int32",
          "description": "The desired maximum page length. Default is 10000.",
          "default": 10000
        }
      },
      "required": [
        "textSplitMode"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.SplitSkill"
    },
    "SplitSkillLanguage": {
      "type": "string",
      "description": "The language codes supported for input text by SplitSkill.",
      "enum": [
        "da",
        "de",
        "en",
        "es",
        "fi",
        "fr",
        "it",
        "ko",
        "pt"
      ],
      "x-ms-enum": {
        "name": "SplitSkillLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "da",
            "value": "da",
            "description": "Danish"
          },
          {
            "name": "de",
            "value": "de",
            "description": "German"
          },
          {
            "name": "en",
            "value": "en",
            "description": "English"
          },
          {
            "name": "es",
            "value": "es",
            "description": "Spanish"
          },
          {
            "name": "fi",
            "value": "fi",
            "description": "Finnish"
          },
          {
            "name": "fr",
            "value": "fr",
            "description": "French"
          },
          {
            "name": "it",
            "value": "it",
            "description": "Italian"
          },
          {
            "name": "ko",
            "value": "ko",
            "description": "Korean"
          },
          {
            "name": "pt",
            "value": "pt",
            "description": "Portuguese"
          }
        ]
      }
    },
    "StopAnalyzer": {
      "type": "object",
      "description": "Divides text at non-letters; Applies the lowercase and stopword token filters. This analyzer is implemented using Apache Lucene.",
      "properties": {
        "stopwords": {
          "type": "array",
          "description": "A list of stopwords.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalAnalyzer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.StopAnalyzer"
    },
    "Suggester": {
      "type": "object",
      "description": "Defines how the Suggest API should apply to a group of fields in the index.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the suggester."
        },
        "searchMode": {
          "$ref": "#/definitions/SuggesterSearchMode",
          "description": "A value indicating the capabilities of the suggester."
        },
        "sourceFields": {
          "type": "array",
          "description": "The list of field names to which the suggester applies. Each field must be searchable.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "searchMode",
        "sourceFields"
      ]
    },
    "SuggesterSearchMode": {
      "type": "string",
      "description": "A value indicating the capabilities of the suggester.",
      "enum": [
        "analyzingInfixMatching"
      ],
      "x-ms-enum": {
        "name": "SuggesterSearchMode",
        "modelAsString": true,
        "values": [
          {
            "name": "AnalyzingInfixMatching",
            "value": "analyzingInfixMatching",
            "description": "Matches consecutive whole terms and prefixes in a field. For example, for the field 'The fastest brown fox', the queries 'fast' and 'fastest brow' would both match."
          }
        ]
      }
    },
    "TagScoringFunction": {
      "type": "object",
      "description": "Defines a function that boosts scores of documents with string values matching a given list of tags.",
      "properties": {
        "tag": {
          "$ref": "#/definitions/TagScoringParameters",
          "description": "Parameter values for the tag scoring function."
        }
      },
      "required": [
        "tag"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScoringFunction"
        }
      ],
      "x-ms-discriminator-value": "tag"
    },
    "TagScoringParameters": {
      "type": "object",
      "description": "Provides parameter values to a tag scoring function.",
      "properties": {
        "tagsParameter": {
          "type": "string",
          "description": "The name of the parameter passed in search queries to specify the list of tags to compare against the target field."
        }
      },
      "required": [
        "tagsParameter"
      ]
    },
    "TextSplitMode": {
      "type": "object",
      "description": "A value indicating which split mode to perform.",
      "properties": {
        "Pages": {
          "type": "string",
          "description": "Split the text into individual pages.",
          "enum": [
            "pages"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "Sentences": {
          "type": "string",
          "description": "Split the text into individual sentences.",
          "enum": [
            "sentences"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "Pages",
        "Sentences"
      ]
    },
    "TextTranslationSkill": {
      "type": "object",
      "description": "A skill to translate text from one language to another.",
      "properties": {
        "defaultToLanguageCode": {
          "$ref": "#/definitions/TextTranslationSkillLanguage",
          "description": "The language code to translate documents into for documents that don't specify the to language explicitly. "
        },
        "defaultFromLanguageCode": {
          "$ref": "#/definitions/TextTranslationSkillLanguage",
          "description": "The language code to translate documents from for documents that don't specify the from language explicitly."
        },
        "suggestedFrom": {
          "$ref": "#/definitions/TextTranslationSkillLanguage",
          "description": "The language code to translate documents from when neither the fromLanguageCode input nor the defaultFromLanguageCode parameter are provided, and the automatic language detection is unsuccessful. Default is en."
        }
      },
      "required": [
        "defaultToLanguageCode",
        "defaultFromLanguageCode"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Text.TranslationSkill"
    },
    "TextTranslationSkillLanguage": {
      "type": "string",
      "description": "The language codes supported for input text by TextTranslationSkill.",
      "enum": [
        "af",
        "ar",
        "bn",
        "bs",
        "bg",
        "yue",
        "ca",
        "zh-Hans",
        "zh-Hant",
        "hr",
        "cs",
        "da",
        "nl",
        "en",
        "et",
        "fj",
        "fil",
        "fi",
        "fr",
        "de",
        "el",
        "ht",
        "he",
        "hi",
        "mww",
        "hu",
        "is",
        "id",
        "it",
        "ja",
        "sw",
        "tlh",
        "tlh-Latn",
        "tlh-Piqd",
        "ko",
        "lv",
        "lt",
        "mg",
        "ms",
        "mt",
        "nb",
        "fa",
        "pl",
        "pt",
        "pt-br",
        "pt-PT",
        "otq",
        "ro",
        "ru",
        "sm",
        "sr-Cyrl",
        "sr-Latn",
        "sk",
        "sl",
        "es",
        "sv",
        "ty",
        "ta",
        "te",
        "th",
        "to",
        "tr",
        "uk",
        "ur",
        "vi",
        "cy",
        "yua",
        "ga",
        "kn",
        "mi",
        "ml",
        "pa"
      ],
      "x-ms-enum": {
        "name": "TextTranslationSkillLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "af",
            "value": "af",
            "description": "Afrikaans"
          },
          {
            "name": "ar",
            "value": "ar",
            "description": "Arabic"
          },
          {
            "name": "bn",
            "value": "bn",
            "description": "Bangla"
          },
          {
            "name": "bs",
            "value": "bs",
            "description": "Bosnian (Latin)"
          },
          {
            "name": "bg",
            "value": "bg",
            "description": "Bulgarian"
          },
          {
            "name": "yue",
            "value": "yue",
            "description": "Cantonese (Traditional)"
          },
          {
            "name": "ca",
            "value": "ca",
            "description": "Catalan"
          },
          {
            "name": "zh-Hans",
            "value": "zh-Hans",
            "description": "Chinese Simplified"
          },
          {
            "name": "zh-Hant",
            "value": "zh-Hant",
            "description": "Chinese Traditional"
          },
          {
            "name": "hr",
            "value": "hr",
            "description": "Croatian"
          },
          {
            "name": "cs",
            "value": "cs",
            "description": "Czech"
          },
          {
            "name": "da",
            "value": "da",
            "description": "Danish"
          },
          {
            "name": "nl",
            "value": "nl",
            "description": "Dutch"
          },
          {
            "name": "en",
            "value": "en",
            "description": "English"
          },
          {
            "name": "et",
            "value": "et",
            "description": "Estonian"
          },
          {
            "name": "fj",
            "value": "fj",
            "description": "Fijian"
          },
          {
            "name": "fil",
            "value": "fil",
            "description": "Filipino"
          },
          {
            "name": "fi",
            "value": "fi",
            "description": "Finnish"
          },
          {
            "name": "fr",
            "value": "fr",
            "description": "French"
          },
          {
            "name": "de",
            "value": "de",
            "description": "German"
          },
          {
            "name": "el",
            "value": "el",
            "description": "Greek"
          },
          {
            "name": "ht",
            "value": "ht",
            "description": "Haitian Creole"
          },
          {
            "name": "he",
            "value": "he",
            "description": "Hebrew"
          },
          {
            "name": "hi",
            "value": "hi",
            "description": "Hindi"
          },
          {
            "name": "mww",
            "value": "mww",
            "description": "Hmong Daw"
          },
          {
            "name": "hu",
            "value": "hu",
            "description": "Hungarian"
          },
          {
            "name": "is",
            "value": "is",
            "description": "Icelandic"
          },
          {
            "name": "id",
            "value": "id",
            "description": "Indonesian"
          },
          {
            "name": "it",
            "value": "it",
            "description": "Italian"
          },
          {
            "name": "ja",
            "value": "ja",
            "description": "Japanese"
          },
          {
            "name": "sw",
            "value": "sw",
            "description": "Kiswahili"
          },
          {
            "name": "tlh",
            "value": "tlh",
            "description": "Klingon"
          },
          {
            "name": "tlh-Latn",
            "value": "tlh-Latn",
            "description": "Klingon (Latin script)"
          },
          {
            "name": "tlh-Piqd",
            "value": "tlh-Piqd",
            "description": "Klingon (Klingon script)"
          },
          {
            "name": "ko",
            "value": "ko",
            "description": "Korean"
          },
          {
            "name": "lv",
            "value": "lv",
            "description": "Latvian"
          },
          {
            "name": "lt",
            "value": "lt",
            "description": "Lithuanian"
          },
          {
            "name": "mg",
            "value": "mg",
            "description": "Malagasy"
          },
          {
            "name": "ms",
            "value": "ms",
            "description": "Malay"
          },
          {
            "name": "mt",
            "value": "mt",
            "description": "Maltese"
          },
          {
            "name": "nb",
            "value": "nb",
            "description": "Norwegian"
          },
          {
            "name": "fa",
            "value": "fa",
            "description": "Persian"
          },
          {
            "name": "pl",
            "value": "pl",
            "description": "Polish"
          },
          {
            "name": "pt",
            "value": "pt",
            "description": "Portuguese"
          },
          {
            "name": "pt-br",
            "value": "pt-br",
            "description": "Portuguese (Brazil)"
          },
          {
            "name": "pt-PT",
            "value": "pt-PT",
            "description": "Portuguese (Portugal)"
          },
          {
            "name": "otq",
            "value": "otq",
            "description": "Queretaro Otomi"
          },
          {
            "name": "ro",
            "value": "ro",
            "description": "Romanian"
          },
          {
            "name": "ru",
            "value": "ru",
            "description": "Russian"
          },
          {
            "name": "sm",
            "value": "sm",
            "description": "Samoan"
          },
          {
            "name": "sr-Cyrl",
            "value": "sr-Cyrl",
            "description": "Serbian (Cyrillic)"
          },
          {
            "name": "sr-Latn",
            "value": "sr-Latn",
            "description": "Serbian (Latin)"
          },
          {
            "name": "sk",
            "value": "sk",
            "description": "Slovak"
          },
          {
            "name": "sl",
            "value": "sl",
            "description": "Slovenian"
          },
          {
            "name": "es",
            "value": "es",
            "description": "Spanish"
          },
          {
            "name": "sv",
            "value": "sv",
            "description": "Swedish"
          },
          {
            "name": "ty",
            "value": "ty",
            "description": "Tahitian"
          },
          {
            "name": "ta",
            "value": "ta",
            "description": "Tamil"
          },
          {
            "name": "te",
            "value": "te",
            "description": "Telugu"
          },
          {
            "name": "th",
            "value": "th",
            "description": "Thai"
          },
          {
            "name": "to",
            "value": "to",
            "description": "Tongan"
          },
          {
            "name": "tr",
            "value": "tr",
            "description": "Turkish"
          },
          {
            "name": "uk",
            "value": "uk",
            "description": "Ukrainian"
          },
          {
            "name": "ur",
            "value": "ur",
            "description": "Urdu"
          },
          {
            "name": "vi",
            "value": "vi",
            "description": "Vietnamese"
          },
          {
            "name": "cy",
            "value": "cy",
            "description": "Welsh"
          },
          {
            "name": "yua",
            "value": "yua",
            "description": "Yucatec Maya"
          },
          {
            "name": "ga",
            "value": "ga",
            "description": "Irish"
          },
          {
            "name": "kn",
            "value": "kn",
            "description": "Kannada"
          },
          {
            "name": "mi",
            "value": "mi",
            "description": "Maori"
          },
          {
            "name": "ml",
            "value": "ml",
            "description": "Malayalam"
          },
          {
            "name": "pa",
            "value": "pa",
            "description": "Punjabi"
          }
        ]
      }
    },
    "TextWeights": {
      "type": "object",
      "description": "Defines weights on index fields for which matches should boost scoring in search queries.",
      "properties": {
        "weights": {
          "type": "object",
          "description": "The dictionary of per-field weights to boost document scoring. The keys are field names and the values are the weights for each field.",
          "additionalProperties": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "required": [
        "weights"
      ]
    },
    "TokenCharacterKind": {
      "type": "string",
      "description": "Represents classes of characters on which a token filter can operate.",
      "enum": [
        "letter",
        "digit",
        "whitespace",
        "punctuation",
        "symbol"
      ],
      "x-ms-enum": {
        "name": "TokenCharacterKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Letter",
            "value": "letter",
            "description": "Keeps letters in tokens."
          },
          {
            "name": "Digit",
            "value": "digit",
            "description": "Keeps digits in tokens."
          },
          {
            "name": "Whitespace",
            "value": "whitespace",
            "description": "Keeps whitespace in tokens."
          },
          {
            "name": "Punctuation",
            "value": "punctuation",
            "description": "Keeps punctuation in tokens."
          },
          {
            "name": "Symbol",
            "value": "symbol",
            "description": "Keeps symbols in tokens."
          }
        ]
      }
    },
    "TokenFilter": {
      "type": "object",
      "description": "Base type for token filters.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "Discriminator property for TokenFilter."
        },
        "name": {
          "type": "string",
          "description": "The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters."
        }
      },
      "discriminator": "@odata.type",
      "required": [
        "@odata.type",
        "name"
      ]
    },
    "TokenFilterName": {
      "type": "string",
      "description": "Defines the names of all token filters supported by Azure Cognitive Search.",
      "enum": [
        "arabic_normalization",
        "apostrophe",
        "asciifolding",
        "cjk_bigram",
        "cjk_width",
        "classic",
        "common_grams",
        "edgeNGram_v2",
        "elision",
        "german_normalization",
        "hindi_normalization",
        "indic_normalization",
        "keyword_repeat",
        "kstem",
        "length",
        "limit",
        "lowercase",
        "nGram_v2",
        "persian_normalization",
        "phonetic",
        "porter_stem",
        "reverse",
        "scandinavian_normalization",
        "scandinavian_folding",
        "shingle",
        "snowball",
        "sorani_normalization",
        "stemmer",
        "stopwords",
        "trim",
        "truncate",
        "unique",
        "uppercase",
        "word_delimiter"
      ],
      "x-ms-enum": {
        "name": "TokenFilterName",
        "modelAsString": true,
        "values": [
          {
            "name": "ArabicNormalization",
            "value": "arabic_normalization",
            "description": "A token filter that applies the Arabic normalizer to normalize the orthography. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ar/ArabicNormalizationFilter.html"
          },
          {
            "name": "Apostrophe",
            "value": "apostrophe",
            "description": "Strips all characters after an apostrophe (including the apostrophe itself). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/tr/ApostropheFilter.html"
          },
          {
            "name": "Asciifolding",
            "value": "asciifolding",
            "description": "Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if such equivalents exist. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html"
          },
          {
            "name": "CjkBigram",
            "value": "cjk_bigram",
            "description": "Forms bigrams of CJK terms that are generated from the standard tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html"
          },
          {
            "name": "CjkWidth",
            "value": "cjk_width",
            "description": "Normalizes CJK width differences. Folds fullwidth ASCII variants into the equivalent basic Latin, and half-width Katakana variants into the equivalent Kana. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKWidthFilter.html"
          },
          {
            "name": "Classic",
            "value": "classic",
            "description": "Removes English possessives, and dots from acronyms. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicFilter.html"
          },
          {
            "name": "CommonGram",
            "value": "common_grams",
            "description": "Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html"
          },
          {
            "name": "EdgeNGram",
            "value": "edgeNGram_v2",
            "description": "Generates n-grams of the given size(s) starting from the front or the back of an input token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html"
          },
          {
            "name": "Elision",
            "value": "elision",
            "description": "Removes elisions. For example, \"l'avion\" (the plane) will be converted to \"avion\" (plane). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html"
          },
          {
            "name": "GermanNormalization",
            "value": "german_normalization",
            "description": "Normalizes German characters according to the heuristics of the German2 snowball algorithm. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/de/GermanNormalizationFilter.html"
          },
          {
            "name": "HindiNormalization",
            "value": "hindi_normalization",
            "description": "Normalizes text in Hindi to remove some differences in spelling variations. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/hi/HindiNormalizationFilter.html"
          },
          {
            "name": "IndicNormalization",
            "value": "indic_normalization",
            "description": "Normalizes the Unicode representation of text in Indian languages. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/in/IndicNormalizationFilter.html"
          },
          {
            "name": "KeywordRepeat",
            "value": "keyword_repeat",
            "description": "Emits each incoming token twice, once as keyword and once as non-keyword. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html"
          },
          {
            "name": "Kstem",
            "value": "kstem",
            "description": "A high-performance kstem filter for English. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/en/KStemFilter.html"
          },
          {
            "name": "Length",
            "value": "length",
            "description": "Removes words that are too long or too short. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html"
          },
          {
            "name": "Limit",
            "value": "limit",
            "description": "Limits the number of tokens while indexing. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html"
          },
          {
            "name": "Lowercase",
            "value": "lowercase",
            "description": "Normalizes token text to lower case. See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.html"
          },
          {
            "name": "NGram",
            "value": "nGram_v2",
            "description": "Generates n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html"
          },
          {
            "name": "PersianNormalization",
            "value": "persian_normalization",
            "description": "Applies normalization for Persian. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/fa/PersianNormalizationFilter.html"
          },
          {
            "name": "Phonetic",
            "value": "phonetic",
            "description": "Create tokens for phonetic matches. See https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html"
          },
          {
            "name": "PorterStem",
            "value": "porter_stem",
            "description": "Uses the Porter stemming algorithm to transform the token stream. See http://tartarus.org/~martin/PorterStemmer"
          },
          {
            "name": "Reverse",
            "value": "reverse",
            "description": "Reverses the token string. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html"
          },
          {
            "name": "ScandinavianNormalization",
            "value": "scandinavian_normalization",
            "description": "Normalizes use of the interchangeable Scandinavian characters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianNormalizationFilter.html"
          },
          {
            "name": "ScandinavianFoldingNormalization",
            "value": "scandinavian_folding",
            "description": "Folds Scandinavian characters åÅäæÄÆ-&gt;a and öÖøØ-&gt;o. It also discriminates against use of double vowels aa, ae, ao, oe and oo, leaving just the first one. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianFoldingFilter.html"
          },
          {
            "name": "Shingle",
            "value": "shingle",
            "description": "Creates combinations of tokens as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html"
          },
          {
            "name": "Snowball",
            "value": "snowball",
            "description": "A filter that stems words using a Snowball-generated stemmer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html"
          },
          {
            "name": "SoraniNormalization",
            "value": "sorani_normalization",
            "description": "Normalizes the Unicode representation of Sorani text. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ckb/SoraniNormalizationFilter.html"
          },
          {
            "name": "Stemmer",
            "value": "stemmer",
            "description": "Language specific stemming filter. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#TokenFilters"
          },
          {
            "name": "Stopwords",
            "value": "stopwords",
            "description": "Removes stop words from a token stream. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html"
          },
          {
            "name": "Trim",
            "value": "trim",
            "description": "Trims leading and trailing whitespace from tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TrimFilter.html"
          },
          {
            "name": "Truncate",
            "value": "truncate",
            "description": "Truncates the terms to a specific length. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html"
          },
          {
            "name": "Unique",
            "value": "unique",
            "description": "Filters out tokens with same text as the previous token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html"
          },
          {
            "name": "Uppercase",
            "value": "uppercase",
            "description": "Normalizes token text to upper case. See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html"
          },
          {
            "name": "WordDelimiter",
            "value": "word_delimiter",
            "description": "Splits words into subwords and performs optional transformations on subword groups."
          }
        ]
      }
    },
    "UaxUrlEmailTokenizer": {
      "type": "object",
      "description": "Tokenizes urls and emails as one token. This tokenizer is implemented using Apache Lucene.",
      "properties": {
        "maxTokenLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.",
          "default": 255,
          "maximum": 300
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LexicalTokenizer"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.Search.UaxUrlEmailTokenizer"
    },
    "VisualFeature": {
      "type": "string",
      "description": "The strings indicating what visual feature types to return.",
      "enum": [
        "adult",
        "brands",
        "categories",
        "description",
        "faces",
        "objects",
        "tags"
      ],
      "x-ms-enum": {
        "name": "VisualFeature",
        "modelAsString": true,
        "values": [
          {
            "name": "Adult",
            "value": "adult",
            "description": "Visual features recognized as adult persons."
          },
          {
            "name": "Brands",
            "value": "brands",
            "description": "Visual features recognized as commercial brands."
          },
          {
            "name": "Categories",
            "value": "categories",
            "description": "Categories."
          },
          {
            "name": "Description",
            "value": "description",
            "description": "Description."
          },
          {
            "name": "Faces",
            "value": "faces",
            "description": "Visual features recognized as people faces."
          },
          {
            "name": "Objects",
            "value": "objects",
            "description": "Visual features recognized as objects."
          },
          {
            "name": "Tags",
            "value": "tags",
            "description": "Tags."
          }
        ]
      }
    },
    "WebApiSkill": {
      "type": "object",
      "description": "A skill that can call a Web API endpoint, allowing you to extend a skillset by having it call your custom code.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The url for the Web API."
        },
        "httpMethod": {
          "type": "string",
          "description": "The method for the http request."
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "description": "The desired timeout for the request. Default is 30 seconds."
        },
        "batchSize": {
          "type": "integer",
          "format": "int32",
          "description": "The desired batch size which indicates number of documents."
        },
        "degreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "description": "If set, the number of parallel calls that can be made to the Web API."
        }
      },
      "required": [
        "uri",
        "httpMethod"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SearchIndexerSkill"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Skills.Custom.WebApiSkill"
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Client API version",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ClientRequestIdParameter": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "The tracking ID sent with the request to help with debugging.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DisableCacheReprocessingChangeDetectionParameter": {
      "name": "disableCacheReprocessingChangeDetection",
      "in": "query",
      "description": "Disables cache reprocessing change detection.",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "IfMatchParameter": {
      "name": "If-Match",
      "in": "header",
      "description": "The tracking ID sent with the request to help with debugging.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifMatch"
    },
    "IfNoneMatchParameter": {
      "name": "If-None-Match",
      "in": "header",
      "description": "Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifNoneMatch"
    },
    "IgnoreResetRequirementsParameter": {
      "name": "ignoreResetRequirements",
      "in": "query",
      "description": "Ignores cache reset requirements.",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "skipIndexerResetRequirementForCache"
    },
    "PreferHeaderParameter": {
      "name": "Prefer",
      "in": "header",
      "description": "The tracking ID sent with the request to help with debugging.",
      "required": true,
      "type": "string",
      "enum": [
        "return=representation"
      ],
      "x-ms-enum": {
        "modelAsString": false
      },
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "prefer"
    },
    "SelectParameter": {
      "name": "$select",
      "in": "query",
      "description": "Selects which top-level properties of the resource to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
