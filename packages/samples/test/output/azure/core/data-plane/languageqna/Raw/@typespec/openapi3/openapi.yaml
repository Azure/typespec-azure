openapi: 3.0.0
info:
  title: Microsoft Cognitive Language Service - Question Answering - Authoring
  version: 21-10-01
tags: []
paths:
  /query-knowledgebases/projects:
    get:
      operationId: QuestionAnsweringProjects_listProjects
      description: Gets all projects for a user
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/Azure.Core.TopQueryParameter'
        - $ref: '#/components/parameters/Azure.Core.SkipQueryParameter'
        - $ref: '#/components/parameters/Azure.Core.MaxPageSizeQueryParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedProjectMetadata'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/deletion-jobs/{jobId}:
    get:
      operationId: QuestionAnsweringProjects_getDeleteStatus
      description: Gets the status of a Project delete job
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: jobId
          in: path
          required: true
          description: The job ID.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletionJobState'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/{projectName}:
    get:
      operationId: QuestionAnsweringProjects_getProjectDetails
      description: Get the requested project metadata
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMetadata'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    patch:
      operationId: QuestionAnsweringProjects_createProject
      description: Create or update a project
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMetadata'
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMetadata'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        description: The resource instance.
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectMetadataCreateOrUpdate'
    delete:
      operationId: QuestionAnsweringProjects_deleteProject
      description: Delete the project
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Operation-Location:
              required: true
              description: The location for monitoring the operation state.
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - status
                properties:
                  id:
                    type: string
                    description: The unique ID of the operation.
                  status:
                    allOf:
                      - $ref: '#/components/schemas/Azure.Core.Foundations.OperationState'
                    description: The status of the operation
                  error:
                    allOf:
                      - $ref: '#/components/schemas/Azure.Core.Foundations.Error'
                    description: Error object that describes the error when status is "Failed".
                description: Provides status details for long running operations.
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/{projectName}/:export:
    post:
      operationId: QuestionAnsweringProjects_export
      description: Export project metadata and assets
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
        - $ref: '#/components/parameters/ImportExportFormatParameter'
        - $ref: '#/components/parameters/AssetKindParameter'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Operation-Location:
              required: true
              description: The location for monitoring the operation state.
              schema:
                type: string
                format: uri
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      x-ms-long-running-operation: true
  /query-knowledgebases/projects/{projectName}/:import:
    post:
      operationId: QuestionAnsweringProjects_import
      description: Import project assets
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
        - $ref: '#/components/parameters/ImportExportFormatParameter'
        - $ref: '#/components/parameters/AssetKindParameter'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Operation-Location:
              required: true
              description: The location for monitoring the operation state.
              schema:
                type: string
                format: uri
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      x-ms-long-running-operation: true
  /query-knowledgebases/projects/{projectName}/deployments:
    get:
      operationId: QuestionAnsweringProjects_listDeployments
      description: List all deployments of a project.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedProjectDeployment'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/{projectName}/deployments/synonyms:
    get:
      operationId: QuestionAnsweringProjects_listSynonyms
      description: List all the synonyms of a project.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/ProjectNamePathParameter'
        - $ref: '#/components/parameters/Azure.Core.TopQueryParameter'
        - $ref: '#/components/parameters/Azure.Core.SkipQueryParameter'
        - $ref: '#/components/parameters/Azure.Core.MaxPageSizeQueryParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedSynonymAsset'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    put:
      operationId: QuestionAnsweringProjects_replaceSynonyms
      description: Create or update all the synonyms of a project.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/ProjectNamePathParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedSynonymAsset'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        description: The request body.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SynonymAsset'
  /query-knowledgebases/projects/{projectName}/deployments/{deploymentName}:
    put:
      operationId: QuestionAnsweringProjects_createDeployment
      description: Deploy project to production.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
        - name: deploymentName
          in: path
          required: true
          description: Name of the deployment.
          schema:
            type: string
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Operation-Location:
              required: true
              description: The location for monitoring the operation state.
              schema:
                type: string
                format: uri
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/{projectName}/deployments/{deploymentName}/jobs/{jobId}:
    get:
      operationId: QuestionAnsweringProjects_getDeploymentsJobStatus
      description: Gets the status of a Deploy job.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
        - name: deploymentName
          in: path
          required: true
          description: Name of the deployment.
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          description: The job ID.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentJobState'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/{projectName}/export/jobs/{jobId}:
    get:
      operationId: QuestionAnsweringProjects_getExportStatus
      description: Gets the status of an Export job, once job completes, returns the project metadata, and assets
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          description: The job ID.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJobState'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/{projectName}/feedback:
    post:
      operationId: QuestionAnsweringProjects_createFeedback
      description: Update Active Learning feedback.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/{projectName}/import/jobs/{jobId}:
    get:
      operationId: QuestionAnsweringProjects_getImportStatus
      description: Gets the status of an Import job
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: projectName
          in: path
          required: true
          description: Name of the project
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          description: The job ID.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobState'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/{projectName}/qnas:
    get:
      operationId: QuestionAnsweringProjects_listQuestionAndAnswers
      description: List all the sources of a project.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/ProjectNamePathParameter'
        - $ref: '#/components/parameters/Azure.Core.TopQueryParameter'
        - $ref: '#/components/parameters/Azure.Core.SkipQueryParameter'
        - $ref: '#/components/parameters/Azure.Core.MaxPageSizeQueryParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedQnaSourceRecord'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    patch:
      operationId: QuestionAnsweringProjects_updateQuestionAndAnswers
      description: Updates the sources of a project.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/ProjectNamePathParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedQnaSourceRecord'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        description: The request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QnaRecordUpdateRecord'
  /query-knowledgebases/projects/{projectName}/qnas/jobs/{jobId}:
    get:
      operationId: QuestionAnsweringProjects_getQuestionAndAnswersJobStatus
      description: Gets the status of update sources job.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/ProjectNamePathParameter'
        - $ref: '#/components/parameters/JobIdParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMetadata'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /query-knowledgebases/projects/{projectName}/sources:
    get:
      operationId: QuestionAnsweringProjects_listSources
      description: List all the sources of a project.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/ProjectNamePathParameter'
        - $ref: '#/components/parameters/Azure.Core.TopQueryParameter'
        - $ref: '#/components/parameters/Azure.Core.SkipQueryParameter'
        - $ref: '#/components/parameters/Azure.Core.MaxPageSizeQueryParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedQnaSourceRecord'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    patch:
      operationId: QuestionAnsweringProjects_updateSources
      description: Updates the sources of a project.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/ProjectNamePathParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedQnaSourceRecord'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        description: The request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QnaSourceRecordUpdateRecord'
  /query-knowledgebases/projects/{projectName}/sources/jobs/{jobId}:
    get:
      operationId: QuestionAnsweringProjects_getSourcesJobStatus
      description: Gets the status of update sources job.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/ProjectNamePathParameter'
        - $ref: '#/components/parameters/JobIdParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMetadata'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
security:
  - ApiKeyAuth: []
  - OAuth2Auth:
      - https://cognitiveservices.azure.com/.default
components:
  parameters:
    AssetKindParameter:
      name: assetKind
      in: query
      required: false
      description: Kind of the asset of the project
      schema:
        type: string
        enum:
          - qnas
          - synonyms
    Azure.Core.Foundations.ApiVersionParameter:
      name: api-version
      in: query
      required: true
      description: The API version to use for this operation.
      schema:
        type: string
        minLength: 1
    Azure.Core.MaxPageSizeQueryParameter:
      name: maxpagesize
      in: query
      required: false
      description: The maximum number of result items per page.
      schema:
        type: integer
        format: int32
    Azure.Core.SkipQueryParameter:
      name: skip
      in: query
      required: false
      description: The number of result items to skip.
      schema:
        type: integer
        format: int32
        default: 0
    Azure.Core.TopQueryParameter:
      name: top
      in: query
      required: false
      description: The number of result items to return.
      schema:
        type: integer
        format: int32
    ImportExportFormatParameter:
      name: format
      in: query
      required: false
      description: Knowledge base Import or Export format
      schema:
        $ref: '#/components/schemas/ImportExportFormat'
    JobIdParameter:
      name: jobId
      in: path
      required: true
      description: Job ID
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ProjectNamePathParameter:
      name: projectName
      in: path
      required: true
      description: The name of the project
      schema:
        type: string
        maxLength: 100
  schemas:
    ActiveLearningFeedback:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackRecord'
          description: A list of Feedback Records for Active Learning.
      description: The active learning feedback.
    ApiKey:
      type: object
      description: The API key header definition.
    Azure.Core.Foundations.Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        message:
          type: string
          description: A human-readable representation of the error.
        target:
          type: string
          description: The target of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: An array of details about specific errors that led to this reported error.
        innererror:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
          description: An object containing more specific information than the current object about the error.
      description: The error object.
    Azure.Core.Foundations.ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: The error object.
      description: A response containing error details.
    Azure.Core.Foundations.InnerError:
      type: object
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        innererror:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
          description: Inner error.
      description: An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
    Azure.Core.Foundations.OperationState:
      type: string
      enum:
        - NotStarted
        - Running
        - Succeeded
        - Failed
        - Canceled
      description: Enum describing allowed operation states.
    CreateProjectOptions:
      type: object
      properties:
        description:
          type: string
          description: Description of the project
        language:
          type: string
          description: Language of the text records. This is BCP-47 representation of a language. For example, use "en" for English; "es" for Spanish etc. If not set, use "en" for English as default.
        multilingualResource:
          type: boolean
          description: Resource enabled for multiple languages across projects or not
        settings:
          allOf:
            - $ref: '#/components/schemas/ProjectSettings'
          description: Configurable settings of the Project
      description: Parameters needed to create the project
    DeletionJobState:
      type: object
      required:
        - jobId
        - createdDateTime
        - lastUpdatedDateTime
        - status
        - errors
      properties:
        jobId:
          type: string
          description: The job ID.
          readOnly: true
        createdDateTime:
          type: string
          format: date-time
          description: When the job was created.
        expirationDateTime:
          type: string
          format: date-time
          description: When the job expires.
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: When the job was last updated.
        status:
          allOf:
            - $ref: '#/components/schemas/JobStatus'
          description: The job status.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: The error list.
      description: The state of a deletion job.
    DeploymentJobState:
      type: object
      required:
        - jobId
        - createdDateTime
        - lastUpdatedDateTime
        - status
        - errors
      properties:
        jobId:
          type: string
          description: The job ID.
          readOnly: true
        createdDateTime:
          type: string
          format: date-time
          description: When the job was created.
        expirationDateTime:
          type: string
          format: date-time
          description: When the job expires.
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: When the job was last updated.
        status:
          allOf:
            - $ref: '#/components/schemas/JobStatus'
          description: The job status.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: The error list.
      description: Job state represents the job metadata and any errors
    Errors:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: The error list.
      description: Collection of error types
    ExportJobResultUrl:
      type: object
      required:
        - resultUrl
      properties:
        resultUrl:
          type: string
          description: URL to download the result of the Export Job
      description: URL to download the result of the Export Job
    ExportJobState:
      type: object
      required:
        - jobId
        - createdDateTime
        - lastUpdatedDateTime
        - status
        - errors
        - resultUrl
      properties:
        jobId:
          type: string
          description: The job ID.
          readOnly: true
        createdDateTime:
          type: string
          format: date-time
          description: When the job was created.
        expirationDateTime:
          type: string
          format: date-time
          description: When the job expires.
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: When the job was last updated.
        status:
          allOf:
            - $ref: '#/components/schemas/JobStatus'
          description: The job status.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: The error list.
        resultUrl:
          type: string
          description: URL to download the result of the Export Job
      description: Export job status, project metadata, and assets.
    FeedbackRecord:
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier of the user.
        userQuestion:
          type: string
          description: User suggested question for the QnA.
        qnaId:
          type: integer
          format: int32
          description: Unique ID of the QnA.
      description: A feedback record.
    ImportExportFormat:
      type: string
      enum:
        - json
        - tsv
        - excel
      description: The format of an import or export operation.
    JobMetadata:
      type: object
      required:
        - jobId
        - createdDateTime
        - lastUpdatedDateTime
        - status
      properties:
        jobId:
          type: string
          description: The job ID.
          readOnly: true
        createdDateTime:
          type: string
          format: date-time
          description: When the job was created.
        expirationDateTime:
          type: string
          format: date-time
          description: When the job expires.
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: When the job was last updated.
        status:
          allOf:
            - $ref: '#/components/schemas/JobStatus'
          description: The job status.
      description: Represents the job metadata
    JobState:
      type: object
      required:
        - jobId
        - createdDateTime
        - lastUpdatedDateTime
        - status
        - errors
      properties:
        jobId:
          type: string
          description: The job ID.
          readOnly: true
        createdDateTime:
          type: string
          format: date-time
          description: When the job was created.
        expirationDateTime:
          type: string
          format: date-time
          description: When the job expires.
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: When the job was last updated.
        status:
          allOf:
            - $ref: '#/components/schemas/JobStatus'
          description: The job status.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: The error list.
      description: Job state represents the job metadata and any errors
    JobStatus:
      type: string
      enum:
        - notStarted
        - running
        - succeeded
        - failed
        - cancelled
        - cancelling
        - partiallyCompleted
      description: The job status.
    PagedProjectDeployment:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDeployment'
          description: The ProjectDeployment items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged collection of ProjectDeployment items
    PagedProjectMetadata:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMetadata'
          description: The ProjectMetadata items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged collection of ProjectMetadata items
    PagedQnaSourceRecord:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/QnaSourceRecord'
          description: The QnaSourceRecord items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged collection of QnaSourceRecord items
    PagedSynonymAsset:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SynonymAsset'
          description: The SynonymAsset items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged collection of SynonymAsset items
    ProjectDeployment:
      type: object
      required:
        - deploymentName
      properties:
        deploymentName:
          type: string
          description: Name of the deployment.
          readOnly: true
        lastDeployedDateTime:
          type: string
          format: date-time
          description: Represents the project last deployment date-time.
      description: Project deployment details.
    ProjectMetadata:
      type: object
      required:
        - projectName
        - description
      properties:
        projectName:
          type: string
          description: Name of the project
          readOnly: true
        description:
          type: string
          description: Description of the project.
      description: Represents the project
    ProjectMetadataCreateOrUpdate:
      type: object
      properties:
        description:
          type: string
          description: Description of the project.
      description: Represents the project
    ProjectSettings:
      type: object
      properties:
        defaultAnswer:
          type: string
          description: Default Answer response when no good match is found in the knowledge base
      description: Configurable settings of the Project
    QnaDialog:
      type: object
      required:
        - isContextOnly
        - prompts
      properties:
        isContextOnly:
          type: boolean
          description: If true, is context only.
        prompts:
          description: The prompts to display.
          type: array
          items:
            $ref: '#/components/schemas/QnaPrompt'
      description: A dialog to be displayed to the user.
    QnaDialogUpdate:
      type: object
      properties:
        isContextOnly:
          type: boolean
          description: If true, is context only.
        prompts:
          type: array
          items:
            $ref: '#/components/schemas/QnaPrompt'
          description: The prompts to display.
      description: A dialog to be displayed to the user.
    QnaPrompt:
      type: object
      required:
        - displayOrder
        - qnaId
        - qna
        - displayText
      properties:
        displayOrder:
          type: integer
          format: int16
          description: The display order.
        qnaId:
          type: integer
          format: int32
          description: The QnA ID.
        qna:
          allOf:
            - $ref: '#/components/schemas/QnaRecord'
          description: The QnA record.
        displayText:
          type: string
          description: The display text.
      description: Details of a QnA prompt.
    QnaRecord:
      type: object
      required:
        - id
        - answer
        - source
        - questions
        - metadata
        - dialog
        - activeLearningSuggestions
      properties:
        id:
          type: integer
          format: int32
          description: The record ID.
        answer:
          type: string
          description: The answer.
        source:
          type: string
          description: The source.
        questions:
          type: array
          items:
            type: string
          description: The questions.
        metadata:
          type: string
          description: The metadata.
        dialog:
          allOf:
            - $ref: '#/components/schemas/QnaDialog'
          description: The dialog.
        activeLearningSuggestions:
          allOf:
            - $ref: '#/components/schemas/SuggestedQuestionsCluster'
          description: The active learning suggestions.
      description: Question and answer record
    QnaRecordUpdate:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The record ID.
        answer:
          type: string
          description: The answer.
        source:
          type: string
          description: The source.
        questions:
          type: array
          items:
            type: string
          description: The questions.
        metadata:
          type: string
          description: The metadata.
        dialog:
          allOf:
            - $ref: '#/components/schemas/QnaDialogUpdate'
          description: The dialog.
        activeLearningSuggestions:
          allOf:
            - $ref: '#/components/schemas/SuggestedQuestionsClusterUpdate'
          description: The active learning suggestions.
      description: Question and answer record
    QnaRecordUpdateRecord:
      type: object
      properties:
        updateOperation:
          $ref: '#/components/schemas/UpdateOperationKind'
        value:
          $ref: '#/components/schemas/QnaRecordUpdate'
    QnaSourceKind:
      type: string
      enum:
        - file
        - url
      description: Supported source types.
    QnaSourceMetadata:
      type: object
      required:
        - sourceUri
        - sourceKind
        - contentStructureKind
      properties:
        displayName:
          type: string
          description: Friendly name of the Source.
        source:
          type: string
          description: Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.
        sourceUri:
          type: string
          description: URI location for the file or url.
        sourceKind:
          allOf:
            - $ref: '#/components/schemas/QnaSourceKind'
          description: The source kind.
        contentStructureKind:
          allOf:
            - $ref: '#/components/schemas/SourceContentStructureKind'
          description: The content structure kind.
      description: Input source file or url details.
    QnaSourceRecord:
      type: object
      required:
        - sourceUri
        - sourceKind
        - contentStructureKind
      properties:
        displayName:
          type: string
          description: Friendly name of the Source.
        source:
          type: string
          description: Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.
        sourceUri:
          type: string
          description: URI location for the file or url.
        sourceKind:
          allOf:
            - $ref: '#/components/schemas/QnaSourceKind'
          description: The source kind.
        contentStructureKind:
          allOf:
            - $ref: '#/components/schemas/SourceContentStructureKind'
          description: The content structure kind.
        lastDeployedDateTime:
          type: string
          format: date-time
          description: The time of the last deployment.
      description: Custom source record with last updated date-time.
    QnaSourceRecordUpdate:
      type: object
      properties:
        displayName:
          type: string
          description: Friendly name of the Source.
        source:
          type: string
          description: Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.
        sourceUri:
          type: string
          description: URI location for the file or url.
        sourceKind:
          allOf:
            - $ref: '#/components/schemas/QnaSourceKind'
          description: The source kind.
        contentStructureKind:
          allOf:
            - $ref: '#/components/schemas/SourceContentStructureKind'
          description: The content structure kind.
        lastDeployedDateTime:
          type: string
          format: date-time
          description: The time of the last deployment.
      description: Custom source record with last updated date-time.
    QnaSourceRecordUpdateRecord:
      type: object
      properties:
        updateOperation:
          $ref: '#/components/schemas/UpdateOperationKind'
        value:
          $ref: '#/components/schemas/QnaSourceRecordUpdate'
    SourceContentStructureKind:
      type: string
      enum:
        - unstructured
      description: Content structure type for sources.
    SuggestedQuestion:
      type: object
      required:
        - question
        - userSuggestedCount
        - autoSuggestedCount
      properties:
        question:
          type: string
          description: Question suggested by the Active Learning feature.
        userSuggestedCount:
          type: integer
          format: int32
          description: The number of times the question was suggested explicitly by the user.
        autoSuggestedCount:
          type: integer
          format: int32
          description: The number of times the question was suggested automatically by the Active Learning algorithm.
      description: Question suggested by the Active Learning feature.
    SuggestedQuestionUpdate:
      type: object
      properties:
        question:
          type: string
          description: Question suggested by the Active Learning feature.
        userSuggestedCount:
          type: integer
          format: int32
          description: The number of times the question was suggested explicitly by the user.
        autoSuggestedCount:
          type: integer
          format: int32
          description: The number of times the question was suggested automatically by the Active Learning algorithm.
      description: Question suggested by the Active Learning feature.
    SuggestedQuestionsCluster:
      type: object
      required:
        - clusterHead
        - suggestedQuestions
      properties:
        clusterHead:
          type: string
          description: Active Learning suggested questions cluster details.
        suggestedQuestions:
          allOf:
            - $ref: '#/components/schemas/SuggestedQuestion'
          description: List of all suggested questions for the QnA.
      description: The details of a suggested questions cluster.
    SuggestedQuestionsClusterUpdate:
      type: object
      properties:
        clusterHead:
          type: string
          description: Active Learning suggested questions cluster details.
        suggestedQuestions:
          allOf:
            - $ref: '#/components/schemas/SuggestedQuestionUpdate'
          description: List of all suggested questions for the QnA.
      description: The details of a suggested questions cluster.
    SynonymAsset:
      type: object
      required:
        - alterations
      properties:
        alterations:
          type: array
          items:
            type: string
          description: Collection of word alterations.
      description: Collection of synonyms.
    UpdateOperationKind:
      type: string
      enum:
        - add
        - delete
        - replace
      description: The kind of an update operation.
    UpdateQnaSourceRecord:
      type: object
      required:
        - sourceUri
        - sourceKind
        - contentStructureKind
        - refreshSourceOptions
      properties:
        displayName:
          type: string
          description: Friendly name of the Source.
        source:
          type: string
          description: Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.
        sourceUri:
          type: string
          description: URI location for the file or url.
        sourceKind:
          allOf:
            - $ref: '#/components/schemas/QnaSourceKind'
          description: The source kind.
        contentStructureKind:
          allOf:
            - $ref: '#/components/schemas/SourceContentStructureKind'
          description: The content structure kind.
        refreshSourceOptions:
          type: boolean
          description: Boolean flag used to refresh data from the Source.
      description: Update source record.
    WordAlterations:
      type: object
      required:
        - alterations
      properties:
        alterations:
          type: array
          items:
            type: string
          description: Collection of word alterations.
      description: Collection of word alterations.
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: api-key
    OAuth2Auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.contoso.com/common/oauth2/v2.0/authorize
          scopes:
            https://cognitiveservices.azure.com/.default: ''
