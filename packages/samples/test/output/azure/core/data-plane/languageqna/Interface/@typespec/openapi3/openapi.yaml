openapi: 3.0.0
info:
  title: Hello world
  version: 0.0.0
tags: []
paths:
  /feedback/{projectName}:
    post:
      operationId: Projects_feedback
      parameters:
        - $ref: '#/components/parameters/ProjectMetadataKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveLearningFeedback'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveLearningFeedback'
  /projects:
    get:
      operationId: Projects_list
      description: Lists all instances of the resource.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMetadataCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
  /projects/{projectName}:
    post:
      operationId: Hello_CreateExport
      parameters:
        - $ref: '#/components/parameters/ProjectNamePathParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobState'
    get:
      operationId: Projects_get
      description: Gets an instance of the resource.
      parameters:
        - $ref: '#/components/parameters/ProjectMetadataKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMetadata'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
    delete:
      operationId: Projects_delete
      description: Deletes an existing instance of the resource.
      parameters:
        - $ref: '#/components/parameters/ProjectMetadataKey'
      responses:
        '200':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
    patch:
      operationId: Projects_update
      description: Updates an existing instance of the resource.
      parameters:
        - $ref: '#/components/parameters/ProjectMetadataKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMetadata'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMetadataUpdate'
  /projects/{projectName}/deployments:
    post:
      operationId: Deployments_create
      description: Creates a new instance of the resource.
      parameters:
        - $ref: '#/components/parameters/ProjectDeploymentParentKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeployment'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeployment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDeploymentCreate'
    get:
      operationId: Deployments_list
      description: Lists all instances of the resource.
      parameters:
        - $ref: '#/components/parameters/ProjectDeploymentParentKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeploymentCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
  /projects/{projectName}/qnas:
    post:
      operationId: Qnas_create
      description: Creates a new instance of the resource.
      parameters:
        - $ref: '#/components/parameters/QnaRecordParentKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QnaRecord'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QnaRecord'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QnaRecordCreate'
    get:
      operationId: Qnas_list
      description: Lists all instances of the resource.
      parameters:
        - $ref: '#/components/parameters/QnaRecordParentKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QnaRecordCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
  /projects/{projectName}/sources:
    get:
      operationId: Sources_list
      description: Lists all instances of the resource.
      parameters:
        - $ref: '#/components/parameters/QnaSourceRecordParentKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QnaSourceRecordCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
  /projects/{projectName}/sources/{source}:
    patch:
      operationId: Sources_update
      description: Updates an existing instance of the resource.
      parameters:
        - $ref: '#/components/parameters/QnaSourceRecordKey.projectName'
        - $ref: '#/components/parameters/QnaSourceRecordKey.source'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QnaSourceRecord'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QnaSourceRecordUpdate'
  /projects/{projectName}/synonym:
    post:
      operationId: Synonyms_create
      description: Creates a new instance of the resource.
      parameters:
        - $ref: '#/components/parameters/SynonymAssetParentKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymAsset'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymAsset'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynonymAssetCreate'
    get:
      operationId: Synonyms_list
      description: Lists all instances of the resource.
      parameters:
        - $ref: '#/components/parameters/SynonymAssetParentKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymAssetCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
  /{projectName}:
    post:
      operationId: Projects_CreateExport
      parameters:
        - $ref: '#/components/parameters/ProjectMetadataKey'
        - $ref: '#/components/parameters/AssetKindParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - ''
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
      x-ms-long-running-operation: true
  /{projectName}/jobs/{jobId}/{source}:
    get:
      operationId: Deployments_GetJob
      parameters:
        - $ref: '#/components/parameters/QnaSourceRecordKey.projectName'
        - $ref: '#/components/parameters/QnaSourceRecordKey.source'
        - $ref: '#/components/parameters/JobIdParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobState'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
  /{projectName}/qnas/jobs/{jobId}/{id}:
    get:
      operationId: Qnas_GetJob
      parameters:
        - $ref: '#/components/parameters/QnaRecordKey.projectName'
        - $ref: '#/components/parameters/QnaRecordKey.id'
        - $ref: '#/components/parameters/JobIdParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobState'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
  /{projectName}/sources/jobs/{jobId}/{source}:
    get:
      operationId: Sources_GetJob
      parameters:
        - $ref: '#/components/parameters/QnaSourceRecordKey.projectName'
        - $ref: '#/components/parameters/QnaSourceRecordKey.source'
        - $ref: '#/components/parameters/JobIdParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobState'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataError'
security:
  - ApiKeyAuth: []
  - OAuth2Auth:
      - https://cognitiveservices.azure.com/.default
components:
  parameters:
    AssetKindParameter:
      name: assetKind
      in: query
      required: false
      description: Kind of the asset of the project
      schema:
        type: string
        enum:
          - qnas
          - synonyms
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    JobIdParameter:
      name: jobId
      in: path
      required: true
      description: Job ID
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    ProjectDeploymentParentKey:
      name: projectName
      in: path
      required: true
      description: Name of the project.
      schema:
        type: string
    ProjectMetadataKey:
      name: projectName
      in: path
      required: true
      description: Name of the project.
      schema:
        type: string
    ProjectNamePathParameter:
      name: projectName
      in: path
      required: true
      description: The name of the project to use
      schema:
        type: string
        maxLength: 100
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    QnaRecordKey.id:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int32
    QnaRecordKey.projectName:
      name: projectName
      in: path
      required: true
      description: Name of the project.
      schema:
        type: string
    QnaRecordParentKey:
      name: projectName
      in: path
      required: true
      description: Name of the project.
      schema:
        type: string
    QnaSourceRecordKey.projectName:
      name: projectName
      in: path
      required: true
      description: Name of the project.
      schema:
        type: string
    QnaSourceRecordKey.source:
      name: source
      in: path
      required: true
      description: Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.
      schema:
        type: string
    QnaSourceRecordParentKey:
      name: projectName
      in: path
      required: true
      description: Name of the project.
      schema:
        type: string
    SynonymAssetParentKey:
      name: projectName
      in: path
      required: true
      description: Name of the project.
      schema:
        type: string
  schemas:
    ActiveLearningFeedback:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackRecord'
          description: A list of Feedback Records for Active Learning.
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ErrorCode'
          description: One of a server-defined set of error codes
        message:
          type: string
          description: A human-readable representation of the error
        target:
          type: string
          description: Error target
      description: The error object
    ErrorCode:
      anyOf:
        - type: string
        - type: string
          enum:
            - InvalidRequest
            - InvalidArgument
            - Unauthorized
            - Forbidden
            - NotFound
            - ProjectNotFound
            - OperationNotFound
            - AzureCognitiveSearchNotFound
            - AzureCognitiveSearchIndexNotFound
            - TooManyRequests
            - AzureCognitiveSearchThrottling
            - AzureCognitiveSearchIndexLimitReached
            - InternalServerError
            - ServiceUnavailable
    FeedbackRecord:
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier of the user.
        userQuestion:
          type: string
          description: User suggested question for the QnA.
        qnaId:
          type: integer
          format: int32
          description: Unique ID of the QnA.
    JobState:
      type: object
      required:
        - jobId
        - createdDateTime
        - lastUpdatedDateTime
        - status
        - errors
      properties:
        jobId:
          type: string
        createdDateTime:
          type: string
          format: date-time
        lastUpdatedDateTime:
          type: string
          format: date-time
        expirationDateTime:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/JobStatus'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          description: Collection of Error types.
      description: Job state represents the job metadata and any errors.
    JobStatus:
      anyOf:
        - type: string
        - type: string
          enum:
            - notStarted
            - running
            - succeeded
            - failed
            - cancelled
            - cancelling
            - partiallyCompleted
      description: Job status.
    Language:
      type: string
      description: Language of the text records. This is BCP-47 representation of a language. For example, use "en" for English; "es" for Spanish etc. If not set, use "en" for English as default.
    ODataError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ProjectDeployment:
      type: object
      required:
        - deploymentName
      properties:
        deploymentName:
          type: string
          description: Name of the deployment.
        lastDeployedDateTime:
          type: string
          description: Represents the project last deployment date-time.
    ProjectDeploymentCollectionWithNextLink:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDeployment'
          description: The items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged response of ProjectDeployment items
    ProjectDeploymentCreate:
      type: object
      properties:
        lastDeployedDateTime:
          type: string
          description: Represents the project last deployment date-time.
      description: Resource create operation model.
    ProjectMetadata:
      type: object
      required:
        - projectName
      properties:
        projectName:
          type: string
          description: Name of the project.
        description:
          type: string
          description: Description of the project.
        language:
          $ref: '#/components/schemas/Language'
        multilingualResource:
          type: boolean
          description: Resource enabled for multiple languages across projects or not.
        settings:
          $ref: '#/components/schemas/ProjectSettings'
        createdDateTime:
          type: string
          description: Project creation date-time.
        lastModifiedDateTime:
          type: string
          description: Represents the project last modified date-time.
        lastDeployedDateTime:
          type: string
          description: Represents the project last deployment date-time.
    ProjectMetadataCollectionWithNextLink:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMetadata'
          description: The items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged response of ProjectMetadata items
    ProjectMetadataUpdate:
      type: object
      properties:
        description:
          type: string
          description: Description of the project.
        language:
          $ref: '#/components/schemas/Language'
        multilingualResource:
          type: boolean
          description: Resource enabled for multiple languages across projects or not.
        settings:
          $ref: '#/components/schemas/ProjectSettings'
        createdDateTime:
          type: string
          description: Project creation date-time.
        lastModifiedDateTime:
          type: string
          description: Represents the project last modified date-time.
        lastDeployedDateTime:
          type: string
          description: Represents the project last deployment date-time.
      description: Resource create or update operation model.
    ProjectSettings:
      type: object
      properties:
        defaultAnswer:
          type: string
          description: Default Answer response when no good match is found in the knowledge base.
    QnaDialog:
      type: object
      required:
        - isContextOnly
        - prompts
      properties:
        isContextOnly:
          type: boolean
        prompts:
          type: array
          items:
            $ref: '#/components/schemas/QnaPrompt'
    QnaPrompt:
      type: object
      required:
        - displayOrder
        - qnaId
        - qna
        - displayText
      properties:
        displayOrder:
          type: integer
          format: int16
        qnaId:
          type: integer
          format: int32
        qna:
          $ref: '#/components/schemas/QnaRecord'
        displayText:
          type: string
    QnaRecord:
      type: object
      required:
        - id
        - answer
        - source
        - questions
        - metadata
        - dialog
        - activeLearningSuggestions
      properties:
        id:
          type: integer
          format: int32
        answer:
          type: string
        source:
          type: string
        questions:
          type: array
          items:
            type: string
        metadata:
          type: string
        dialog:
          $ref: '#/components/schemas/QnaDialog'
        activeLearningSuggestions:
          $ref: '#/components/schemas/SuggestedQuestionsCluster'
    QnaRecordCollectionWithNextLink:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/QnaRecord'
          description: The items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged response of QnaRecord items
    QnaRecordCreate:
      type: object
      required:
        - answer
        - source
        - questions
        - metadata
        - dialog
        - activeLearningSuggestions
      properties:
        answer:
          type: string
        source:
          type: string
        questions:
          type: array
          items:
            type: string
        metadata:
          type: string
        dialog:
          $ref: '#/components/schemas/QnaDialog'
        activeLearningSuggestions:
          $ref: '#/components/schemas/SuggestedQuestionsCluster'
      description: Resource create operation model.
    QnaSourceKind:
      anyOf:
        - type: string
        - type: string
          enum:
            - file
            - url
      description: Supported source types.
    QnaSourceRecord:
      type: object
      required:
        - source
        - sourceUri
        - sourceKind
        - contentStructureKind
        - lastUpdatedDateTime
      properties:
        displayName:
          type: string
          description: Friendly name of the Source.
        source:
          type: string
          description: Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.
        sourceUri:
          type: string
          description: URI location for the file or url.
        sourceKind:
          $ref: '#/components/schemas/QnaSourceKind'
        contentStructureKind:
          $ref: '#/components/schemas/SourceContentStructureKind'
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: Date-time when the QnA was last updated.
      description: Custom source record with last updated date-time.
    QnaSourceRecordCollectionWithNextLink:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/QnaSourceRecord'
          description: The items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged response of QnaSourceRecord items
    QnaSourceRecordUpdate:
      type: object
      properties:
        displayName:
          type: string
          description: Friendly name of the Source.
        sourceUri:
          type: string
          description: URI location for the file or url.
        sourceKind:
          $ref: '#/components/schemas/QnaSourceKind'
        contentStructureKind:
          $ref: '#/components/schemas/SourceContentStructureKind'
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: Date-time when the QnA was last updated.
      description: Resource create or update operation model.
    SourceContentStructureKind:
      anyOf:
        - type: string
        - type: string
          enum:
            - unstructured
      description: Content structure type for sources.
    SuggestedQuestion:
      type: object
      required:
        - question
        - userSuggestedCount
        - autoSuggestedCount
      properties:
        question:
          type: string
        userSuggestedCount:
          type: integer
          format: int32
        autoSuggestedCount:
          type: integer
          format: int32
    SuggestedQuestionsCluster:
      type: object
      required:
        - clusterHead
        - suggestedQuestions
      properties:
        clusterHead:
          type: string
        suggestedQuestions:
          $ref: '#/components/schemas/SuggestedQuestion'
    SynonymAsset:
      type: object
      required:
        - alterations
      properties:
        alterations:
          type: array
          items:
            type: string
          description: Collection of word alterations.
    SynonymAssetCollectionWithNextLink:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SynonymAsset'
          description: The items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged response of SynonymAsset items
    SynonymAssetCreate:
      type: object
      description: Resource create operation model.
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: api-key
    OAuth2Auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.contoso.com/common/oauth2/v2.0/authorize
          scopes:
            https://cognitiveservices.azure.com/.default: ''
