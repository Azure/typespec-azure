{
  "swagger": "2.0",
  "info": {
    "title": "Hello world",
    "version": "0000-00-00",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://cognitiveservices.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "api-key",
      "in": "header"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.contoso.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://cognitiveservices.azure.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/{projectName}": {
      "post": {
        "operationId": "Projects_CreateExport",
        "parameters": [
          {
            "$ref": "#/parameters/ProjectMetadataKey"
          },
          {
            "$ref": "#/parameters/AssetKindParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "string",
              "enum": [
                ""
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/{projectName}/jobs/{jobId}/{source}": {
      "get": {
        "operationId": "Deployments_GetJob",
        "parameters": [
          {
            "$ref": "#/parameters/QnaSourceRecordKey.projectName"
          },
          {
            "$ref": "#/parameters/QnaSourceRecordKey.source"
          },
          {
            "$ref": "#/parameters/JobIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/JobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/{projectName}/qnas/jobs/{jobId}/{id}": {
      "get": {
        "operationId": "Qnas_GetJob",
        "parameters": [
          {
            "$ref": "#/parameters/QnaRecordKey.projectName"
          },
          {
            "$ref": "#/parameters/QnaRecordKey.id"
          },
          {
            "$ref": "#/parameters/JobIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/JobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/{projectName}/sources/jobs/{jobId}/{source}": {
      "get": {
        "operationId": "Sources_GetJob",
        "parameters": [
          {
            "$ref": "#/parameters/QnaSourceRecordKey.projectName"
          },
          {
            "$ref": "#/parameters/QnaSourceRecordKey.source"
          },
          {
            "$ref": "#/parameters/JobIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/JobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/feedback/{projectName}": {
      "post": {
        "operationId": "Projects_Feedback",
        "parameters": [
          {
            "$ref": "#/parameters/ProjectMetadataKey"
          },
          {
            "name": "feedback",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActiveLearningFeedback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ActiveLearningFeedback"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "operationId": "Projects_List",
        "description": "Lists all instances of the resource.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectMetadataCollectionWithNextLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/projects/{projectName}": {
      "get": {
        "operationId": "Projects_Get",
        "description": "Gets an instance of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ProjectMetadataKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectMetadata"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      },
      "post": {
        "operationId": "Hello_CreateExport",
        "parameters": [
          {
            "$ref": "#/parameters/ProjectNamePathParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/JobState"
            }
          }
        }
      },
      "patch": {
        "operationId": "Projects_Update",
        "description": "Updates an existing instance of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ProjectMetadataKey"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectMetadataUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectMetadata"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      },
      "delete": {
        "operationId": "Projects_Delete",
        "description": "Deletes an existing instance of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ProjectMetadataKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/projects/{projectName}/deployments": {
      "get": {
        "operationId": "Deployments_List",
        "description": "Lists all instances of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ProjectDeploymentParentKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectDeploymentCollectionWithNextLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      },
      "post": {
        "operationId": "Deployments_Create",
        "description": "Creates a new instance of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ProjectDeploymentParentKey"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectDeploymentCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProjectDeployment"
            }
          },
          "201": {
            "description": "Resource create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProjectDeployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/projects/{projectName}/qnas": {
      "get": {
        "operationId": "Qnas_List",
        "description": "Lists all instances of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/QnaRecordParentKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QnaRecordCollectionWithNextLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      },
      "post": {
        "operationId": "Qnas_Create",
        "description": "Creates a new instance of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/QnaRecordParentKey"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QnaRecordCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QnaRecord"
            }
          },
          "201": {
            "description": "Resource create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QnaRecord"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/projects/{projectName}/sources": {
      "get": {
        "operationId": "Sources_List",
        "description": "Lists all instances of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/QnaSourceRecordParentKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QnaSourceRecordCollectionWithNextLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/projects/{projectName}/sources/{source}": {
      "patch": {
        "operationId": "Sources_Update",
        "description": "Updates an existing instance of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/QnaSourceRecordKey.projectName"
          },
          {
            "$ref": "#/parameters/QnaSourceRecordKey.source"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QnaSourceRecordUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QnaSourceRecord"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    },
    "/projects/{projectName}/synonym": {
      "get": {
        "operationId": "Synonyms_List",
        "description": "Lists all instances of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SynonymAssetParentKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SynonymAssetCollectionWithNextLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      },
      "post": {
        "operationId": "Synonyms_Create",
        "description": "Creates a new instance of the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SynonymAssetParentKey"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SynonymAssetCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SynonymAsset"
            }
          },
          "201": {
            "description": "Resource create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SynonymAsset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ODataError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActiveLearningFeedback": {
      "type": "object",
      "properties": {
        "records": {
          "type": "array",
          "description": "A list of Feedback Records for Active Learning.",
          "items": {
            "$ref": "#/definitions/FeedbackRecord"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "The error object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorCode",
          "description": "One of a server-defined set of error codes"
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error"
        },
        "target": {
          "type": "string",
          "description": "Error target"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorCode": {
      "type": "string",
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "ProjectNotFound",
        "OperationNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchIndexNotFound",
        "TooManyRequests",
        "AzureCognitiveSearchThrottling",
        "AzureCognitiveSearchIndexLimitReached",
        "InternalServerError",
        "ServiceUnavailable"
      ],
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true
      }
    },
    "FeedbackRecord": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Unique identifier of the user."
        },
        "userQuestion": {
          "type": "string",
          "description": "User suggested question for the QnA."
        },
        "qnaId": {
          "type": "integer",
          "format": "int32",
          "description": "Unique ID of the QnA."
        }
      }
    },
    "JobState": {
      "type": "object",
      "description": "Job state represents the job metadata and any errors.",
      "properties": {
        "jobId": {
          "type": "string"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/JobStatus"
        },
        "errors": {
          "type": "array",
          "description": "Collection of Error types.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "status",
        "errors"
      ]
    },
    "JobStatus": {
      "type": "string",
      "description": "Job status.",
      "enum": [
        "notStarted",
        "running",
        "succeeded",
        "failed",
        "cancelled",
        "cancelling",
        "partiallyCompleted"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true
      }
    },
    "Language": {
      "type": "string",
      "description": "Language of the text records. This is BCP-47 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
    },
    "ODataError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "ProjectDeployment": {
      "type": "object",
      "properties": {
        "deploymentName": {
          "type": "string",
          "description": "Name of the deployment."
        },
        "lastDeployedDateTime": {
          "type": "string",
          "description": "Represents the project last deployment date-time."
        }
      },
      "required": [
        "deploymentName"
      ]
    },
    "ProjectDeploymentCollectionWithNextLink": {
      "type": "object",
      "description": "Paged response of ProjectDeployment items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The items on this page",
          "items": {
            "$ref": "#/definitions/ProjectDeployment"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProjectDeploymentCreate": {
      "type": "object",
      "description": "Resource create operation model.",
      "properties": {
        "lastDeployedDateTime": {
          "type": "string",
          "description": "Represents the project last deployment date-time."
        }
      }
    },
    "ProjectMetadata": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "Name of the project."
        },
        "description": {
          "type": "string",
          "description": "Description of the project."
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "multilingualResource": {
          "type": "boolean",
          "description": "Resource enabled for multiple languages across projects or not."
        },
        "settings": {
          "$ref": "#/definitions/ProjectSettings"
        },
        "createdDateTime": {
          "type": "string",
          "description": "Project creation date-time."
        },
        "lastModifiedDateTime": {
          "type": "string",
          "description": "Represents the project last modified date-time."
        },
        "lastDeployedDateTime": {
          "type": "string",
          "description": "Represents the project last deployment date-time."
        }
      },
      "required": [
        "projectName"
      ]
    },
    "ProjectMetadataCollectionWithNextLink": {
      "type": "object",
      "description": "Paged response of ProjectMetadata items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The items on this page",
          "items": {
            "$ref": "#/definitions/ProjectMetadata"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProjectMetadataUpdate": {
      "type": "object",
      "description": "Resource create or update operation model.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the project."
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "multilingualResource": {
          "type": "boolean",
          "description": "Resource enabled for multiple languages across projects or not."
        },
        "settings": {
          "$ref": "#/definitions/ProjectSettings"
        },
        "createdDateTime": {
          "type": "string",
          "description": "Project creation date-time."
        },
        "lastModifiedDateTime": {
          "type": "string",
          "description": "Represents the project last modified date-time."
        },
        "lastDeployedDateTime": {
          "type": "string",
          "description": "Represents the project last deployment date-time."
        }
      }
    },
    "ProjectSettings": {
      "type": "object",
      "properties": {
        "defaultAnswer": {
          "type": "string",
          "description": "Default Answer response when no good match is found in the knowledge base."
        }
      }
    },
    "QnaDialog": {
      "type": "object",
      "properties": {
        "isContextOnly": {
          "type": "boolean"
        },
        "prompts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QnaPrompt"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "isContextOnly",
        "prompts"
      ]
    },
    "QnaPrompt": {
      "type": "object",
      "properties": {
        "displayOrder": {
          "type": "integer",
          "format": "int16"
        },
        "qnaId": {
          "type": "integer",
          "format": "int32"
        },
        "qna": {
          "$ref": "#/definitions/QnaRecord"
        },
        "displayText": {
          "type": "string"
        }
      },
      "required": [
        "displayOrder",
        "qnaId",
        "qna",
        "displayText"
      ]
    },
    "QnaRecord": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "answer": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "string"
        },
        "dialog": {
          "$ref": "#/definitions/QnaDialog"
        },
        "activeLearningSuggestions": {
          "$ref": "#/definitions/SuggestedQuestionsCluster"
        }
      },
      "required": [
        "id",
        "answer",
        "source",
        "questions",
        "metadata",
        "dialog",
        "activeLearningSuggestions"
      ]
    },
    "QnaRecordCollectionWithNextLink": {
      "type": "object",
      "description": "Paged response of QnaRecord items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The items on this page",
          "items": {
            "$ref": "#/definitions/QnaRecord"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "QnaRecordCreate": {
      "type": "object",
      "description": "Resource create operation model.",
      "properties": {
        "answer": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "string"
        },
        "dialog": {
          "$ref": "#/definitions/QnaDialog"
        },
        "activeLearningSuggestions": {
          "$ref": "#/definitions/SuggestedQuestionsCluster"
        }
      },
      "required": [
        "answer",
        "source",
        "questions",
        "metadata",
        "dialog",
        "activeLearningSuggestions"
      ]
    },
    "QnaSourceKind": {
      "type": "string",
      "description": "Supported source types.",
      "enum": [
        "file",
        "url"
      ],
      "x-ms-enum": {
        "name": "QnaSourceKind",
        "modelAsString": true
      }
    },
    "QnaSourceRecord": {
      "type": "object",
      "description": "Custom source record with last updated date-time.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Friendly name of the Source."
        },
        "source": {
          "type": "string",
          "description": "Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source."
        },
        "sourceUri": {
          "type": "string",
          "description": "URI location for the file or url."
        },
        "sourceKind": {
          "$ref": "#/definitions/QnaSourceKind"
        },
        "contentStructureKind": {
          "$ref": "#/definitions/SourceContentStructureKind"
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date-time when the QnA was last updated."
        }
      },
      "required": [
        "source",
        "sourceUri",
        "sourceKind",
        "contentStructureKind",
        "lastUpdatedDateTime"
      ]
    },
    "QnaSourceRecordCollectionWithNextLink": {
      "type": "object",
      "description": "Paged response of QnaSourceRecord items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The items on this page",
          "items": {
            "$ref": "#/definitions/QnaSourceRecord"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "QnaSourceRecordUpdate": {
      "type": "object",
      "description": "Resource create or update operation model.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Friendly name of the Source."
        },
        "sourceUri": {
          "type": "string",
          "description": "URI location for the file or url."
        },
        "sourceKind": {
          "$ref": "#/definitions/QnaSourceKind"
        },
        "contentStructureKind": {
          "$ref": "#/definitions/SourceContentStructureKind"
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date-time when the QnA was last updated."
        }
      }
    },
    "SourceContentStructureKind": {
      "type": "string",
      "description": "Content structure type for sources.",
      "enum": [
        "unstructured"
      ],
      "x-ms-enum": {
        "name": "SourceContentStructureKind",
        "modelAsString": true
      }
    },
    "SuggestedQuestion": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string"
        },
        "userSuggestedCount": {
          "type": "integer",
          "format": "int32"
        },
        "autoSuggestedCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "question",
        "userSuggestedCount",
        "autoSuggestedCount"
      ]
    },
    "SuggestedQuestionsCluster": {
      "type": "object",
      "properties": {
        "clusterHead": {
          "type": "string"
        },
        "suggestedQuestions": {
          "$ref": "#/definitions/SuggestedQuestion"
        }
      },
      "required": [
        "clusterHead",
        "suggestedQuestions"
      ]
    },
    "SynonymAsset": {
      "type": "object",
      "properties": {
        "alterations": {
          "type": "array",
          "description": "Collection of word alterations.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "alterations"
      ]
    },
    "SynonymAssetCollectionWithNextLink": {
      "type": "object",
      "description": "Paged response of SynonymAsset items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The items on this page",
          "items": {
            "$ref": "#/definitions/SynonymAsset"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SynonymAssetCreate": {
      "type": "object",
      "description": "Resource create operation model."
    }
  },
  "parameters": {
    "AssetKindParameter": {
      "name": "assetKind",
      "in": "query",
      "description": "Kind of the asset of the project",
      "required": false,
      "type": "string",
      "enum": [
        "qnas",
        "synonyms"
      ],
      "x-ms-enum": {
        "modelAsString": false
      },
      "x-ms-parameter-location": "method"
    },
    "JobIdParameter": {
      "name": "jobId",
      "in": "path",
      "description": "Job ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ProjectDeploymentParentKey": {
      "name": "projectName",
      "in": "path",
      "description": "Name of the project.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ProjectMetadataKey": {
      "name": "projectName",
      "in": "path",
      "description": "Name of the project.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ProjectNamePathParameter": {
      "name": "projectName",
      "in": "path",
      "description": "The name of the project to use",
      "required": true,
      "type": "string",
      "maxLength": 100,
      "x-ms-parameter-location": "method"
    },
    "QnaRecordKey.id": {
      "name": "id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "QnaRecordKey.projectName": {
      "name": "projectName",
      "in": "path",
      "description": "Name of the project.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "QnaRecordParentKey": {
      "name": "projectName",
      "in": "path",
      "description": "Name of the project.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "QnaSourceRecordKey.projectName": {
      "name": "projectName",
      "in": "path",
      "description": "Name of the project.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "QnaSourceRecordKey.source": {
      "name": "source",
      "in": "path",
      "description": "Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "QnaSourceRecordParentKey": {
      "name": "projectName",
      "in": "path",
      "description": "Name of the project.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SynonymAssetParentKey": {
      "name": "projectName",
      "in": "path",
      "description": "Name of the project.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
