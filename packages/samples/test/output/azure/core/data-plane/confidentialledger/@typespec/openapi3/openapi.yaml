openapi: 3.0.0
info:
  title: Confidential Ledger Service
  version: 0.0.0
tags: []
paths:
  /app/collections:
    get:
      operationId: ConfidentialLedger_listCollections
      summary: Retrieves a list of collection ids present in the Confidential Ledger
      description: Collection ids are user-created collections of ledger entries
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /app/enclaveQuotes:
    get:
      operationId: ConfidentialLedger_getEnclaveQuotes
      summary: Gets quotes for all nodes of the Confidential Ledger.
      description: A quote is an SGX enclave measurement that can be used to verify the validity of a node and its enclave.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /app/governance/constitution:
    get:
      operationId: ConfidentialLedger_getConstitution
      summary: Gets the constitution used for governance.
      description: The constitution is a script that assesses and applies proposals from consortium members.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /app/governance/members:
    get:
      operationId: ConfidentialLedger_getConsortiumMembers
      summary: Gets the consortium members.
      description: Consortium members can manage the Confidential Ledger.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /app/transactions:
    get:
      operationId: ConfidentialLedger_listLedgerEntries
      summary: Gets ledger entries from a collection corresponding to a range.
      description: A collection id may optionally be specified. Only entries in the specified (or default) collection will be returned.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedLedgerEntries'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    post:
      operationId: ConfidentialLedger_createLedgerEntry
      summary: Writes a ledger entry.
      description: A collection id may optionally be specified.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          headers:
            Location:
              required: true
              schema:
                type: string
                format: uri
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        description: The resource instance.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedgerEntry'
  /app/transactions/getCurrentLedgerEntry:
    get:
      operationId: ConfidentialLedger_getCurrentLedgerEntry
      summary: Gets the current value available in the ledger.
      description: Runs a custom action on LedgerEntry
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerEntry'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /app/transactions/{transactionId}:
    get:
      operationId: ConfidentialLedger_getLedgerEntry
      summary: Gets the ledger entry at the specified transaction id. A collection id may optionally be specified to indicate the collection from which to fetch the value.
      description: Get a LedgerEntry
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: transactionId
          in: path
          required: true
          description: A unique identifier for the state of the ledger. If returned as part of a LedgerEntry, it indicates the state from which the entry was read.
          schema:
            $ref: '#/components/schemas/TransactionId'
        - $ref: '#/components/parameters/CollectionIdParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerEntry'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /app/transactions/{transactionId}/receipt:
    get:
      operationId: ConfidentialLedger_getReceipt
      summary: Gets a receipt certifying ledger contents at a particular transaction id.
      description: Runs a custom action on LedgerEntry
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: transactionId
          in: path
          required: true
          description: A unique identifier for the state of the ledger. If returned as part of a LedgerEntry, it indicates the state from which the entry was read.
          schema:
            $ref: '#/components/schemas/TransactionId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReceipt'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /app/transactions/{transactionId}/status:
    get:
      operationId: ConfidentialLedger_getTransactionStatus
      summary: Gets a receipt certifying ledger contents at a particular transaction id.
      description: Runs a custom action on LedgerEntry
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: transactionId
          in: path
          required: true
          description: A unique identifier for the state of the ledger. If returned as part of a LedgerEntry, it indicates the state from which the entry was read.
          schema:
            $ref: '#/components/schemas/TransactionId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatus'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /app/users/{userId}:
    delete:
      operationId: ConfidentialLedger_deleteUser
      summary: Deletes a user from the Confidential Ledger.
      description: Delete a LedgerUser
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: userId
          in: path
          required: true
          description: The user id, either an AAD object ID or certificate fingerprint.
          schema:
            type: string
            x-ms-skip-url-encoding: true
          x-ms-skip-url-encoding: true
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    get:
      operationId: ConfidentialLedger_getUser
      summary: Gets a user.
      description: Get a LedgerUser
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: userId
          in: path
          required: true
          description: The user id, either an AAD object ID or certificate fingerprint.
          schema:
            type: string
            x-ms-skip-url-encoding: true
          x-ms-skip-url-encoding: true
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerUser'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    patch:
      operationId: ConfidentialLedger_createOrUpdateUser
      summary: Adds a user or updates a user's fields.
      description: Creates or updates a LedgerUser
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: userId
          in: path
          required: true
          description: The user id, either an AAD object ID or certificate fingerprint.
          schema:
            type: string
            x-ms-skip-url-encoding: true
          x-ms-skip-url-encoding: true
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerUser'
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerUser'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        description: The resource instance.
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/LedgerUserCreateOrUpdate'
security:
  - ApiKeyAuth: []
  - OAuth2Auth:
      - https://cognitiveservices.azure.com/.default
components:
  parameters:
    Azure.Core.Foundations.ApiVersionParameter:
      name: api-version
      in: query
      required: true
      description: The API version to use for this operation.
      schema:
        type: string
        minLength: 1
    CollectionIdParameter:
      name: collectionId
      in: query
      required: false
      description: The collection id.
      schema:
        type: string
  schemas:
    Azure.Core.Foundations.Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        message:
          type: string
          description: A human-readable representation of the error.
        target:
          type: string
          description: The target of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: An array of details about specific errors that led to this reported error.
        innererror:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
          description: An object containing more specific information than the current object about the error.
      description: The error object.
    Azure.Core.Foundations.ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: The error object.
      description: A response containing error details.
    Azure.Core.Foundations.InnerError:
      type: object
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        innererror:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
          description: Inner error.
      description: An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
    Collection:
      type: object
      required:
        - collectionId
      properties:
        collectionId:
          type: string
          description: The collection id.
          readOnly: true
      description: Identifier for collections.
    LedgerEntry:
      type: object
      required:
        - contents
        - collectionId
        - transactionId
      properties:
        contents:
          type: string
          description: Contents of the ledger entry.
        collectionId:
          type: string
          description: The collection id.
          readOnly: true
        transactionId:
          allOf:
            - $ref: '#/components/schemas/TransactionId'
          description: A unique identifier for the state of the ledger. If returned as part of a LedgerEntry, it indicates the state from which the entry was read.
          readOnly: true
      description: Details about a ledger entry.
    LedgerQueryState:
      type: string
      enum:
        - Loading
        - Ready
      description: State of a ledger query.
    LedgerUser:
      type: object
      required:
        - userId
        - assignedRole
      properties:
        userId:
          type: string
          description: The user id, either an AAD object ID or certificate fingerprint.
          x-ms-skip-url-encoding: true
          readOnly: true
        assignedRole:
          allOf:
            - $ref: '#/components/schemas/LedgerUserRole'
          description: The user's assigned role.
      description: Details about a Confidential ledger user.
    LedgerUserCreateOrUpdate:
      type: object
      properties:
        assignedRole:
          allOf:
            - $ref: '#/components/schemas/LedgerUserRole'
          description: The user's assigned role.
      description: Details about a Confidential ledger user.
    LedgerUserRole:
      type: string
      enum:
        - Administrator
        - Contributor
        - Reader
      description: Represents an assignable role.
    PagedLedgerEntries:
      type: object
      required:
        - entries
        - state
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LedgerEntry'
          description: Array of ledger entries.
        state:
          allOf:
            - $ref: '#/components/schemas/LedgerQueryState'
          description: State of the ledger query.
        nextLink:
          type: string
          format: uri
          description: Path from which to retrieve the next page of results.
      description: Paginated ledger entries returned in response to a query.
    ReceiptContents:
      type: object
      description: The contents of a receipt.
    TransactionId:
      type: string
      description: A unique identifier for the state of the ledger. If returned as part of a LedgerEntry, it indicates the state from which the entry was read.
    TransactionReceipt:
      type: object
      required:
        - receipt
        - state
        - transactionId
      properties:
        receipt:
          allOf:
            - $ref: '#/components/schemas/ReceiptContents'
          description: The receipt contents.
        state:
          allOf:
            - $ref: '#/components/schemas/LedgerQueryState'
          description: The state of the ledger query.
        transactionId:
          allOf:
            - $ref: '#/components/schemas/TransactionId'
          description: The transaction ID.
      description: A receipt certifying the transaction at the specified id.
    TransactionState:
      type: string
      enum:
        - Committed
        - Pending
      description: Represents the state of the transaction.
    TransactionStatus:
      type: object
      required:
        - state
        - transactionId
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/TransactionState'
          description: The transaction state.
        transactionId:
          allOf:
            - $ref: '#/components/schemas/TransactionId'
          description: The transaction ID.
      description: Response returned to a query for the transaction status.
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: api-key
    OAuth2Auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.contoso.com/common/oauth2/v2.0/authorize
          scopes:
            https://cognitiveservices.azure.com/.default: ''
servers:
  - url: '{ledgerUri}'
    description: Confidential Ledger Service
    variables:
      ledgerUri:
        default: ''
