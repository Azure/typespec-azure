{
  "swagger": "2.0",
  "info": {
    "title": "(title)",
    "version": "2022-08-31",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "X-Key",
      "in": "header"
    }
  },
  "tags": [],
  "paths": {
    "/widgets/{widgetName}": {
      "get": {
        "operationId": "GetWidget",
        "description": "Get a Widget",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "widgetName",
            "in": "path",
            "description": "The widget name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifNoneMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifModifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Widget"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/WidgetServiceErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.eTag": {
      "type": "string",
      "description": "The ETag (or entity tag) HTTP response header is an identifier for a specific version of a resource.\nIt lets caches be more efficient and save bandwidth, as a web server does not need to resend a full response if the content was not changed.\n\nIt is a string of ASCII characters placed between double quotes, like \"675af34563dc-tr34\"."
    },
    "Azure.Core.ipV4Address": {
      "type": "string",
      "description": "Represent an IP V4 address serialized as a string.\n\nIt is formatted as four 8-bit fields separated by periods."
    },
    "Azure.Core.ipV6Address": {
      "type": "string",
      "description": "Represent an IP V6 address serialized as a string.\n\nIt is formatted as eight hex decimal values(16-bit) between 0 and FFFF separated by colon. (i.e. `y:y:y:y:y:y:y:y`)"
    },
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "Widget": {
      "type": "object",
      "description": "A widget.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The widget name.",
          "readOnly": true
        },
        "siteId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Side id as a uuid"
        },
        "ipV4": {
          "$ref": "#/definitions/Azure.Core.ipV4Address",
          "description": "IpV6 of widget"
        },
        "ipV6": {
          "$ref": "#/definitions/Azure.Core.ipV6Address",
          "description": "IpV6 of widget"
        },
        "etag": {
          "$ref": "#/definitions/Azure.Core.eTag",
          "description": "The entity tag for this resource.",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "siteId",
        "ipV4",
        "ipV6",
        "etag"
      ]
    },
    "WidgetServiceErrorResponse": {
      "type": "object",
      "description": "A custom error type for the Widget Manager service.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The numeric error code."
        },
        "errorMessage": {
          "type": "string",
          "description": "The error message."
        }
      },
      "required": [
        "code",
        "errorMessage"
      ]
    }
  },
  "parameters": {
    "Azure.Core.ClientRequestIdHeader": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "clientRequestId"
    },
    "Azure.Core.ConditionalRequestHeaders.ifMatch": {
      "name": "If-Match",
      "in": "header",
      "description": "The request should only proceed if an entity matches this string.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifMatch"
    },
    "Azure.Core.ConditionalRequestHeaders.ifModifiedSince": {
      "name": "If-Modified-Since",
      "in": "header",
      "description": "The request should only proceed if the entity was modified after this time.",
      "required": false,
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifModifiedSince"
    },
    "Azure.Core.ConditionalRequestHeaders.ifNoneMatch": {
      "name": "If-None-Match",
      "in": "header",
      "description": "The request should only proceed if no entity matches this string.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifNoneMatch"
    },
    "Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince": {
      "name": "If-Unmodified-Since",
      "in": "header",
      "description": "The request should only proceed if the entity was not modified after this time.",
      "required": false,
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifUnmodifiedSince"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
