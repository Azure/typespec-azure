openapi: 3.0.0
info:
  title: Form Recognizer
  description: Extracts content, layout, and structured data from documents.
  version: 0.0.0
tags:
  - name: Management
  - name: Analysis
  - name: Creation
  - name: Operation
paths:
  /documentModels:
    get:
      tags:
        - Management
      operationId: DocumentModels_listModels
      description: List ModelSummary resources
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelSummary'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /documentModels/{modelId}:
    get:
      tags:
        - Management
      operationId: DocumentModels_getModel
      description: Get a ModelSummary
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: modelId
          in: path
          required: true
          description: Unique model name
          schema:
            $ref: '#/components/schemas/ModelId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSummary'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
    delete:
      tags:
        - Management
      operationId: DocumentModels_deleteModel
      description: Delete a ModelSummary
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: modelId
          in: path
          required: true
          description: Unique model name
          schema:
            $ref: '#/components/schemas/ModelId'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /documentModels/{modelId}/analyzeResults/{resultId}:
    get:
      tags:
        - Analysis
      operationId: Analysis_getAnalyzeResult
      description: Get a AnalyzeResultOperation
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: modelId
          in: path
          required: true
          description: Unique model name
          schema:
            $ref: '#/components/schemas/ModelId'
        - name: resultId
          in: path
          required: true
          description: The result ID.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeResultOperation'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /documentModels/{modelId}:analyze:
    post:
      tags:
        - Analysis
      operationId: Analysis_analyzeDocument
      description: Runs a custom action on ModelSummary
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: modelId
          in: path
          required: true
          description: Unique model name
          schema:
            $ref: '#/components/schemas/ModelId'
        - name: pages
          in: query
          required: true
          description: List of 1-based page numbers to analyze. Ex. "1-3,5,7-9"
          schema:
            type: string
        - name: locale
          in: query
          required: true
          description: Locale hint for text recognition and document analysis. Value may contain only the language code (ex. "en", "fr") or BCP 47 language tag (ex. "en-US").
          schema:
            type: string
        - name: stringIndexType
          in: query
          required: true
          description: The string index type.
          schema:
            $ref: '#/components/schemas/StringIndexType'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Operation-Location:
              required: true
              description: Operation result URL.
              schema:
                type: string
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        description: The request body.
        required: true
        content:
          application/json:
            schema:
              type: string
              format: byte
          application/octet-stream:
            schema:
              type: string
              format: binary
          application/pdf:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
          image/png:
            schema:
              type: string
              format: binary
          image/tiff:
            schema:
              type: string
              format: binary
          image/bmp:
            schema:
              type: string
              format: binary
  /documentModels/{modelId}:copyTo:
    post:
      tags:
        - Creation
      operationId: Creation_copyDocumentModelTo
      description: Copies model to the target resource, region, and modelId.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: modelId
          in: path
          required: true
          description: Unique model name
          schema:
            $ref: '#/components/schemas/ModelId'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Operation-Location:
              required: true
              description: Operation result URL.
              schema:
                type: string
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyAuthorization'
  /documentModels:authorizeCopyDocumentModel:
    post:
      tags:
        - Creation
      operationId: Creation_authorizeCopyDocumentModel
      description: Generates authorization to copy a model to this location with specified modelId and optional description.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyAuthorization'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeCopyRequest'
  /documentModels:buildDocumentModel:
    post:
      tags:
        - Creation
      operationId: Creation_buildDocumentModel
      description: Builds a custom document analysis model.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Operation-Location:
              required: true
              description: Operation result URL.
              schema:
                type: string
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildDocumentModelRequest'
  /documentModels:composeDocumentModel:
    post:
      tags:
        - Creation
      operationId: Creation_composeDocumentModel
      description: Creates a new model from document types of existing models.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Operation-Location:
              required: true
              description: Operation result URL.
              schema:
                type: string
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComposeDocumentModelRequest'
  /info:
    get:
      tags:
        - Management
      operationId: Management_getInfo
      description: Gets information about custom document models.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInfoResponse'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /operations:
    get:
      tags:
        - Operation
      operationId: Operations_listOperations
      description: Lists all operations.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedOperationInfo'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
  /operations/{operationId}:
    get:
      tags:
        - Operation
      operationId: Operations_getOperation
      description: Gets operation info.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: operationId
          in: path
          required: true
          description: Operation ID
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperationResponse'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
security:
  - AadOauth2Auth:
      - https://cognitiveservices.azure.com/.default
components:
  parameters:
    Azure.Core.Foundations.ApiVersionParameter:
      name: api-version
      in: query
      required: true
      description: The API version to use for this operation.
      schema:
        type: string
        minLength: 1
  schemas:
    AcceptedResponse:
      type: object
      description: An Accepted response with an Operation-Location header.
    AnalyzeDocumentRequest:
      type: object
      required:
        - urlSource
        - base64Source
      properties:
        urlSource:
          type: string
          description: Content at specified URL.
        base64Source:
          type: string
          description: Content represented via Base64 encoding.
      description: Document analysis parameters.
    AnalyzeResult:
      type: object
      required:
        - apiVersion
        - modelId
        - stringIndexType
        - content
        - pages
        - tables
        - keyValuePairs
        - entities
        - styles
        - documents
      properties:
        apiVersion:
          type: string
          enum:
            - 2021-09-30-preview
          description: API version used to produce this result.
        modelId:
          allOf:
            - $ref: '#/components/schemas/ModelId'
          description: Model ID used to produce this result.
        stringIndexType:
          allOf:
            - $ref: '#/components/schemas/StringIndexType'
          description: Method used to compute string offset and length.
        content:
          type: string
          description: Concatenate string representation of all textual and visual elements in reading order.
        pages:
          type: array
          items:
            $ref: '#/components/schemas/DocumentPage'
          description: Analyzed pages.
        tables:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTable'
          description: Extracted tables.
        keyValuePairs:
          type: array
          items:
            $ref: '#/components/schemas/DocumentKeyValuePair'
          description: Extracted key-value pairs.
        entities:
          type: array
          items:
            $ref: '#/components/schemas/DocumentEntity'
          description: Extracted entities.
        styles:
          type: array
          items:
            $ref: '#/components/schemas/DocumentStyle'
          description: Extracted styles.
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          description: Extracted documents.
      description: The result of an analysis job.
    AnalyzeResultOperation:
      type: object
      required:
        - status
        - createdDateTime
        - lastUpdatedDateTime
        - error
        - analyzeResult
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/AnalyzeResultOperationStatus'
          description: Operation status.
        createdDateTime:
          type: string
          format: date-time
          description: Date and time (UTC) when the analyze operation was submitted.
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: Date and time (UTC) when the status was last updated.
        error:
          allOf:
            - $ref: '#/components/schemas/Error'
          description: Encountered error during document analysis.
        analyzeResult:
          allOf:
            - $ref: '#/components/schemas/AnalyzeResult'
          description: Document analysis result.
      description: Status and result of the analyze operation.
    AnalyzeResultOperationStatus:
      anyOf:
        - type: string
        - type: string
          enum:
            - notStarted
            - running
            - failed
            - succeeded
            - running
            - failed
            - succeeded
            - canceled
      description: Operation status.
    AuthorizeCopyRequest:
      type: object
      required:
        - modelId
      properties:
        modelId:
          allOf:
            - $ref: '#/components/schemas/ModelId'
          description: Model Id
        description:
          allOf:
            - $ref: '#/components/schemas/ModelDescription'
          description: Model description
      description: Request body to authorize model copy.
    Azure.Core.Foundations.Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        message:
          type: string
          description: A human-readable representation of the error.
        target:
          type: string
          description: The target of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: An array of details about specific errors that led to this reported error.
        innererror:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
          description: An object containing more specific information than the current object about the error.
      description: The error object.
    Azure.Core.Foundations.ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: The error object.
      description: A response containing error details.
    Azure.Core.Foundations.InnerError:
      type: object
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        innererror:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
          description: Inner error.
      description: An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
    AzureBlobContentSource:
      type: object
      required:
        - containerUrl
      properties:
        containerUrl:
          type: string
          description: Azure Blob Storage container URL.
        prefix:
          type: string
          description: Blob name prefix.
      description: Azure Blob Storage content.
    BoundingRegion:
      type: object
      required:
        - pageNumber
        - boundingBox
      properties:
        pageNumber:
          type: integer
          format: int32
          minimum: 1
          description: 1-based page number of page containing the bounding region.
        boundingBox:
          type: array
          items:
            type: number
            format: double
          description: Bounding box on the page, or the entire page if not specified.
      description: Bounding box on a specific page of the input.
    BuildDocumentModelRequest:
      type: object
      required:
        - modelId
      properties:
        modelId:
          allOf:
            - $ref: '#/components/schemas/ModelId'
          description: Model Id
        description:
          allOf:
            - $ref: '#/components/schemas/ModelDescription'
          description: Model description
        azureBlobSource:
          allOf:
            - $ref: '#/components/schemas/AzureBlobContentSource'
          description: Azure Blob Storage location containing the training data.
      description: Request body to build a new custom model.
    ComponentModelInfo:
      type: object
      required:
        - modelId
      properties:
        modelId:
          allOf:
            - $ref: '#/components/schemas/ModelId'
          description: Model Id
      description: A component of a composed model.
    ComposeDocumentModelRequest:
      type: object
      required:
        - modelId
        - componentModels
      properties:
        modelId:
          allOf:
            - $ref: '#/components/schemas/ModelId'
          description: Model Id
        description:
          allOf:
            - $ref: '#/components/schemas/ModelDescription'
          description: Model description
        componentModels:
          type: array
          items:
            $ref: '#/components/schemas/ComponentModelInfo'
          description: List of component models to compose.
      description: Request body to create a composed model from component models.
    Confidence:
      type: number
      format: double
      minimum: 0
      maximum: 1
      description: Prediction confidence.
    CopyAuthorization:
      type: object
      required:
        - targetResourceId
        - targetResourceRegion
        - targetModelId
        - targetModelLocation
        - accessToken
        - expirationDateTime
      properties:
        targetResourceId:
          type: string
          description: ID of the target Azure resource where the model should be copied to.
        targetResourceRegion:
          type: string
          description: Location of the target Azure resource where the model should be copied to.
        targetModelId:
          allOf:
            - $ref: '#/components/schemas/ModelId'
          description: Identifier of the target model.
        targetModelLocation:
          type: string
          description: URL of the copied model in the target account.
        accessToken:
          type: string
          description: Token used to authorize the request.
        expirationDateTime:
          type: string
          format: date-time
          description: Date/time when the access token expires.
      description: Authorization to copy a model to the specified target resource and modelId.
    CustomDocumentModelsInfo:
      type: object
      required:
        - count
        - limit
      properties:
        count:
          type: integer
          format: int32
          description: Number of custom models in the current resource.
        limit:
          type: integer
          format: int32
          description: Maximum number of custom models supported in the current resource.
      description: Info regarding custom document models.
    DocType:
      type: string
      minLength: 2
      maxLength: 64
      description: Document type name.
    Document:
      type: object
      required:
        - docType
        - spans
        - fields
        - confidence
      properties:
        docType:
          allOf:
            - $ref: '#/components/schemas/DocType'
          description: Document type
        spans:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpan'
          description: Location of the document in the reading order concatenated content.
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DocumentField'
          description: Dictionary of named field values.
        confidence:
          allOf:
            - $ref: '#/components/schemas/Confidence'
          description: Confidence of correctly extracting the document.
        boundingRegions:
          allOf:
            - $ref: '#/components/schemas/BoundingRegion'
          description: Bounding regions covering the document.
      description: An object describing the location and semantic content of a document.
    DocumentEntity:
      type: object
      required:
        - category
        - subCategory
        - content
        - spans
        - confidence
      properties:
        category:
          type: string
          description: Entity type.
        subCategory:
          type: string
          description: Entity sub type.
        content:
          type: string
          description: Content content
        boundingRegions:
          allOf:
            - $ref: '#/components/schemas/BoundingRegion'
          description: Bounding regions covering the entity.
        spans:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpan'
          description: Location of the entity in the reading order concatenated content.
        confidence:
          allOf:
            - $ref: '#/components/schemas/Confidence'
          description: Confidence of correctly extracting the entity.
      description: An object representing various categories of entities.
    DocumentField:
      type: object
      required:
        - spans
        - confidence
        - type
      properties:
        spans:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpan'
          description: Location of the field in the reading order concatenated content.
        confidence:
          allOf:
            - $ref: '#/components/schemas/Confidence'
          description: Confidence of correctly extracting the field.
        type:
          allOf:
            - $ref: '#/components/schemas/DocumentFieldType'
          description: Data type of the field value.
        valueString:
          type: string
          description: String value.
        valueDate:
          type: string
          format: date
          description: Date value in YYYY-MM-DD format (ISO 8601).
        valueTime:
          type: string
          format: time
          description: Time value in hh:mm:ss format (ISO 8601).
        valuePhoneNumber:
          type: string
          description: Phone number value in E.164 format (ex. +19876543210).
        valueNumber:
          type: number
          format: double
          description: Floating point value
        valueInteger:
          type: integer
          format: int64
          description: Integer value
        valueSelectionMark:
          allOf:
            - $ref: '#/components/schemas/SelectionMarkState'
          description: Selection mark value.
        valueSignature:
          allOf:
            - $ref: '#/components/schemas/DocumentSignatureType'
          description: Presence of signature.
        valueCountryRegion:
          type: string
          description: 3-letter country code value (ISO 3166-1 alpha-3).
        valueArray:
          type: array
          items:
            $ref: '#/components/schemas/DocumentField'
          description: Array of field values.
        valueObject:
          allOf:
            - type: object
              additionalProperties:
                $ref: '#/components/schemas/DocumentField'
          description: Dictionary of named field values.
        content:
          type: string
          description: Field content.
        boundingRegions:
          type: array
          items:
            $ref: '#/components/schemas/BoundingRegion'
          description: Bounding regions covering the field.
      description: An object representing the content and location of a field value.
    DocumentFieldType:
      anyOf:
        - type: string
        - type: string
          enum:
            - string
            - date
            - time
            - phoneNumber
            - number
            - integer
            - selectionMark
            - countryRegion
            - signature
            - array
            - object
      description: Semantic data type of the field value.
    DocumentKeyValueElement:
      type: object
      required:
        - content
        - spans
      properties:
        content:
          type: string
          description: Concatenated content of the key-value element in reading order.
        spans:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpan'
          description: Location of the key-value element in the reading order concatenated content.
        boundingRegions:
          allOf:
            - $ref: '#/components/schemas/BoundingRegion'
          description: Bounding regions covering the key-value element.
      description: An object representing the field key or value in a key-value pair.
    DocumentKeyValuePair:
      type: object
      required:
        - key
        - confidence
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/DocumentKeyValueElement'
          description: Field label of the key-value pair.
        value:
          allOf:
            - $ref: '#/components/schemas/DocumentKeyValueElement'
          description: Field value of the key-value pair.
        confidence:
          allOf:
            - $ref: '#/components/schemas/Confidence'
          description: Confidence of correctly extracting the key-value pair.
      description: An object representing a form field with distinct field label (key) and field value (may be empty).
    DocumentLine:
      type: object
      required:
        - content
        - spans
      properties:
        content:
          type: string
          description: Concatenated content of the contained elements in reading order.
        spans:
          allOf:
            - $ref: '#/components/schemas/DocumentSpan'
          description: Location of the line in the reading order concatenated content.
        boundingBox:
          type: array
          items:
            type: number
            format: double
          description: Bounding box of the line.
      description: A content line object consisting of an adjacent sequence of content elements, such as words and selection marks.
    DocumentPage:
      type: object
      required:
        - pageNumber
        - angle
        - width
        - height
        - unit
        - spans
        - words
        - selectionMarks
        - lines
      properties:
        pageNumber:
          type: integer
          format: int32
          minimum: 1
          description: 1-based page number in the input document.
        angle:
          type: integer
          format: int32
          minimum: -180
          maximum: 180
          description: The general orientation of the content in clockwise direction, measured in degrees between (-180, 180].
        width:
          type: integer
          format: int32
          minimum: 0
          description: The width of the image/PDF in pixels/inches, respectively.
        height:
          type: integer
          format: int32
          minimum: 0
          description: The height of the image/PDF in pixels/inches, respectively.
        unit:
          allOf:
            - $ref: '#/components/schemas/LengthUnit'
          description: The unit used by the width, height, and boundingBox properties.
        spans:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpan'
          description: Location of the page in the reading order concatenated content.
        words:
          type: array
          items:
            $ref: '#/components/schemas/DocumentWord'
          description: Extracted words from the page.
        selectionMarks:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSelectionMark'
          description: Extracted selection marks from the page.
        lines:
          type: array
          items:
            $ref: '#/components/schemas/DocumentLine'
          description: Extracted lines from the page, potentially containing both textual and visual elements.
      description: Content and layout elements extracted from a page from the input.
    DocumentSelectionMark:
      type: object
      required:
        - state
        - span
        - confidence
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/SelectionMarkState'
          description: State of the selection mark.
        boundingBox:
          type: array
          items:
            type: number
            format: double
          description: Bounding box of the selection mark.
        span:
          allOf:
            - $ref: '#/components/schemas/DocumentSpan'
          description: Location of the selection mark in the reading order concatenated content.
        confidence:
          allOf:
            - $ref: '#/components/schemas/Confidence'
          description: Confidence of correctly extracting the selection mark.
      description: A selection mark object representing check boxes, radio buttons, and other elements indicating a selection.
    DocumentSignatureType:
      anyOf:
        - type: string
        - type: string
          enum:
            - signed
            - unsigned
      description: Presence of signature.
    DocumentSpan:
      type: object
      required:
        - offset
        - length
      properties:
        offset:
          type: integer
          format: int32
          minimum: 0
          description: Zero-based index of the content represented by the span.
        length:
          type: integer
          format: int32
          minimum: 0
          description: Number of characters in the content represented by the span.
      description: Contiguous region of the concatenated content property, specified as an offset and length.
    DocumentStyle:
      type: object
      required:
        - spans
        - confidence
      properties:
        spans:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpan'
          description: Location of the text elements in the concatenated content the style applies to.
        confidence:
          allOf:
            - $ref: '#/components/schemas/Confidence'
          description: Confidence of correctly identifying the style.
        isHandwritten:
          type: boolean
          description: Is content handwritten?
      description: An object representing observed text styles.
    DocumentTable:
      type: object
      required:
        - rowCount
        - columnCount
        - cells
        - spans
      properties:
        rowCount:
          type: integer
          format: int32
          description: Number of rows in the table.
        columnCount:
          type: integer
          format: int32
          description: Number of columns in the table.
        cells:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTableCell'
          description: Cells contained within the table.
        boundingRegions:
          type: array
          items:
            $ref: '#/components/schemas/BoundingRegion'
          description: Bounding regions covering the table.
        spans:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpan'
          description: Location of the table in the reading order concatenated content.
      description: A table object consisting table cells arranged in a rectangular layout.
    DocumentTableCell:
      type: object
      required:
        - rowIndex
        - columnIndex
        - content
        - spans
      properties:
        kind:
          allOf:
            - $ref: '#/components/schemas/DocumentTableCellKind'
          description: The kind of the DocumentTableCell.
        rowIndex:
          type: integer
          format: int32
          description: Row index of the cell.
        columnIndex:
          type: integer
          format: int32
          description: Column  index of the cell.
        rowSpan:
          type: integer
          format: int32
          description: Number of rows spanned by this cell.
        columnSpan:
          type: integer
          format: int32
          description: Number of columns spanned by this cell.
        content:
          type: string
          description: Concatenated content of the table cell in reading order.
        boundingRegions:
          type: array
          items:
            $ref: '#/components/schemas/BoundingRegion'
          description: Bounding regions covering the table cell.
        spans:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSpan'
          description: Location of the table cell in the reading order concatenated content.
      description: An object representing the location and content of a table cell.
    DocumentTableCellKind:
      anyOf:
        - type: string
        - type: string
          enum:
            - content
            - rowHeader
            - columnHeader
            - stubHead
            - description
      description: Table cell kind.
    DocumentWord:
      type: object
      required:
        - content
        - span
        - confidence
      properties:
        content:
          type: string
          description: Text content of the word.
        boundingBox:
          type: array
          items:
            type: number
            format: double
          description: Bounding box of the word
        span:
          allOf:
            - $ref: '#/components/schemas/DocumentSpan'
          description: Location of the word in the reading order concatenated content.
        confidence:
          allOf:
            - $ref: '#/components/schemas/Confidence'
          description: Confidence of correctly extracting the word.
      description: A word object consisting of a contiguous sequence of characters. For non-space delimited languages, such as Chinese, Japanese, and Korean, each character is represented as its own word.
    Error:
      type: object
      required:
        - code
        - message
        - target
        - details
        - innerError
      properties:
        code:
          type: string
          description: The error code.
        message:
          type: string
          description: The error message.
        target:
          type: string
          description: The target of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          description: Additional details about the error.
        innerError:
          allOf:
            - $ref: '#/components/schemas/InnerError'
          description: The inner error details.
      description: The details of an error.
    GetInfoResponse:
      type: object
      required:
        - customDocumentModels
      properties:
        customDocumentModels:
          allOf:
            - $ref: '#/components/schemas/CustomDocumentModelsInfo'
          description: Info regarding custom document models.
      description: General information regarding the current resource.
    GetOperationResponse:
      type: object
      required:
        - result
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/Error'
          description: Encountered error.
        result:
          type: object
          description: Operation result upon success.
      allOf:
        - $ref: '#/components/schemas/OperationInfo'
      description: The response for the getOperation operation.
    InnerError:
      type: object
      required:
        - code
        - message
        - target
        - innerError
      properties:
        code:
          type: string
          description: The error code.
        message:
          type: string
          description: The error message.
        target:
          type: string
          description: The error target.
        innerError:
          allOf:
            - $ref: '#/components/schemas/InnerError'
          description: The inner error details.
      description: The inner details of an error.
    LengthUnit:
      anyOf:
        - type: string
        - type: string
          enum:
            - pixel
            - inch
      description: The unit used by the width, height, and boundingBox properties. For images, the unit is "pixel". For PDF, the unit is "inch".
    ModelDescription:
      type: string
      maxLength: 4096
      description: Model description.
    ModelId:
      type: string
      pattern: '[a-zA-Z0-9][a-zA-Z0-9._~-]{1,63}'
      description: Unique model name
    ModelSummary:
      type: object
      required:
        - modelId
        - description
        - createdDateTime
      properties:
        modelId:
          allOf:
            - $ref: '#/components/schemas/ModelId'
          description: Unique model name
          readOnly: true
        description:
          type: string
          description: Model description.
        createdDateTime:
          type: string
          format: date-time
          description: Date and time (UTC) when the model was created
      description: The summary of a model.
    OperationInfo:
      type: object
      required:
        - operationId
        - status
        - percentCompleted
        - createdDateTime
        - lastUpdatedDateTime
        - kind
        - resourceLocation
      properties:
        operationId:
          type: string
          description: Operation ID
          readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/OperationStatus'
          description: Operation status.
        percentCompleted:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: Operation progress (0-100).
        createdDateTime:
          type: string
          format: date-time
          description: Date and time (UTC) when the operation was created.
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: Date and time (UTC) when the status was last updated.
        kind:
          allOf:
            - $ref: '#/components/schemas/OperationKind'
          description: Type of operation
        resourceLocation:
          type: string
          description: URL of the resource targeted by this operation.
      description: Operation info.
    OperationKind:
      anyOf:
        - type: string
        - type: string
          enum:
            - documentModelBuild
            - documentModelCompose
            - documentModelCopyTo
      description: Type of operation
    OperationStatus:
      anyOf:
        - type: string
        - type: string
          enum:
            - notStarted
            - running
            - failed
            - succeeded
            - running
            - failed
            - succeeded
            - canceled
      description: Operation status.
    PagedModelSummary:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ModelSummary'
          description: The ModelSummary items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      description: Paged collection of ModelSummary items
    PagedOperationInfo:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OperationInfo'
          description: The OperationInfo items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      description: Paged collection of OperationInfo items
    SelectionMarkState:
      anyOf:
        - type: string
        - type: string
          enum:
            - selected
            - unselected
      description: State of the selection mark.
    StringIndexType:
      anyOf:
        - type: string
        - type: string
          enum:
            - textElements
            - unicodeCodePoint
            - utf16CodeUnit
      description: Method used to compute string offset and length.
  securitySchemes:
    AadOauth2Auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          tokenUrl: https://login.microsoftonline.com/common/oauth2/token
          scopes:
            https://cognitiveservices.azure.com/.default: ''
      description: The Azure Active Directory OAuth2 Flow
