# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - main
  - release/*

pr: none

extends:
  template: /eng/pipelines/templates/1es-redirect.yml
  parameters:
    variables:
      - template: /eng/pipelines/templates/variables/globals.yml
      - name: Artifacts
        value: $(System.DefaultWorkingDirectory)/_artifacts/packages
      - name: TYPESPEC_VS_CI_BUILD
        value: true # Enable official Visual Studio extension build
      - name: TYPESPEC_SKIP_DOCUSAURUS_BUILD
        value: true # Disable docusaurus build

    stages:
      - stage: "Build"
        jobs:
          - job: Build
            pool:
              name: $(LINUXPOOL)
              image: $(LINUXVMIMAGE)
              os: linux
            steps:
              - checkout: self
                submodules: true

              - template: /eng/pipelines/templates/install.yml@self

              - script: pnpm run build
                displayName: Build

              - task: 1ES.PublishPipelineArtifact@1
                displayName: "Publish Artifacts"
                condition: succeededOrFailed()
                inputs:
                  path: $(Build.ArtifactStagingDirectory)
                  artifact: packages

      # Sign packages
      - stage: Sign
        jobs:
          - job: Sign
            pool:
              name: $(WINDOWSPOOL)
              image: $(WINDOWSVMIMAGE)
              os: windows
            steps:
              - checkout: azure-sdk-build-tools

              # Download artifacts
              - task: DownloadPipelineArtifact@2
                displayName: Download Packages
                inputs:
                  artifact: packages
                  path: $(Artifacts)

              # Sign packages
              - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
                parameters:
                  PackagesPath: $(Artifacts)
                  BuildToolsPath: $(Build.SourcesDirectory)

              # Republish artifacts
              - task: 1ES.PublishPipelineArtifact@1
                displayName: "Publish processed files"
                condition: always()
                inputs:
                  path: $(Artifacts)
                  artifact: processed-files

      # Release Nuget packages to nuget.org
      - stage: Publish
        jobs:
          - job:
            pool:
              name: $(LINUXPOOL)
              image: $(LINUXVMIMAGE)
              os: linux
            steps:
              - task: DownloadPipelineArtifact@2
                displayName: Download Packages
                inputs:
                  artifact: processed-files
                  path: $(Artifacts)

              - script: dotnet nuget push "$(Artifacts)/*.nupkg" --api-key "$(azure-sdk-nuget-pat)" --source https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols
                displayName: Push to NuGet.org
