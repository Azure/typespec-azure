[{"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Authenticated service\",\n})\n@useAuth(\n  // Here authentication can either be a\n  // - ApiKey AND Basic Auth together\n  // - Bearer token\n  // - OAuth2\n  BearerAuth | [ApiKeyAuth<ApiKeyLocation.header, \"x-my-header\">, BasicAuth] | OAuth2Auth<[MyFlow]>\n)\nnamespace TypeSpec.Samples;\n\nmodel MyFlow {\n  type: OAuth2FlowType.implicit;\n  authorizationUrl: \"https://api.example.com/oauth2/authorize\";\n  refreshUrl: \"https://api.example.com/oauth2/refresh\";\n  scopes: [\"read\", \"write\"];\n}\n\nop test(): string;\n", "file_path": "../../core/packages/samples/specs\\authentication\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\authentication\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Binary sample\",\n})\nnamespace BinarySample;\n\nmodel HasBytes {\n  bytes: bytes;\n}\n\nmodel BytesBody<ContentType> {\n  @body body: bytes;\n  @header contentType: ContentType;\n}\n\n@route(\"/test\")\nnamespace BytesMethod {\n  @route(\"base64\")\n  @post\n  op jsonWithBase64(@body body: HasBytes): HasBytes;\n\n  @route(\"textPlain\")\n  @post\n  op textPlain(...BytesBody<\"text/plain\">): BytesBody<\"text/plain\">;\n\n  @route(\"binaryFile\")\n  @post\n  op genericBinaryFile(\n    ...BytesBody<\"application/octect-stream\">,\n  ): BytesBody<\"application/octect-stream\">;\n\n  @route(\"imagePng\")\n  @post\n  op image(...BytesBody<\"image/png\">): BytesBody<\"image/png\">;\n}\n", "file_path": "../../core/packages/samples/specs\\binary\\binary.tsp", "link_to_file": "file://../../core/packages/samples/specs\\binary\\binary.tsp"}, {"file_content": "import \"./binary.tsp\";\n", "file_path": "../../core/packages/samples/specs\\binary\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\binary\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Documentaion sample\",\n})\nnamespace DocSample;\n\n@route(\"/foo\")\n@doc(\"Things to do with foo\")\nnamespace Foo {\n  @route(\"DefaultDescriptions\") op withDefaultDescriptions(): Resp | Error;\n\n  @route(\"ModelDocDescriptions\") op withModelDocDescriptions(): RespWithDocs | ErrorWithDocs;\n\n  @route(\"NotFoundWithDocs\") op withStatusCodeDocs(): Resp | NotFoundWithDocsResp | Error;\n\n  @route(\"NotFoundDefaultDocs\") op withDefaultDescNotFound(): RespWithDocs | NotFoundResp | Error;\n}\n\n// will have default success description\nmodel Resp {\n  value: int32;\n}\n\n@doc(\"Response from @doc\")\nmodel RespWithDocs {\n  value: int32;\n}\n\n@error\nmodel Error {\n  code: int32;\n}\n\n@doc(\"Error from @doc\")\n@error\nmodel ErrorWithDocs {\n  code: int32;\n}\n\nmodel NotFoundResp {\n  @statusCode _: 404;\n  details: string;\n}\n\n@doc(\"Not found\")\nmodel NotFoundWithDocsResp {\n  @statusCode _: 404;\n  details: string;\n}\n", "file_path": "../../core/packages/samples/specs\\documentation\\docs.tsp", "link_to_file": "file://../../core/packages/samples/specs\\documentation\\docs.tsp"}, {"file_content": "import \"./docs.tsp\";\n", "file_path": "../../core/packages/samples/specs\\documentation\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\documentation\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@service\nnamespace EncodingSample;\n\nmodel Encodings {\n  datetime: {\n    // RFC3339 for json (default)\n    default: utcDateTime;\n\n    // Rfc7231 when in header (default)\n    @header inHeader: utcDateTime;\n\n    @encode(DateTimeKnownEncoding.rfc3339)\n    rfc3339: utcDateTime;\n\n    @encode(DateTimeKnownEncoding.rfc7231)\n    rfc7231: utcDateTime;\n\n    rfc7231ViaScalar: myRfc7231DateTime;\n\n    @encode(DateTimeKnownEncoding.unixTimestamp, int32)\n    unixtime: utcDateTime;\n\n    unixtimeViaScalar: myUnixTimestamp;\n  };\n  duration: {\n    // ISO8601 for JSON\n    default: duration;\n\n    @encode(DurationKnownEncoding.ISO8601)\n    durationISO: duration;\n\n    @encode(DurationKnownEncoding.seconds, int32)\n    durationSecondsInt32: duration;\n\n    @encode(DurationKnownEncoding.seconds, float32)\n    durationSecondsFloat32: duration;\n  };\n  bytes: {\n    // Base64 for JSON\n    default: bytes;\n\n    @encode(BytesKnownEncoding.base64)\n    base64: bytes;\n\n    @encode(BytesKnownEncoding.base64url)\n    base64url: bytes;\n  };\n}\n\n@encode(DateTimeKnownEncoding.rfc7231)\nscalar myRfc7231DateTime extends utcDateTime;\n\n@encode(DateTimeKnownEncoding.unixTimestamp, int32)\nscalar myUnixTimestamp extends utcDateTime;\n\nop read(): Encodings;\n", "file_path": "../../core/packages/samples/specs\\encoding\\encoding.tsp", "link_to_file": "file://../../core/packages/samples/specs\\encoding\\encoding.tsp"}, {"file_content": "import \"./encoding.tsp\";\n", "file_path": "../../core/packages/samples/specs\\encoding\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\encoding\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Grpc Kiosk sample\",\n})\nnamespace GrpcKioskSample;\n\n@route(\"/v1\")\n@tag(\"Display\")\nnamespace Display {\n  @doc(\"Create a kiosk. This enrolls the kiosk for sign display.\")\n  @route(\"kiosks\")\n  @post\n  op createKiosk(@body body: Kiosk): Kiosk | RpcStatus;\n\n  @doc(\"List active kiosks.\")\n  @route(\"kiosks\")\n  op listKiosks(...Empty): ListKiosksResponse | RpcStatus;\n\n  @doc(\"Get a kiosk.\")\n  @route(\"kiosks/{id}\")\n  op getKiosk(id: KioskId): Kiosk | RpcStatus;\n\n  @doc(\"Delete a kiosk.\")\n  @route(\"kiosks/{id}\")\n  @delete\n  op deleteKiosk(id: KioskId): void | RpcStatus;\n\n  @doc(\"Create a sign. This enrolls the sign for sign display.\")\n  @route(\"signs\")\n  @post\n  op createSign(@body sign: Sign): Sign | RpcStatus;\n\n  @doc(\"List active signs.\")\n  @route(\"signs\")\n  op listSigns(...Empty): ListSignsResponse;\n\n  @doc(\"Get a sign.\")\n  @route(\"signs/{id}\")\n  op getSign(id: SignId): Sign | RpcStatus;\n\n  @doc(\"Delete a sign.\")\n  @route(\"signs/{id}\")\n  @delete\n  op deleteSign(id: SignId): void | RpcStatus;\n\n  @doc(\"Set a sign for display on one or more kiosks.\")\n  @route(\"signs/{sign_id}\")\n  @post\n  op setSignIdForKioskIds(...SetSignIdForKioskIdsRequest): void | RpcStatus;\n\n  @doc(\"Get the sign that should be displayed on a kiosk.\")\n  @route(\"kiosks/{kiosk_id}/sign\")\n  op getSignIdForKioskId(kiosk_id: int32): GetSignIdResponse | RpcStatus;\n\n  //\n  // TODO[JC]: Streaming ?\n  //@doc(\"Get signs that should be displayed on a kiosk. Streams.\")\n  //op GetSignIdsForKioskId(... GetSignIdForKioskIdRequest): @streaming GetSignIdResponse;\n  //\n}\n\n@doc(\"Describes a hardware device that can display signs.\")\nmodel Kiosk {\n  @doc(\"unique id\")\n  id?: int32; // Output only.\n\n  @doc(\"name of device hardware\")\n  name: string;\n\n  @doc(\"screen size\")\n  size: ScreenSize;\n\n  @doc(\"kiosk location\")\n  location: LatLng;\n\n  create_time?: Timestamp; // Output only.\n}\n\n@doc(\"\"\"\nDescribes a digital sign.\nSigns can include text, images, or both.\n\"\"\")\nmodel Sign {\n  @doc(\"unique id\")\n  id?: int32; // Output only.\n\n  @doc(\"name of sign\")\n  name: string;\n\n  @doc(\"text to display\")\n  text: string;\n\n  @doc(\"image to display\")\n  image: bytes;\n}\n\n@doc(\"Represents the size of a screen in pixels.\")\nmodel ScreenSize {\n  width: int32;\n  height: int32;\n}\n\n@doc(\"A successful response.\")\nmodel ListKiosksResponse {\n  kiosks?: Kiosk[];\n}\n\n@doc(\"A successful response.\")\nmodel ListSignsResponse {\n  signs?: Sign[];\n}\n\nmodel SetSignIdForKioskIdsRequest {\n  @body kiosk_ids: int32[];\n  sign_id: int32;\n}\n\nmodel GetSignIdForKioskIdRequest {\n  kiosk_id: int32;\n}\n\n@doc(\"A successful response.\")\nmodel GetSignIdResponse {\n  sign_id?: int32;\n}\n\nalias KioskId = int32;\n\nalias SignId = int32;\n", "file_path": "../../core/packages/samples/specs\\grpc-kiosk-example\\kiosk.tsp", "link_to_file": "file://../../core/packages/samples/specs\\grpc-kiosk-example\\kiosk.tsp"}, {"file_content": "import \"./types.tsp\";\nimport \"./kiosk.tsp\";\n", "file_path": "../../core/packages/samples/specs\\grpc-kiosk-example\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\grpc-kiosk-example\\main.tsp"}, {"file_content": "import \"@typespec/openapi\";\n\nusing TypeSpec.Http;\n\n//\n// types.tsp\n//\n// Generic types used in the Kiosk example that could be part of a standard library\n//\n\n@doc(\"A timestamp\")\nmodel Timestamp {\n  seconds: int64;\n  nanos: int32;\n}\n\n@doc(\"\"\"\nAn object that represents a latitude/longitude pair. This is expressed as a\npair of doubles to represent degrees latitude and degrees longitude. Unless\nspecified otherwise, this must conform to the\n<a href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\">WGS84\nstandard</a>. Values must be within normalized ranges.\n\"\"\")\nmodel LatLng {\n  // The latitude in degrees. It must be in the range [-90.0, +90.0].\n  latitude: float64;\n\n  // The longitude in degrees. It must be in the range [-180.0, +180.0].\n  longitude: float64;\n}\n\nmodel Empty {}\n\n@doc(\"An unexpected error response.\")\n@error\nmodel RpcStatus {\n  code?: int32;\n  message?: string;\n  details?: ProtobufAny[];\n}\n\nmodel ProtobufAny {\n  typeUrl?: string;\n  value?: string; // format:byte\n}\n", "file_path": "../../core/packages/samples/specs\\grpc-kiosk-example\\types.tsp", "link_to_file": "file://../../core/packages/samples/specs\\grpc-kiosk-example\\types.tsp"}, {"file_content": "//\n// Derived from library.proto\n//   https://github.com/googleapis/googleapis/tree/master/google/example/library\n\n// package google.example.library.v1;\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Grpc Library sample\",\n})\nnamespace GrpcLibrarySample;\n\n@doc(\"\"\"\nThis API represents a simple digital library.  It lets you manage Shelf\nresources and Book resources in the library. It defines the following\nresource model:\n\n- The API has a collection of [Shelf][google.example.library.v1.Shelf]\n  resources, named `shelves/*`\n\n- Each Shelf has a collection of [Book][google.example.library.v1.Book]\n  resources, named `shelves/*/books/*`\n\"\"\")\n@route(\"/v1\")\n@tag(\"LibraryService\")\nnamespace LibraryService {\n  @doc(\"Creates a shelf, and returns the new Shelf.\")\n  @route(\"shelves\")\n  @post\n  op createShelf(...CreateShelfRequest): Shelf | RpcStatus;\n\n  @doc(\"Gets a shelf. Returns NOT_FOUND if the shelf does not exist.\")\n  @route(\"shelves\")\n  op getShelf(...GetShelfRequest): Shelf | RpcStatus;\n\n  @doc(\"\"\"\nLists shelves. The order is unspecified but deterministic. Newly created\nshelves will not necessarily be added to the end of this list.\n\"\"\")\n  @route(\"shelves\")\n  op listShelves(...ListRequestBase): ListShelvesResponse | RpcStatus;\n\n  @doc(\"Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.\")\n  @route(\"shelves\")\n  @delete\n  op deleteShelf(...DeleteShelfRequest): void | RpcStatus;\n\n  @doc(\"\"\"\nMerges two shelves by adding all books from the shelf named\n`other_shelf_name` to shelf `name`, and deletes\n`other_shelf_name`. Returns the updated shelf.\nThe book ids of the moved books may not be the same as the original books.\nReturns NOT_FOUND if either shelf does not exist.\nThis call is a no-op if the specified shelves are the same.\n\"\"\")\n  @route(\"shelves/{name}:merge\")\n  @post\n  op mergeShelves(...MergeShelvesRequest): Shelf | RpcStatus;\n\n  @doc(\"Creates a book, and returns the new Book.\")\n  @route(\"shelves/{name}/books\")\n  @post\n  op createBook(...CreateBookRequest): Book | RpcStatus;\n\n  @doc(\"Gets a book. Returns NOT_FOUND if the book does not exist.\")\n  @route(\"shelves/shelf_name/books/{name}\")\n  op getBook(...GetBookRequest): Book | RpcStatus;\n\n  @doc(\"\"\"\nLists books in a shelf. The order is unspecified but deterministic. Newly\ncreated books will not necessarily be added to the end of this list.\nReturns NOT_FOUND if the shelf does not exist.\n\"\"\")\n  @route(\"shelves/{name}/books\")\n  op listBooks(...ListBooksRequest): ListBooksResponse | RpcStatus;\n\n  @route(\"shelves/shelf_name/books/{name}\")\n  @doc(\"Deletes a book. Returns NOT_FOUND if the book does not exist.\")\n  @delete\n  op deleteBook(...DeleteBookRequest): void | RpcStatus;\n}\n\n@doc(\"\"\"\nThe name of a book.\nBook names have the form `shelves/{shelf_id}/books/{book_id}`\n\"\"\")\n@pattern(\"shelves/\\\\w+/books/\\\\w+\")\nscalar book_name extends string;\n\n@doc(\"A single book in the library.\")\nmodel Book {\n  @doc(\"\"\"\nThe resource name of the book.\nBook names have the form `shelves/{shelf_id}/books/{book_id}`.\nThe name is ignored when creating a book.\n\"\"\")\n  name: book_name;\n\n  @doc(\"The name of the book author.\")\n  author?: string;\n\n  @doc(\"The title of the book.\")\n  title?: string;\n\n  @doc(\"Value indicating whether the book has been read.\")\n  read?: boolean;\n}\n\n@doc(\"\"\"\nThe name of a shelf.\nShelf names have the form `shelves/{shelf_id}`.\n\"\"\")\n@pattern(\"shelves/\\\\w+\")\nscalar shelf_name extends string;\n\n@doc(\"A Shelf contains a collection of books with a theme.\")\nmodel Shelf {\n  @doc(\"\"\"\nThe resource name of the shelf.\nShelf names have the form `shelves/{shelf_id}`.\nThe name is ignored when creating a shelf.\n\"\"\")\n  name: shelf_name;\n\n  @doc(\"The theme of the shelf\")\n  theme?: string;\n}\n\n@doc(\"Request message for LibraryService.CreateShelf.\")\nmodel CreateShelfRequest {\n  @doc(\"The shelf to create.\")\n  @body\n  body: Shelf;\n}\n\n@doc(\"Request message for LibraryService.GetShelf.\")\nmodel GetShelfRequest {\n  @doc(\"The name of the shelf to retrieve.\")\n  @path\n  name: shelf_name;\n}\n\n@doc(\"Response message for LibraryService.ListShelves.\")\nmodel ListShelvesResponse {\n  @doc(\"The list of shelves.\")\n  shelves: Shelf[];\n\n  ...ListResponseBase;\n}\n\n@doc(\"Request message for LibraryService.DeleteShelf.\")\nmodel DeleteShelfRequest {\n  @doc(\"The name of the shelf to delete.\")\n  @path\n  name: shelf_name;\n}\n\n@doc(\"\"\"\nDescribes the shelf being removed (other_shelf_name) and updated\n(name) in this merge\n\"\"\")\nmodel MergeShelvesRequest {\n  @doc(\"The name of the shelf we're adding books to.\")\n  @path\n  name: shelf_name;\n\n  @doc(\"The name of the shelf we're removing books from and deleting.\")\n  @body\n  other_shelf_name: shelf_name;\n}\n\n@doc(\"Request message for LibraryService.CreateBook.\")\nmodel CreateBookRequest {\n  @doc(\"The name of the shelf in which the book is created.\")\n  @path\n  name: shelf_name;\n\n  @doc(\"The book to create.\")\n  @body\n  book: Book;\n}\n\n@doc(\"Request message for LibraryService.GetBook.\")\nmodel GetBookRequest {\n  @doc(\"The name of the book to retrieve.\")\n  @path\n  name: book_name;\n}\n\n@doc(\"Request message for LibraryService.ListBooks.\")\nmodel ListBooksRequest {\n  @doc(\"The name of the shelf whose books we'd like to list.\")\n  @path\n  name: shelf_name;\n\n  ...ListRequestBase;\n\n  // TODO[JC]: This is a specialized comment on `page_size`. How would we handle this?\n  // Requested page size. Server may return fewer books than requested.\n  // If unspecified, server will pick an appropriate default.\n  //int32 page_size = 2;\n}\n\n@doc(\"Response message for LibraryService.ListBooks.\")\nmodel ListBooksResponse {\n  @doc(\"The list of books.\")\n  books: Book[];\n\n  ...ListResponseBase;\n}\n\n@doc(\"Request message for LibraryService.UpdateBook.\")\nmodel UpdateBookRequest {\n  @doc(\"The name of the book to update.\")\n  name: book_name;\n\n  @doc(\"The book to update with. The name must match or be empty.\")\n  book: Book;\n}\n\n@doc(\"Request message for LibraryService.DeleteBook.\")\nmodel DeleteBookRequest {\n  @doc(\"The name of the book to delete.\")\n  @path\n  name: book_name;\n}\n\n@doc(\"\"\"\nDescribes what book to move (name) and what shelf we're moving it\nto (other_shelf_name).\n\"\"\")\nmodel MoveBookRequest {\n  @doc(\"The name of the book to move.\")\n  name: book_name;\n\n  @doc(\"The name of the destination shelf.\")\n  other_shelf_name: shelf_name;\n}\n\n//\n// Additional helper models\n//\n\nmodel ListRequestBase {\n  @doc(\"\"\"\nRequested page size. Server may return fewer shelves than requested.\nIf unspecified, server will pick an appropriate default.\n\"\"\")\n  @query\n  page_size?: int32;\n\n  @doc(\"\"\"\nA token identifying a page of results the server should return.\nTypically, this is the value of\n[ListShelvesResponse.next_page_token][google.example.library.v1.ListShelvesResponse.next_page_token]\nreturned from the previous call to `ListShelves` method.\n\"\"\")\n  @query\n  page_token?: string;\n}\n\nmodel ListResponseBase {\n  @doc(\"\"\"\nA token to retrieve next page of results.\nPass this value in the\n[ListShelvesRequest.page_token][google.example.library.v1.ListShelvesRequest.page_token]\nfield in the subsequent call to `ListShelves` method to retrieve the next\npage of results.\n\"\"\")\n  next_page_token?: string;\n}\n\n@doc(\"No body returned\")\nmodel Empty {}\n\n@doc(\"An unexpected error response.\")\n@error\nmodel RpcStatus {\n  code?: int32;\n  message?: string;\n  details?: ProtobufAny[];\n}\n\nmodel ProtobufAny {\n  typeUrl?: string;\n  value?: string; // format:byte\n}\n", "file_path": "../../core/packages/samples/specs\\grpc-library-example\\library.tsp", "link_to_file": "file://../../core/packages/samples/specs\\grpc-library-example\\library.tsp"}, {"file_content": "import \"./library.tsp\";\n", "file_path": "../../core/packages/samples/specs\\grpc-library-example\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\grpc-library-example\\main.tsp"}, {"file_content": "import \"./test.tsp\";\n", "file_path": "../../core/packages/samples/specs\\local-typespec\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\local-typespec\\main.tsp"}, {"file_content": "\nmodel Something // Should get squiggle here for missing brace\n    prop: string;\n}\n", "file_path": "../../core/packages/samples/specs\\local-typespec\\test.tsp", "link_to_file": "file://../../core/packages/samples/specs\\local-typespec\\test.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\n@service({\n  title: \"Pet Store Service\",\n  version: \"2021-03-25\",\n})\nnamespace PetStore;\nusing TypeSpec.Http;\n\nmodel ApiVersionParam {\n  @header apiVersion: string;\n}\n\nmodel PetBase {\n  name: string;\n}\n\nmodel Dog extends PetBase {\n  type: \"dog\";\n  nextWalkTime: utcDateTime;\n}\n\nmodel Cat extends PetBase {\n  type: \"cat\";\n  catnipDose: int32;\n}\n\nunion Pet {\n  cat: Cat,\n  dog: Dog,\n}\n\n@route(\"/\")\ninterface MyService {\n  getPet(...ApiVersionParam): Body<Pet>;\n}\n", "file_path": "../../core/packages/samples/specs\\multiple-types-union\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\multiple-types-union\\main.tsp"}, {"file_content": "import \"./nested.tsp\";\n", "file_path": "../../core/packages/samples/specs\\nested\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\nested\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Nested sample\",\n})\nnamespace Root {\n  @route(\"/sub/a\")\n  namespace SubA {\n    model Thing {\n      id: int64;\n    }\n\n    @route(\"subsub\")\n    namespace SubSubA {\n      @post op doSomething(@body thing: Thing): OkResponse & Body<string>;\n\n      // Doesn't conflict with parent namespace!\n      model Thing {\n        name: string;\n      }\n    }\n  }\n\n  @route(\"/sub/b\")\n  namespace SubB {\n    // Uses the same name as\n    model Thing {\n      id: int64;\n    }\n\n    @post op doSomething(@body thing: Thing): string;\n  }\n\n  namespace SubC {\n    @post op anotherOp(thing: Root.SubA.Thing, thing2: SubA.Thing): string;\n  }\n}\n", "file_path": "../../core/packages/samples/specs\\nested\\nested.tsp", "link_to_file": "file://../../core/packages/samples/specs\\nested\\nested.tsp"}, {"file_content": "import \"./nullable.tsp\";\n", "file_path": "../../core/packages/samples/specs\\nullable\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\nullable\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Nullable sample\",\n})\nnamespace NullableSample;\n\nmodel HasNullables {\n  str: string;\n  when: plainTime;\n  strOrNull: string | null;\n  modelOrNull: AnotherModel | null;\n  literalsOrNull: \"one\" | \"two\" | null;\n  manyNullsOneString: null | null | string | null;\n  manyNullsSomeValues: null | 42 | null | 100 | null;\n  arr: string[] | null;\n  // thisWillFail: AnotherModel | string | null;\n}\n\n@route(\"/test\")\nnamespace NullableMethods {\n  @get op read(\n    @query someParam: string | null,\n    @body modelOrNull: AnotherModel | null,\n  ): HasNullables;\n}\n\nmodel AnotherModel {\n  num: int32;\n}\n", "file_path": "../../core/packages/samples/specs\\nullable\\nullable.tsp", "link_to_file": "file://../../core/packages/samples/specs\\nullable\\nullable.tsp"}, {"file_content": "import \"./openapi-extensions.tsp\";\n", "file_path": "../../core/packages/samples/specs\\openapi-extensions\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\openapi-extensions\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.OpenAPI;\n\nmodel MyConfig {\n  name: \"Foo\";\n  age: 12;\n  other: NestedConfig;\n}\n\nmodel NestedConfig {\n  id: \"some\";\n}\n\nmodel Foo {\n  @extension(\"x-string\", \"string\")\n  @extension(\"x-number\", 123)\n  @extension(\"x-bool\", true)\n  @extension(\"x-array\", [\"one\", 2])\n  @extension(\n    \"x-obj\",\n    {\n      foo: 123,\n      bar: \"string\",\n    }\n  )\n  @extension(\"x-model\", MyConfig)\n  id: string;\n}\n\nop foo(): Foo;\n", "file_path": "../../core/packages/samples/specs\\openapi-extensions\\openapi-extensions.tsp", "link_to_file": "file://../../core/packages/samples/specs\\openapi-extensions\\openapi-extensions.tsp"}, {"file_content": "import \"./optional.tsp\";\n", "file_path": "../../core/packages/samples/specs\\optional\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\optional\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Optional sample\",\n})\nnamespace OptionalSample;\n\nmodel HasOptional {\n  optionalNoDefault?: string;\n  optionalString?: string = \"default string\";\n  optionalNumber?: int32 = 123;\n  optionalBoolean?: boolean = true;\n  optionalArray?: string[] = [\"foo\", \"bar\"];\n  optionalUnion?: \"foo\" | \"bar\" = \"foo\";\n  optionalEnum?: MyEnum = MyEnum.a;\n}\n\n@route(\"/test\")\nnamespace OptionalMethods {\n  @get op read(\n    @query queryString?: string = \"defaultQueryString\",\n    @body queryNumber?: int64 = 123,\n  ): HasOptional;\n}\n\nenum MyEnum {\n  a,\n  b,\n}\n", "file_path": "../../core/packages/samples/specs\\optional\\optional.tsp", "link_to_file": "file://../../core/packages/samples/specs\\optional\\optional.tsp"}, {"file_content": "import \"./param-decorators.tsp\";\n", "file_path": "../../core/packages/samples/specs\\param-decorators\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\param-decorators\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\n@service({\n  title: \"Parameter Decorators\",\n})\nnamespace TypeSpec.Samples;\n\nusing TypeSpec.Http;\n\n@route(\"/thing\")\nnamespace Operations {\n  @route(\"{name}\")\n  op getThing(\n    @pattern(\"^[a-zA-Z0-9-]{3,24}$\")\n    @format(\"UUID\")\n    name: string,\n\n    @minValue(0)\n    @maxValue(10)\n    @query\n    count: int32,\n  ): OkResponse & Thing;\n\n  @route(\"{name}\")\n  @put\n  op putThing(...NameParameter, @body body: Thing): OkResponse & Thing;\n}\n\nmodel Thing {\n  name: string;\n\n  @format(\"UUID\")\n  id: string;\n}\n\nmodel NameParameter {\n  @doc(\"Name parameter\")\n  @pattern(\"^[a-zA-Z0-9-]{3,24}$\")\n  @format(\"UUID\")\n  name: string;\n}\n", "file_path": "../../core/packages/samples/specs\\param-decorators\\param-decorators.tsp", "link_to_file": "file://../../core/packages/samples/specs\\param-decorators\\param-decorators.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\nimport \"./decorators.js\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Pet Store Service\",\n  version: \"2021-03-25\",\n})\n@doc(\"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\")\nnamespace PetStore;\n\n// Model types\nmodel Pet {\n  name: string;\n  tag?: string;\n\n  @minValue(0)\n  @maxValue(20)\n  age: int32;\n}\n\nmodel Toy {\n  id: int64;\n  petId: int64;\n  name: string;\n}\n\n@doc(\"Error\")\n@error\nmodel Error {\n  code: int32;\n  message: string;\n}\n\n@doc(\"Not modified\")\nmodel NotModified<T> {\n  @statusCode _: 304;\n  @body body: T;\n}\n\n@friendlyName(\"{name}ListResults\", T)\nmodel ResponsePage<T> {\n  items: T[];\n  nextLink?: string;\n}\n\nmodel PetId {\n  @path petId: int32;\n}\n\n@doc(\"Manage your pets.\")\n@route(\"/pets\")\nnamespace Pets {\n  @doc(\"Delete a pet.\")\n  @delete\n  op delete(...PetId): OkResponse | Error;\n\n  @fancyDoc(\"List pets.\")\n  op list(@query nextLink?: string): ResponsePage<Pet> | Error;\n\n  @doc(\"Returns a pet. Supports eTags.\")\n  op read(...PetId): Pet | (NotModifiedResponse & Pet) | Error;\n\n  @post op create(@body pet: Pet): Pet | Error;\n}\n\n@route(\"/pets/{petId}/toys\")\nnamespace ListPetToysResponse {\n  op list(@path petId: string, @query nameFilter: string): ResponsePage<Toy> | Error;\n}\n", "file_path": "../../core/packages/samples/specs\\petstore\\petstore.tsp", "link_to_file": "file://../../core/packages/samples/specs\\petstore\\petstore.tsp"}, {"file_content": "import \"./polymorphism.tsp\";\n", "file_path": "../../core/packages/samples/specs\\polymorphism\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\polymorphism\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\n\n@service({\n  title: \"Polymorphism sample\",\n})\nnamespace PolymorphismSample;\n\n@discriminator(\"kind\")\nmodel Pet {\n  name: string;\n  weight?: float32;\n}\nmodel Cat extends Pet {\n  kind: \"cat\";\n  meow: int32;\n}\nmodel Dog extends Pet {\n  kind: \"dog\";\n  bark: string;\n}\n\n@route(\"/Pets\")\nnamespace root {\n  op read(): {\n    @body body: Pet;\n  };\n}\n", "file_path": "../../core/packages/samples/specs\\polymorphism\\polymorphism.tsp", "link_to_file": "file://../../core/packages/samples/specs\\polymorphism\\polymorphism.tsp"}, {"file_content": "import \"./projected-names.tsp\";\n", "file_path": "../../core/packages/samples/specs\\projected-names\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\projected-names\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Sample showcasing projected names\",\n})\nnamespace ProjectedNames;\n\nmodel WithProjectedNames {\n  @projectedName(\"json\", \"nbf\")\n  @projectedName(\"csharp\", \"ValidAfter\")\n  notBefore: int32;\n\n  @projectedName(\"json\", \"exp\")\n  expires: int32;\n\n  created: int32;\n  updated: int32;\n}\n\nop test(@query(\"$select\") select: string): WithProjectedNames;\n", "file_path": "../../core/packages/samples/specs\\projected-names\\projected-names.tsp", "link_to_file": "file://../../core/packages/samples/specs\\projected-names\\projected-names.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\n@service({\n  title: \"Pet Store Service\",\n  version: \"2021-03-25\",\n})\nnamespace PetStore;\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Rest.Resource;\n\n@error\nmodel PetStoreError {\n  code: int32;\n  message: string;\n}\n\n@resource(\"pets\")\nmodel Pet {\n  @key(\"petId\")\n  id: int32;\n\n  name: string;\n  tag?: string;\n\n  @minValue(0)\n  @maxValue(20)\n  age: int32;\n\n  ownerId: int64;\n}\n\n@resource(\"toys\")\n@parentResource(Pet)\nmodel Toy {\n  @key(\"toyId\")\n  id: int64;\n\n  petId: int64;\n  name: string;\n}\n\n@resource(\"owners\")\nmodel Owner {\n  @key(\"ownerId\")\n  id: int64;\n\n  name: string;\n  age: int32;\n}\n\n@resource(\"checkups\")\nmodel Checkup {\n  @key(\"checkupId\")\n  id: int32;\n\n  vetName: string;\n  notes: string;\n}\n\n@segment(\"insurance\")\nmodel Insurance {\n  provider: string;\n  premium: int32;\n  deductible: int32;\n}\n\ninterface Pets extends ResourceOperations<Pet, PetStoreError> {}\n\ninterface PetCheckups\n  extends ExtensionResourceCreateOrUpdate<Checkup, Pet, PetStoreError>,\n    ExtensionResourceList<Checkup, Pet, PetStoreError> {}\n\ninterface PetInsurance extends SingletonResourceOperations<Insurance, Pet, PetStoreError> {}\n\ninterface Toys extends ResourceRead<Toy, PetStoreError> {\n  @autoRoute\n  @listsResource(Toy)\n  list(\n    ...ParentKeysOf<Toy>,\n    @query nameFilter: string,\n  ): CollectionWithNextLink<Toy> | PetStoreError;\n}\n\ninterface ToyInsurance extends SingletonResourceOperations<Insurance, Toy, PetStoreError> {}\n\ninterface Checkups\n  extends ResourceCreateOrUpdate<Checkup, PetStoreError>,\n    ResourceList<Checkup, PetStoreError> {}\n\ninterface Owners extends ResourceOperations<Owner, PetStoreError> {}\n\ninterface OwnerCheckups\n  extends ExtensionResourceCreateOrUpdate<Checkup, Owner, PetStoreError>,\n    ExtensionResourceList<Checkup, Owner, PetStoreError> {}\n\ninterface OwnerInsurance extends SingletonResourceOperations<Insurance, Owner, PetStoreError> {}\n", "file_path": "../../core/packages/samples/specs\\rest\\petstore\\petstore.tsp", "link_to_file": "file://../../core/packages/samples/specs\\rest\\petstore\\petstore.tsp"}, {"file_content": "import \"@typespec/versioning\";\nimport \"@typespec/rest\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Versioning;\n\n// Simple services that is versioned and uses metadata and visibility features.\n@versioned(Versions)\n@service({\n  title: \"User service\",\n})\nnamespace UserService {\n  enum Versions {\n    v1,\n    v2,\n  }\n\n  model User {\n    @path id: string;\n    @visibility(\"create\") secret: string;\n    name: string;\n    @added(Versions.v2) age: int32;\n  }\n\n  @route(\"/users\")\n  interface Users {\n    @post createUser(...User): User;\n    @get getUser(@path id: string): User;\n  }\n}\n\n// Stub to test that the sample deals with multi-service specs.\n@service\nnamespace AnotherService {\n  @route(\"/test\")\n  op test(): void;\n}\n", "file_path": "../../core/packages/samples/specs\\rest-metadata-emitter\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\rest-metadata-emitter\\main.tsp"}, {"file_content": "import \"./signatures.tsp\";\n", "file_path": "../../core/packages/samples/specs\\signatures\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\signatures\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@error\nmodel ErrorDetails {\n  code: int32;\n  message: string;\n}\n\nmodel CodeSignAccount {\n  name: string;\n}\n\nmodel AccountProfile {\n  value: int32;\n}\n\n@get\n@doc(\"Reads an instance of the {name} resource.\", TResource)\nop ResourceReadBase<TResource extends {}, TError>(@path name: string): TResource | TError;\nop ResourceRead<TResource extends {}> is ResourceReadBase<TResource, ErrorDetails>;\n\n@post\n@doc(\"Reads an instance of the {name} resource.\", TResource)\nop ResourceCreateBase<TResource extends {}, TError>(@body resource: TResource): TResource | TError;\nop ResourceCreate<TResource extends {}> is ResourceCreateBase<TResource, ErrorDetails>;\n\n@route(\"codeSignAccounts\")\ninterface CodeSignAccounts {\n  get is ResourceRead<CodeSignAccount>;\n  create is ResourceCreate<CodeSignAccount>;\n}\n\ninterface ResourceOperations<TResource extends {}> {\n  get is ResourceRead<TResource>;\n  create is ResourceCreate<TResource>;\n}\n\n@route(\"accountProfiles\")\ninterface AccountProfiles extends ResourceOperations<AccountProfile> {}\n", "file_path": "../../core/packages/samples/specs\\signatures\\signatures.tsp", "link_to_file": "file://../../core/packages/samples/specs\\signatures\\signatures.tsp"}, {"file_content": "import \"./simple.tsp\";\n", "file_path": "../../core/packages/samples/specs\\simple\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\simple\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@route(\"/alpha/{id}\")\nop doAlpha(id: string): string;\n\n@route(\"/beta/{id}\")\nop doBeta(id: string): string;\n", "file_path": "../../core/packages/samples/specs\\simple\\simple.tsp", "link_to_file": "file://../../core/packages/samples/specs\\simple\\simple.tsp"}, {"file_content": "import \"./status-code-ranges.tsp\";\n", "file_path": "../../core/packages/samples/specs\\status-code-ranges\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\status-code-ranges\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\nmodel Pet {\n  name: string;\n}\n\n@error\nmodel UserError {\n  @statusCode\n  @minValue(400)\n  @maxValue(499)\n  status: int32;\n}\n\n@error\nmodel ServerError {\n  @statusCode\n  @minValue(500)\n  @maxValue(599)\n  status: int32;\n}\n\nop extensive(): Pet | UserError | ServerError;\n", "file_path": "../../core/packages/samples/specs\\status-code-ranges\\status-code-ranges.tsp", "link_to_file": "file://../../core/packages/samples/specs\\status-code-ranges\\status-code-ranges.tsp"}, {"file_content": "import \"./tagged-operations.tsp\";\n", "file_path": "../../core/packages/samples/specs\\tags\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\tags\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"Tags sample\",\n})\nnamespace TagsSample;\n\n@route(\"/foo\")\n@tag(\"foo\")\nnamespace Foo {\n  @tag(\"tag1\")\n  @doc(\"includes namespace tag\")\n  @get\n  op read(@path id: int32): void;\n\n  @tag(\"tag1\")\n  @tag(\"tag2\")\n  @doc(\"includes namespace tag and two operations tags\")\n  @post\n  op create(@path id: int32): void;\n}\n\n@route(\"/bar\")\nnamespace Bar {\n  @doc(\"no tags\")\n  @get\n  op list(): Resp[];\n\n  @doc(\"one operation tag\")\n  @tag(\"tag3\")\n  @post\n  op create(@path id: int32): void;\n}\n\n@tag(\"outer\")\n@route(\"/nested\")\nnamespace NestedOuter {\n  @tag(\"inner\")\n  namespace NestedInner {\n    @tag(\"moreInner\")\n    namespace NestedMoreInner {\n      @tag(\"innerOp\")\n      @post\n      op createOther(@path id: int32): void;\n    }\n  }\n}\n\nmodel Resp {\n  out: string;\n}\n", "file_path": "../../core/packages/samples/specs\\tags\\tagged-operations.tsp", "link_to_file": "file://../../core/packages/samples/specs\\tags\\tagged-operations.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\n@service({\n  title: \"sample\",\n})\nnamespace Sample;\n\n@doc(\"Error\")\n@error\nmodel Error {\n  code: int32;\n  message: string;\n}\n\nalias NullableBoolean = boolean | null;\n\n@doc(\"AutoRest Bool Test Service\")\n@route(\"/bool/true\")\nnamespace BoolsTrue {\n  @doc(\"Get true Boolean value\")\n  @operationId(\"bool_getTrue\")\n  @get\n  op getTrue(): true | Error;\n\n  @doc(\"Set Boolean value true\")\n  @operationId(\"bool_putTrue\")\n  @put\n  op setTrue(@body value: true): {\n    ...Response<200>;\n  } | Error;\n}\n\n@doc(\"AutoRest Bool Test Service\")\n@route(\"/bool/false\")\nnamespace BoolsFalse {\n  @doc(\"Get true Boolean false\")\n  @operationId(\"bool_getFalse\")\n  @get\n  op getFalse(): false | Error;\n\n  @doc(\"Set Boolean value false\")\n  @operationId(\"bool_putFalse\")\n  @put\n  op setFalse(@body value: false): boolean | Error;\n}\n\n@doc(\"AutoRest Bool Test Service\")\n@route(\"/bool/null\")\nnamespace BoolsNull {\n  @doc(\"Get null Boolean value\")\n  @operationId(\"bool_getNull\")\n  @get\n  op getNull(): NullableBoolean | Error;\n}\n\n@doc(\"AutoRest Bool Test Service\")\n@route(\"/bool/invalid\")\nnamespace BoolsInvalid {\n  @doc(\"Get invalid Boolean value\")\n  @operationId(\"bool_getInvalid\")\n  @get\n  op getInvalid(): boolean | Error;\n}\n", "file_path": "../../core/packages/samples/specs\\testserver\\body-boolean\\body-boolean.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\body-boolean\\body-boolean.tsp"}, {"file_content": "import \"./body-boolean.tsp\";\n", "file_path": "../../core/packages/samples/specs\\testserver\\body-boolean\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\body-boolean\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"sample\",\n})\nnamespace Sample;\n\n@doc(\"Error\")\n@error\nmodel Error {\n  message: string;\n}\n\nmodel Basic {\n  @doc(\"Basic Id\")\n  id: int32 | null;\n\n  @doc(\"Name property with a very long description that does not fit on a single line and a line break.\")\n  name: string;\n\n  color: CMYKColors;\n}\n\nenum CMYKColors {\n  cyan,\n  Magenta,\n  YELLOW,\n  blacK,\n}\n\nmodel Pet {\n  id: int32;\n  name: string;\n}\n\nmodel IntWrapper {\n  field1: int32;\n  field2: int32;\n}\n\nmodel LongWrapper {\n  field1: int64;\n  field2: int64;\n}\n\nmodel FloatWrapper {\n  field1: float32;\n  field2: float32;\n}\n\nmodel DoubleWrapper {\n  field1: float64;\n  field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose: float64;\n}\n\nmodel BooleanWrapper {\n  field_true: boolean;\n  field_false: boolean;\n}\n\nmodel StringWrapper {\n  field: string;\n  empty: string;\n  null: string | null;\n}\n\nmodel PlainDateWrapper {\n  field: plainDate;\n  leap: plainDate;\n}\n\nmodel DateTimeWrapper {\n  field: utcDateTime;\n  now: utcDateTime;\n}\n\nmodel DurationWrapper {\n  field: duration;\n}\n\nmodel BytesWrapper {\n  field: bytes;\n}\n\nmodel ArrayWrapper {\n  field: string[];\n}\n\nmodel DictionaryWrapper {\n  field: Record<string>;\n}\n\nmodel ReadonlyObj {\n  @visibility(\"read\") id: int32;\n  @visibility(\"read\") size: int32;\n}\n\n@doc(\"AutoRest Complex Body Test Service\")\n@route(\"/complex\")\nnamespace Complex {\n  @doc(\"Get complex type {id: 2, name: 'abc', color: 'YELLOW'}\")\n  @route(\"/basic/valid\")\n  @get\n  op getValid(): Basic | Error;\n\n  @doc(\"Please put {id: 2, name: 'abc', color: 'Magenta'}\")\n  @route(\"/basic/valid\")\n  @put\n  op putValid(@body value: Basic): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with integer properties\")\n  @route(\"/primitive/integer\")\n  op getInt(): IntWrapper | Error;\n\n  @doc(\"Put complex types with integer properties\")\n  @route(\"/primitive/integer\")\n  @put\n  op putInt(@body value: IntWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with long properties\")\n  @route(\"/primitive/long\")\n  @get\n  op getLong(): LongWrapper | Error;\n\n  @doc(\"Put complex types with long properties\")\n  @route(\"/primitive/long\")\n  @put\n  op putLong(@body value: LongWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with float properties\")\n  @route(\"/primitive/float\")\n  @get\n  op getFloat(): FloatWrapper | Error;\n\n  @doc(\"Put complex types with float properties\")\n  @route(\"/primitive/float\")\n  @put\n  op putFloat(@body value: FloatWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with double properties\")\n  @route(\"/primitive/double\")\n  @get\n  op getDouble(): DoubleWrapper | Error;\n\n  @doc(\"Put complex types with double properties\")\n  @route(\"/primitive/double\")\n  @put\n  op putDouble(@body value: DoubleWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with bool properties\")\n  @route(\"/primitive/bool\")\n  @get\n  op getBool(): BooleanWrapper | Error;\n\n  @doc(\"Put complex types with bool properties\")\n  @route(\"/primitive/bool\")\n  @put\n  op putBool(@body value: BooleanWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with string properties\")\n  @route(\"/primitive/string\")\n  @get\n  op getString(): StringWrapper | Error;\n\n  @doc(\"Put complex types with string properties\")\n  @route(\"/primitive/string\")\n  @put\n  op putString(@body value: StringWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with date properties\")\n  @route(\"/primitive/date\")\n  @get\n  op getPlainDate(): PlainDateWrapper | Error;\n\n  @doc(\"Put complex types with date properties\")\n  @route(\"/primitive/date\")\n  @put\n  op putPlainDate(@body value: PlainDateWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with DateTime properties\")\n  @route(\"/primitive/datetime\")\n  @get\n  op getZonedDateTime(): DateTimeWrapper | Error;\n\n  @doc(\"Put complex types with DateTime properties\")\n  @route(\"/primitive/datetime\")\n  @put\n  op putZonedDateTime(@body value: DateTimeWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with Duration properties\")\n  @route(\"/primitive/duration\")\n  @get\n  op getZonedDuration(): DurationWrapper | Error;\n\n  @doc(\"Put complex types with Duration properties\")\n  @route(\"/primitive/duration\")\n  @put\n  op putZonedDuration(@body value: DurationWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with bytes properties\")\n  @route(\"/primitive/bytes\")\n  @get\n  op getBytes(): BytesWrapper | Error;\n\n  @doc(\"Put complex types with bytes properties\")\n  @route(\"/primitive/bytes\")\n  @put\n  op putBytes(@body value: BytesWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get complex types with array properties\")\n  @route(\"/array/valid\")\n  op getArray(): ArrayWrapper | Error;\n\n  @doc(\"Put complex types with array properties\")\n  @route(\"/array/valid\")\n  @put\n  op putArray(@body value: ArrayWrapper): {\n    ...Response<200>;\n  } | Error;\n\n  @route(\"/dictionary\")\n  namespace Dictionary {\n    @doc(\"Get complex types with dictionary property\")\n    @route(\"/typed/valid\")\n    @get\n    op getDictionary(): DictionaryWrapper | Error;\n\n    @doc(\"Put complex types with dictionary property\")\n    @route(\"/typed/valid\")\n    @put\n    op putArray(@body value: DictionaryWrapper): {\n      ...Response<200>;\n    } | Error;\n  }\n}\n", "file_path": "../../core/packages/samples/specs\\testserver\\body-complex\\body-complex.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\body-complex\\body-complex.tsp"}, {"file_content": "import \"./body-complex.tsp\";\n", "file_path": "../../core/packages/samples/specs\\testserver\\body-complex\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\body-complex\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"sample\",\n})\nnamespace Sample;\n\n@doc(\"Error\")\n@error\nmodel Error {\n  status: int32;\n  message: string;\n}\n\n@doc(\"AutoRest String Test Service\")\n@tag(\"String Operations\")\n@route(\"/string\")\nnamespace String {\n  @doc(\"Get null string value\")\n  @route(\"null\")\n  @get\n  op getNull(): Body<string | null> | Error;\n\n  @doc(\"Put null string value\")\n  @route(\"null\")\n  @put\n  op putNull(@body value: string | null): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get empty string value\")\n  @route(\"empty\")\n  @get\n  op getEmpty(): Body<\"\"> | Error;\n\n  @doc(\"Put empty string value\")\n  @route(\"empty\")\n  @put\n  op putEmpty(@body value: \"\"): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get mbcs string value '\u554a\u9f44\u4e02\u72db\u72dc\uf9f1\uf92c\uf9f1\ufa0c\ufa29\u02ca\u301e\u3021\uffe4\u2121\u3231\u2010\u30fc\ufe61\ufe62\ufe6b\u3001\u3013\u2170\u2179\u2488\u20ac\u3220\u3229\u2160\u216b\uff01\uffe3\u3041\u3093\u30a1\u30f6\u0391\ufe34\u0410\u042f\u0430\u044f\u0101\u0261\u3105\u3129\u2500\u254b\ufe35\ufe44\ufe3b\ufe31\ufe33\ufe34\u2170\u2179\u0251\ue7c7\u0261\u3007\u303e\u2ffb\u2e81\ue843\u4723\ue864\u20ac'\")\n  @route(\"mbcs\")\n  @get\n  op getMbcs(\n  ): Body<\"\u554a\u9f44\u4e02\u72db\u72dc\uf9f1\uf92c\uf9f1\ufa0c\ufa29\u02ca\u301e\u3021\uffe4\u2121\u3231\u2010\u30fc\ufe61\ufe62\ufe6b\u3001\u3013\u2170\u2179\u2488\u20ac\u3220\u3229\u2160\u216b\uff01\uffe3\u3041\u3093\u30a1\u30f6\u0391\ufe34\u0410\u042f\u0430\u044f\u0101\u0261\u3105\u3129\u2500\u254b\ufe35\ufe44\ufe3b\ufe31\ufe33\ufe34\u2170\u2179\u0251\ue7c7\u0261\u3007\u303e\u2ffb\u2e81\ue843\u4723\ue864\u20ac\"> | Error;\n\n  @doc(\"Put mbcs string value '\u554a\u9f44\u4e02\u72db\u72dc\uf9f1\uf92c\uf9f1\ufa0c\ufa29\u02ca\u301e\u3021\uffe4\u2121\u3231\u2010\u30fc\ufe61\ufe62\ufe6b\u3001\u3013\u2170\u2179\u2488\u20ac\u3220\u3229\u2160\u216b\uff01\uffe3\u3041\u3093\u30a1\u30f6\u0391\ufe34\u0410\u042f\u0430\u044f\u0101\u0261\u3105\u3129\u2500\u254b\ufe35\ufe44\ufe3b\ufe31\ufe33\ufe34\u2170\u2179\u0251\ue7c7\u0261\u3007\u303e\u2ffb\u2e81\ue843\u4723\ue864\u20ac'\")\n  @route(\"mbcs\")\n  @put\n  op putMbCs(\n    @body\n    value: \"\u554a\u9f44\u4e02\u72db\u72dc\uf9f1\uf92c\uf9f1\ufa0c\ufa29\u02ca\u301e\u3021\uffe4\u2121\u3231\u2010\u30fc\ufe61\ufe62\ufe6b\u3001\u3013\u2170\u2179\u2488\u20ac\u3220\u3229\u2160\u216b\uff01\uffe3\u3041\u3093\u30a1\u30f6\u0391\ufe34\u0410\u042f\u0430\u044f\u0101\u0261\u3105\u3129\u2500\u254b\ufe35\ufe44\ufe3b\ufe31\ufe33\ufe34\u2170\u2179\u0251\ue7c7\u0261\u3007\u303e\u2ffb\u2e81\ue843\u4723\ue864\u20ac\",\n  ): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get string value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'\")\n  @route(\"whitespace\")\n  @get\n  op getWhitespace(\n  ): Body<\"   Now is the time for all good men to come to the aid of their country    \"> | Error;\n\n  @doc(\"Get string value with leading and trailing whitespace '<tab><space><space>Now is the time for all good men to come to the aid of their country<tab><space><space>'\")\n  @route(\"whitespace\")\n  @put\n  op putWhitespace(\n    @body value: \"   Now is the time for all good men to come to the aid of their country    \",\n  ): {\n    ...Response<200>;\n  } | Error;\n\n  @doc(\"Get value that is base64 encoded\")\n  @route(\"base64Encoding\")\n  @get\n  op getBase64Encoding(): Body<bytes> | Error;\n\n  @doc(\"Put value that is base64 encoded\")\n  @route(\"base64Encoding\")\n  @put\n  op putBase64Encoding(@body value: bytes): {\n    ...Response<200>;\n  } | Error;\n\n  @route(\"enum\")\n  namespace Enums {\n    @doc(\"Get non expandable string enum value\")\n    @route(\"empty\")\n    @get\n    op getNotExpandable(): Body<Colors> | Error;\n\n    @doc(\"Put non expandable string enum value\")\n    @route(\"empty\")\n    @put\n    op putNotExpandable(@body value: Colors): {\n      ...Response<200>;\n    } | Error;\n\n    @doc(\"Gets value 'green-color' from a constant\")\n    @route(\"constant\")\n    @get\n    op getConstant(): Body<Colors> | Error;\n\n    @doc(\"Sends value 'green-color' from a constant\")\n    @route(\"constant\")\n    @put\n    op putConstant(@body value: Colors): {\n      ...Response<200>;\n    } | Error;\n  }\n}\n\n// TODO: closed enum https://github.com/Azure/typespec-azure/issues/1036\nenum Colors {\n  `red color`,\n  `green-color`,\n  `blue-color`,\n}\n\nalias RefColorConstant = \"green-color\";\n", "file_path": "../../core/packages/samples/specs\\testserver\\body-string\\body-string.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\body-string\\body-string.tsp"}, {"file_content": "import \"./body-string.tsp\";\n", "file_path": "../../core/packages/samples/specs\\testserver\\body-string\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\body-string\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"sample\",\n})\nnamespace Sample;\n\n@doc(\"Error\")\n@error\nmodel Error {\n  status: int32;\n  message: string;\n}\n\n@doc(\"AutoRest Time Test Service\")\n@route(\"/time\")\nnamespace Time {\n  @doc(\"Get time value \\\"11:34:56\\\"\")\n  @get\n  op get(): plainTime | Error;\n\n  @doc(\"Put time value \\\"08:07:56\\\"\")\n  @put\n  op put(@body value: plainTime): OkResponse | Error;\n}\n", "file_path": "../../core/packages/samples/specs\\testserver\\body-time\\body-time.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\body-time\\body-time.tsp"}, {"file_content": "import \"./body-time.tsp\";\n", "file_path": "../../core/packages/samples/specs\\testserver\\body-time\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\body-time\\main.tsp"}, {"file_content": "import \"./media-types.tsp\";\n", "file_path": "../../core/packages/samples/specs\\testserver\\media-types\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\media-types\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\n@service({\n  title: \"sample\",\n})\nnamespace Sample;\n\n@doc(\"Uri or local path to source data.\")\nmodel SourcePath {\n  @minLength(0)\n  @maxLength(2048)\n  @doc(\"File source path.\")\n  source: string;\n}\n\nmodel Input {\n  @doc(\"Input parameter.\")\n  @body\n  input: SourcePath;\n}\n\n@route(\"/mediatypes\")\nnamespace MediaTypes {\n  @doc(\"Analyze body, that could be different media types.\")\n  @route(\"analyze\")\n  @operationId(\"AnalyzeBody\")\n  @post\n  op analyzeBody(\n    ...Input,\n    @header contentType:\n      | \"application/pdf\"\n      | \"application/json\"\n      | \"image/jpeg\"\n      | \"image/png\"\n      | \"image/tiff\",\n  ): string;\n\n  @doc(\"Pass in contentType 'text/plain; encoding=UTF-8' to pass test. Value for input does not matter\")\n  @route(\"contentTypeWithEncoding\")\n  @operationId(\"contentTypeWithEncoding\")\n  @post\n  op contentTypeWithEncoding(...Input, @header contentType: \"text/plain\"): string;\n}\n", "file_path": "../../core/packages/samples/specs\\testserver\\media-types\\media-types.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\media-types\\media-types.tsp"}, {"file_content": "import \"./multiple-inheritance.tsp\";\n", "file_path": "../../core/packages/samples/specs\\testserver\\multiple-inheritance\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\multiple-inheritance\\main.tsp"}, {"file_content": "import \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\n\n@service({\n  title: \"sample\",\n})\nnamespace Sample;\n\nmodel Pet {\n  name: string;\n}\n\nmodel Feline extends Pet {\n  meows: boolean;\n  hisses: boolean;\n}\n\nmodel Cat extends Feline {\n  likesMilk: boolean;\n}\n\nmodel Kitten extends Cat {\n  eatsMiceYet: boolean;\n}\n\nmodel Horse extends Pet {\n  isAShowHorse: boolean;\n}\n\n@doc(\"Unexpected error\")\n@error\nmodel ErrorResponse {\n  @body body: string;\n}\n\n@route(\"/multipleInheritance\")\nnamespace MultipleInheritance {\n  @doc(\"Get a horse with name 'Fred' and isAShowHorse true\")\n  @route(\"horse\")\n  op getHorse(): Horse | ErrorResponse;\n\n  @doc(\"Put a horse with name 'General' and isAShowHorse false\")\n  @route(\"horse\")\n  @put\n  op putHorse(@body horse: Horse): string | ErrorResponse;\n\n  @doc(\"Get a pet with name 'Peanut'\")\n  @route(\"pet\")\n  op getPet(): Pet | ErrorResponse;\n\n  @doc(\"Put a pet with name 'Butter'\")\n  @route(\"pet\")\n  @put\n  op putPet(@body horse: Pet): string | ErrorResponse;\n\n  @doc(\"Get a feline where meows and hisses are true\")\n  @route(\"feline\")\n  op getFeline(): Feline | ErrorResponse;\n\n  @doc(\"Put a feline who hisses and doesn't meow\")\n  @route(\"feline\")\n  @put\n  op putFeline(@body feline: Feline): string | ErrorResponse;\n\n  @doc(\"Get a cat with name 'Whiskers' where likesMilk, meows, and hisses is true\")\n  @route(\"cat\")\n  op getCat(): Cat | ErrorResponse;\n\n  @doc(\"Put a cat with name 'Boots' where likesMilk and hisses is false, meows is true\")\n  @route(\"cat\")\n  @put\n  op putCat(@body cat: Cat): string | ErrorResponse;\n\n  @doc(\"Get a kitten with name 'Gatito' where likesMilk and meows is true, and hisses and eatsMiceYet is false\")\n  @route(\"kitten\")\n  op getKitten(): Kitten | ErrorResponse;\n\n  @doc(\"Put a kitten with name 'Kitty' where likesMilk and hisses is false, meows and eatsMiceYet is true\")\n  @route(\"kitten\")\n  @put\n  op putKitten(@body kitten: Kitten): string | ErrorResponse;\n}\n", "file_path": "../../core/packages/samples/specs\\testserver\\multiple-inheritance\\multiple-inheritance.tsp", "link_to_file": "file://../../core/packages/samples/specs\\testserver\\multiple-inheritance\\multiple-inheritance.tsp"}, {"file_content": "import \"@typespec/versioning\";\n\nusing TypeSpec.Versioning;\n\n@versioned(Versions)\nnamespace Library;\n\nenum Versions {\n  `1.0`,\n  `1.1`,\n}\n\nmodel PetToy {\n  name: string;\n\n  @added(Versions.`1.1`)\n  material: string;\n}\n", "file_path": "../../core/packages/samples/specs\\use-versioned-lib\\library.tsp", "link_to_file": "file://../../core/packages/samples/specs\\use-versioned-lib\\library.tsp"}, {"file_content": "import \"@typespec/versioning\";\nimport \"@typespec/rest\";\nimport \"./library.tsp\";\n\nusing TypeSpec.Versioning;\n\n// Use version 1.0 of the Library\n@service({\n  title: \"Pet Store Service\",\n})\n@useDependency(Library.Versions.`1.0`)\nnamespace VersionedApi;\nusing TypeSpec.Http;\n\nop read(): Library.PetToy;\n", "file_path": "../../core/packages/samples/specs\\use-versioned-lib\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\use-versioned-lib\\main.tsp"}, {"file_content": "import \"@typespec/versioning\";\n\nusing TypeSpec.Versioning;\n\n@versioned(Versions)\nnamespace Library;\n\nenum Versions {\n  `1.0`,\n  `1.1`,\n}\n\nmodel PetToy {\n  name: string;\n\n  @added(Versions.`1.1`)\n  material: string;\n}\n", "file_path": "../../core/packages/samples/specs\\versioning\\library.tsp", "link_to_file": "file://../../core/packages/samples/specs\\versioning\\library.tsp"}, {"file_content": "import \"@typespec/versioning\";\nimport \"@typespec/rest\";\nimport \"./library.tsp\";\n\nusing TypeSpec.Versioning;\nusing TypeSpec.Rest;\n\n@service({\n  title: \"Pet Store Service\",\n})\n@versioned(Versions)\nnamespace VersionedApi;\nusing TypeSpec.Http;\n\nenum Versions {\n  @useDependency(Library.Versions.`1.0`)\n  v1,\n\n  @useDependency(Library.Versions.`1.1`)\n  v2,\n}\n\nmodel ApiVersionParam {\n  @header apiVersion: Versions;\n}\n\n@discriminator(\"type\")\nmodel PetBase {\n  name: string;\n  favoriteToys: Library.PetToy[];\n}\n\nmodel Dog extends PetBase {\n  type: \"dog\";\n  nextWalkTime: utcDateTime;\n\n  @madeOptional(Versions.v2)\n  walkerName?: string;\n\n  @added(Versions.v2)\n  commandList: string[];\n}\n\n@added(Versions.v2)\nmodel Cat extends PetBase {\n  type: \"cat\";\n  catnipDose: int32;\n}\n\n@route(\"/\")\ninterface MyService {\n  getPet(...ApiVersionParam): PetBase;\n\n  @added(Versions.v2)\n  @post\n  @route(\"/walkDog\")\n  walkDog(...ApiVersionParam): OkResponse;\n\n  @removed(Versions.v2)\n  @post\n  @route(\"/walkCat\")\n  walkCat(...ApiVersionParam): OkResponse;\n}\n", "file_path": "../../core/packages/samples/specs\\versioning\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\versioning\\main.tsp"}, {"file_content": "import \"./visibility.tsp\";\n", "file_path": "../../core/packages/samples/specs\\visibility\\main.tsp", "link_to_file": "file://../../core/packages/samples/specs\\visibility\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\n\n@service({\n  title: \"Visibility sample\",\n})\nnamespace VisibilitySample;\n\nmodel Person {\n  @visibility(\"read\") id: string;\n  @visibility(\"create\") secret: string;\n  name: string;\n\n  @visibility(\"read\", \"create\")\n  test: string;\n\n  @visibility(\"other\", \"read\", \"update\")\n  other: string;\n\n  @visibility(\"read\", \"create\", \"update\")\n  relatives: PersonRelative[];\n}\n\nmodel PersonRelative {\n  person: Person;\n  relationship: string;\n}\n\n@withVisibility(\"read\")\nmodel Readable<T> {\n  ...T;\n}\n\n@withVisibility(\"create\")\nmodel Writable<T> {\n  ...T;\n}\n\nmodel ReadablePerson {\n  ...Readable<Person>;\n}\n\nmodel WritablePerson {\n  ...Writable<Person>;\n}\n\nmodel OptionalPerson {\n  ...OptionalProperties<Person>;\n}\n\nmodel WriteableOptionalPerson {\n  ...OptionalProperties<WritablePerson>;\n}\n\nmodel ListResult<T> {\n  items: T[];\n}\n\n@route(\"/hello\")\nnamespace Hello {\n  @get op read(\n    @path id: string,\n\n    @query({\n      format: \"multi\",\n    })\n    fieldMask: string[],\n  ): ReadablePerson;\n  @post op create(@body person: WritablePerson): ReadablePerson;\n  @put op update(@body person: WriteableOptionalPerson): ReadablePerson;\n\n  @TypeSpec.Rest.listsResource(Person)\n  op list(): ListResult<Person>;\n\n  @TypeSpec.Rest.updatesResource(Person)\n  op updateRest(@body person: Person): ReadablePerson;\n}\n", "file_path": "../../core/packages/samples/specs\\visibility\\visibility.tsp", "link_to_file": "file://../../core/packages/samples/specs\\visibility\\visibility.tsp"}]