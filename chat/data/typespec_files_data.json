[{"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\nusing Azure.Core.Traits;\n\n@service({\n  title: \"Contoso Widget Manager\",\n})\n@versioned(Contoso.WidgetManager.Versions)\nnamespace Contoso.WidgetManager;\n\n@doc(\"The Contoso Widget Manager service version.\")\nenum Versions {\n  @doc(\"Version 2022-08-31\")\n  @useDependency(Azure.Core.Versions.v1_0_Preview_1)\n  `2022-08-31`,\n}\n\n// Models ////////////////////\n\n@doc(\"A widget.\")\n@resource(\"widgets\")\nmodel Widget {\n  @key(\"widgetName\")\n  @doc(\"The widget name.\")\n  @visibility(\"read\")\n  name: string;\n\n  @doc(\"The ID of the widget's manufacturer.\")\n  manufacturerId: string;\n\n  ...EtagProperty;\n}\n\n@doc(\"A manufacturer of widgets.\")\n@resource(\"manufacturers\")\nmodel Manufacturer {\n  @key(\"manufacturerId\")\n  @doc(\"The manufacturer's unique ID.\")\n  @visibility(\"read\")\n  id: string;\n\n  @doc(\"The manufacturer's name.\")\n  name: string;\n\n  @doc(\"The manufacturer's full address.\")\n  address: string;\n\n  ...EtagProperty;\n}\n\n// Operations ////////////////////\n\n@doc(\"The ApiVersion path parameter.\")\nmodel ApiVersionPathParameter {\n  @segment(\"api\")\n  @path(\"api-version\")\n  @doc(\"The API version to use for this operation.\")\n  apiVersion: string;\n}\n\nalias ServiceTraits = TraitOverride<VersionParameterTrait<ApiVersionPathParameter>> &\n  SupportsRepeatableRequests &\n  SupportsConditionalRequests &\n  SupportsClientRequestId;\n\nalias Operations = Azure.Core.ResourceOperations<ServiceTraits>;\n\ninterface Widgets {\n  // Operation Status\n  @doc(\"Gets status of a Widget operation.\")\n  getWidgetOperationStatus is Operations.GetResourceOperationStatus<Widget>;\n\n  // Widget Operations\n  @doc(\"Creates or updates a Widget asynchronously\")\n  @pollingOperation(Widgets.getWidgetOperationStatus)\n  createOrUpdateWidget is Operations.LongRunningResourceCreateOrUpdate<Widget>;\n\n  @doc(\"Get a Widget\")\n  getWidget is Operations.ResourceRead<Widget>;\n\n  @doc(\"Delete a Widget asynchronously.\")\n  @pollingOperation(Widgets.getWidgetOperationStatus)\n  deleteWidget is Operations.LongRunningResourceDelete<Widget>;\n\n  @doc(\"List Widget resources\")\n  listWidgets is Operations.ResourceList<\n    Widget,\n    ListQueryParametersTrait<StandardListQueryParameters & SelectQueryParameter>\n  >;\n}\n\ninterface Manufacturers {\n  @doc(\"Gets status of a Manufacturer operation.\")\n  getManufacturerOperationStatus is Operations.GetResourceOperationStatus<Manufacturer>;\n\n  @doc(\"Creates or replaces a Manufacturer\")\n  createOrReplaceManufacturer is Operations.ResourceCreateOrReplace<Manufacturer>;\n\n  @doc(\"Get a Manufacturer\")\n  getManufacturer is Operations.ResourceRead<Manufacturer>;\n\n  @doc(\"Delete a Manufacturer asynchronously.\")\n  @pollingOperation(Manufacturers.getManufacturerOperationStatus)\n  deleteManufacturer is Operations.LongRunningResourceDelete<Manufacturer>;\n\n  @doc(\"List Manufacturer resources\")\n  listManufacturers is Operations.ResourceList<Manufacturer>;\n}\n\n// A \"global\" RPC operation\n#suppress \"@azure-tools/typespec-azure-core/no-rpc-path-params\" \"The API version is part of the route path.\"\n@route(\"/api/{apiVersion}/service-status\")\n@doc(\"Responds with status information about the overall service.\")\nop getServiceStatus is RpcOperation<\n  {},\n  {\n    statusString: string;\n  },\n  ServiceTraits\n>;\n", "file_path": "../../packages/samples/specs\\data-plane\\api-path-parameter\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\api-path-parameter\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\n\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\nusing Azure.Core.Traits;\n\n@service\n@versioned(Contoso.WidgetManager.Versions)\nnamespace Contoso.WidgetManager;\n\n@doc(\"The Contoso Widget Manager service version.\")\nenum Versions {\n  @doc(\"Version 2022-08-31\")\n  @useDependency(Azure.Core.Versions.v1_0_Preview_1)\n  `2022-08-31`,\n}\n\n// Models ////////////////////\n\n@doc(\"A widget.\")\n@resource(\"widgets\")\nmodel Widget {\n  @key(\"widgetName\")\n  @doc(\"The widget name.\")\n  @visibility(\"read\")\n  name: string;\n\n  /** Side id as a uuid */\n  siteId: uuid;\n\n  /** IpV6 of widget */\n  ipV4: ipV4Address;\n\n  /** IpV6 of widget */\n  ipV6: ipV6Address;\n\n  ...EtagProperty;\n}\n\n@error\n@doc(\"A custom error type for the Widget Manager service.\")\nmodel WidgetServiceErrorResponse {\n  @doc(\"The numeric error code.\")\n  code: int32;\n\n  @doc(\"The error message.\")\n  errorMessage: string;\n}\n\n// Operations ////////////////////\n\nalias ServiceTraits = SupportsRepeatableRequests &\n  SupportsConditionalRequests &\n  SupportsClientRequestId;\n\nalias Operations = Azure.Core.ResourceOperations<ServiceTraits, WidgetServiceErrorResponse>;\n\n@doc(\"Get a Widget\")\nop getWidget is Operations.ResourceRead<Widget>;\n", "file_path": "../../packages/samples/specs\\data-plane\\azure-core-scalars\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\azure-core-scalars\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@typespec/openapi\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-autorest\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\nusing Azure.Core.Traits;\nusing TypeSpec.OpenAPI;\n\n//\n// ** Service description **\n//\n\n@useAuth(\n  ApiKeyAuth<ApiKeyLocation.header, \"api-key\"> | OAuth2Auth<[\n    {\n      type: OAuth2FlowType.implicit,\n      authorizationUrl: \"https://login.contoso.com/common/oauth2/v2.0/authorize\",\n      scopes: [\"https://cognitiveservices.azure.com/.default\"],\n    }\n  ]>\n)\n@service({\n  title: \"Confidential Ledger Service\",\n  version: \"2022-05-13\",\n})\n@useDependency(Azure.Core.Versions.v1_0_Preview_2)\n@server(\n  \"{ledgerUri}\",\n  \"Confidential Ledger Service\",\n  {\n    ledgerUri: url,\n  }\n)\nnamespace Azure.Security.ConfidentialLedger;\n\nalias ServiceTraits = NoRepeatableRequests & NoConditionalRequests & NoClientRequestId;\n\nalias Operations = Azure.Core.ResourceOperations<ServiceTraits>;\n\n//\n// ** Parameter descriptions **\n//\n\n@doc(\"A unique identifier for the state of the ledger. If returned as part of a LedgerEntry, it indicates the state from which the entry was read.\")\nscalar TransactionId extends string;\n\n@doc(\"The collectionId parameter definition.\")\nmodel CollectionIdParameter {\n  @query\n  @doc(\"The collection id.\")\n  collectionId?: string;\n}\n\n//\n// ** Model descriptions **\n//\n\n@resource(\"collections\")\n@doc(\"Identifier for collections.\")\nmodel Collection {\n  @key\n  @doc(\"The collection id.\")\n  @visibility(\"read\")\n  collectionId: string;\n}\n\n@doc(\"Details about a ledger entry.\")\n@resource(\"transactions\")\nmodel LedgerEntry {\n  @doc(\"Contents of the ledger entry.\")\n  contents: string;\n\n  @visibility(\"read\")\n  @doc(\"The collection id.\")\n  collectionId: string;\n\n  @key\n  @visibility(\"read\")\n  @doc(\"A unique identifier for the state of the ledger. If returned as part of a LedgerEntry, it indicates the state from which the entry was read.\")\n  transactionId: TransactionId;\n}\n\n// TODO: No way to set \"x-ms-enum.name\" right now\n@doc(\"Represents an assignable role.\")\nenum LedgerUserRole {\n  @doc(\"The administrator role.\")\n  Administrator,\n\n  @doc(\"The contributor role.\")\n  Contributor,\n\n  @doc(\"The reader role.\")\n  Reader,\n}\n\n@resource(\"users\")\n@doc(\"Details about a Confidential ledger user.\")\nmodel LedgerUser {\n  @key\n  @doc(\"The user id, either an AAD object ID or certificate fingerprint.\")\n  @extension(\"x-ms-skip-url-encoding\", true)\n  @visibility(\"read\")\n  userId: string;\n\n  @doc(\"The user's assigned role.\")\n  assignedRole: LedgerUserRole;\n}\n\n@doc(\"The contents of a receipt.\")\nmodel ReceiptContents {\n  // Elided for now\n}\n\n// TODO: No way to set \"x-ms-enum.name\" right now\n@doc(\"State of a ledger query.\")\nenum LedgerQueryState {\n  @doc(\"The query is still loading.\")\n  Loading,\n\n  @doc(\"The query is ready.\")\n  Ready,\n}\n\n@doc(\"A receipt certifying the transaction at the specified id.\")\nmodel TransactionReceipt {\n  @doc(\"The receipt contents.\")\n  receipt: ReceiptContents;\n\n  @doc(\"The state of the ledger query.\")\n  state: LedgerQueryState;\n\n  @doc(\"The transaction ID.\")\n  transactionId: TransactionId;\n}\n\n// TODO: No way to set \"x-ms-enum.name\" right now\n@doc(\"Represents the state of the transaction.\")\nenum TransactionState {\n  @doc(\"The transaction is committed.\")\n  Committed,\n\n  @doc(\"The transaction is pending.\")\n  Pending,\n}\n\n@doc(\"Response returned to a query for the transaction status.\")\nmodel TransactionStatus {\n  @doc(\"The transaction state.\")\n  state: TransactionState;\n\n  @doc(\"The transaction ID.\")\n  transactionId: TransactionId;\n}\n\n@doc(\"Paginated ledger entries returned in response to a query.\")\n@pagedResult\nmodel PagedLedgerEntries {\n  @doc(\"Array of ledger entries.\")\n  @items\n  entries: LedgerEntry[];\n\n  @doc(\"State of the ledger query.\")\n  state: LedgerQueryState;\n\n  @doc(\"Path from which to retrieve the next page of results.\")\n  @nextLink\n  nextLink?: ResourceLocation<LedgerEntry>;\n}\n\n//\n// ** Operations **\n//\n\n@route(\"/app\")\nnamespace ConfidentialLedger {\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service, we have a non-conforming operation.\"\n  @summary(\"Retrieves a list of collection ids present in the Confidential Ledger\")\n  @doc(\"Collection ids are user-created collections of ledger entries\")\n  op listCollections is Azure.Core.Foundations.NonPagedResourceList<Collection>;\n\n  // TODO: add return model\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service, we have a non-conforming operation.\"\n  @route(\"/enclaveQuotes\")\n  @summary(\"Gets quotes for all nodes of the Confidential Ledger.\")\n  @doc(\"A quote is an SGX enclave measurement that can be used to verify the validity of a node and its enclave.\")\n  @get\n  op getEnclaveQuotes is Azure.Core.Foundations.Operation<{}, OkResponse>;\n\n  // TODO: add return model\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service, we have a non-conforming operation.\"\n  @route(\"/governance/constitution\")\n  @summary(\"Gets the constitution used for governance.\")\n  @doc(\"The constitution is a script that assesses and applies proposals from consortium members.\")\n  @get\n  op getConstitution is Azure.Core.Foundations.Operation<{}, OkResponse>;\n\n  // TODO: add return model\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service, we have a non-conforming operation.\"\n  @route(\"/governance/members\")\n  @summary(\"Gets the consortium members.\")\n  @doc(\"Consortium members can manage the Confidential Ledger.\")\n  @get\n  op getConsortiumMembers is Azure.Core.Foundations.Operation<{}, OkResponse>;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service with a non-standard list operation.\"\n  @summary(\"Gets ledger entries from a collection corresponding to a range.\")\n  @doc(\"A collection id may optionally be specified. Only entries in the specified (or default) collection will be returned.\")\n  op listLedgerEntries is Azure.Core.Foundations.ResourceList<LedgerEntry, {}, PagedLedgerEntries>;\n\n  @summary(\"Writes a ledger entry.\")\n  @doc(\"A collection id may optionally be specified.\")\n  @post\n  op createLedgerEntry is Operations.ResourceCreateWithServiceProvidedName<\n    LedgerEntry,\n    QueryParametersTrait<CollectionIdParameter>\n  >;\n\n  @doc(\"Get a LedgerEntry\")\n  @summary(\"Gets the ledger entry at the specified transaction id. A collection id may optionally be specified to indicate the collection from which to fetch the value.\")\n  op getLedgerEntry is Operations.ResourceRead<\n    LedgerEntry,\n    QueryParametersTrait<CollectionIdParameter>\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/verb-conflict\" \"This is an existing service.\"\n  @get\n  @action(\"receipt\")\n  @doc(\"Runs a custom action on LedgerEntry\")\n  @summary(\"Gets a receipt certifying ledger contents at a particular transaction id.\")\n  @actionSeparator(\"/\")\n  op getReceipt is Operations.ResourceAction<LedgerEntry, {}, TransactionReceipt>;\n\n  #suppress \"@azure-tools/typespec-azure-core/verb-conflict\" \"This is an existing service.\"\n  @get\n  @action(\"status\")\n  @doc(\"Runs a custom action on LedgerEntry\")\n  @summary(\"Gets a receipt certifying ledger contents at a particular transaction id.\")\n  @actionSeparator(\"/\")\n  op getTransactionStatus is Operations.ResourceAction<LedgerEntry, {}, TransactionStatus>;\n\n  #suppress \"@azure-tools/typespec-azure-core/verb-conflict\" \"This is an existing service.\"\n  @get\n  @doc(\"Runs a custom action on LedgerEntry\")\n  @summary(\"Gets the current value available in the ledger.\")\n  @actionSeparator(\"/\")\n  op getCurrentLedgerEntry is Operations.ResourceCollectionAction<\n    LedgerEntry,\n    CollectionIdParameter,\n    LedgerEntry\n  >;\n\n  @doc(\"Delete a LedgerUser\")\n  @summary(\"Deletes a user from the Confidential Ledger.\")\n  op deleteUser is Operations.ResourceDelete<LedgerUser>;\n\n  @doc(\"Get a LedgerUser\")\n  @summary(\"Gets a user.\")\n  op getUser is Operations.ResourceRead<LedgerUser>;\n\n  @doc(\"Creates or updates a LedgerUser\")\n  @summary(\"Adds a user or updates a user's fields.\")\n  op createOrUpdateUser is Operations.ResourceCreateOrUpdate<LedgerUser>;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\confidentialledger\\confidentialledger.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\confidentialledger\\confidentialledger.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-autorest\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\n\n@useDependency(Azure.Core.Versions.v1_0_Preview_2)\n@server(\n  \"{identityServiceUri}\",\n  \"Confidential Ledger Service\",\n  {\n    identityServiceUri: string,\n  }\n)\nnamespace Azure.Security.ConfidentialLedgerIdentity;\n\n@resource(\"ledgerIdentity\")\n@doc(\"Contains the information about a Confidential Ledger.\")\nmodel LedgerIdentityInformation {\n  @key\n  @doc(\"Id for the ledger.\")\n  @visibility(\"read\")\n  ledgerId: string;\n\n  @doc(\"PEM-encoded certificate used for TLS by the Confidential Ledger.\")\n  ledgerTlsCertificate: string;\n}\n\n#suppress \"deprecated\" \"This is kept as an example that the old signatures are deprecated.\"\n@get\n@doc(\"Gets a LedgerIdentityInformation.\")\n@summary(\"Gets identity information for a Confidential Ledger instance.\")\nop getLedgerIdentity is Azure.Core.ResourceRead<LedgerIdentityInformation>;\n", "file_path": "../../packages/samples/specs\\data-plane\\confidentialledger\\identityservice.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\confidentialledger\\identityservice.tsp"}, {"file_content": "import \"./confidentialledger.tsp\";\nimport \"./identityservice.tsp\";\n", "file_path": "../../packages/samples/specs\\data-plane\\confidentialledger\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\confidentialledger\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\nusing Azure.Core.Traits;\n\n@service({\n  title: \"Contoso Widget Manager\",\n})\n@versioned(Contoso.WidgetManager.Versions)\nnamespace Contoso.WidgetManager;\n\n@doc(\"The Contoso Widget Manager service version.\")\nenum Versions {\n  @doc(\"Version 2022-08-31\")\n  @useDependency(Azure.Core.Versions.v1_0_Preview_1)\n  `2022-08-31`,\n}\n\n// Models ////////////////////\n\n@doc(\"A widget.\")\n@resource(\"widgets\")\nmodel Widget {\n  @key(\"widgetName\")\n  @doc(\"The widget name.\")\n  @visibility(\"read\")\n  name: string;\n\n  @doc(\"The ID of the widget's manufacturer.\")\n  manufacturerId: string;\n\n  ...EtagProperty;\n}\n\n@error\n@doc(\"A custom error type for the Widget Manager service.\")\nmodel WidgetServiceErrorResponse {\n  @doc(\"The numeric error code.\")\n  code: int32;\n\n  @doc(\"The error message.\")\n  errorMessage: string;\n}\n\n// Operations ////////////////////\n\nalias ServiceTraits = SupportsRepeatableRequests &\n  SupportsConditionalRequests &\n  SupportsClientRequestId;\n\nalias Operations = Azure.Core.ResourceOperations<ServiceTraits, WidgetServiceErrorResponse>;\n\ninterface Widgets {\n  // Operation Status\n  @doc(\"Gets status of a Widget operation.\")\n  getWidgetOperationStatus is Operations.GetResourceOperationStatus<Widget>;\n\n  // Widget Operations\n  @doc(\"Creates or updates a Widget asynchronously\")\n  @pollingOperation(Widgets.getWidgetOperationStatus)\n  createOrUpdateWidget is Operations.LongRunningResourceCreateOrUpdate<Widget>;\n\n  @doc(\"Get a Widget\")\n  getWidget is Operations.ResourceRead<Widget>;\n\n  @doc(\"Delete a Widget asynchronously.\")\n  @pollingOperation(Widgets.getWidgetOperationStatus)\n  deleteWidget is Operations.LongRunningResourceDelete<Widget>;\n\n  @doc(\"List Widget resources\")\n  listWidgets is Operations.ResourceList<\n    Widget,\n    ListQueryParametersTrait<StandardListQueryParameters & SelectQueryParameter>\n  >;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\custom-error-type\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\custom-error-type\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\n\n@useAuth(AadOauth2Auth<[\"https://cognitiveservices.azure.com/.default\"]>)\n@service({\n  title: \"Form Recognizer\",\n  version: \"2021-09-30-preview\",\n})\n@useDependency(Azure.Core.Versions.v1_0_Preview_1)\n@doc(\"Extracts content, layout, and structured data from documents.\")\nnamespace Azure.FormRecognizer;\n\n@tag(\"Management\")\ninterface Management {\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @doc(\"Gets information about custom document models.\")\n  @route(\"info\")\n  getInfo is Azure.Core.Foundations.Operation<{}, GetInfoResponse>;\n}\n\nalias ApiVersion = \"2021-09-30-preview\";\n\nalias ServiceTraits = Azure.Core.Traits.NoRepeatableRequests &\n  Azure.Core.Traits.NoConditionalRequests &\n  Azure.Core.Traits.NoClientRequestId;\n\nalias ResourceOps = Azure.Core.ResourceOperations<ServiceTraits>;\n\nalias AnalyzeContentType =\n  | \"application/json\"\n  | \"application/octet-stream\"\n  | \"application/pdf\"\n  | \"image/jpeg\"\n  | \"image/png\"\n  | \"image/tiff\"\n  | \"image/bmp\";\n\n@doc(\"An Accepted response with an Operation-Location header.\")\nmodel AcceptedResponse {\n  @doc(\"The status code.\")\n  @statusCode\n  statusCode: 202;\n\n  @doc(\"Operation result URL.\")\n  @header(\"Operation-Location\")\n  operationLocation: string;\n}\n\n@tag(\"Analysis\")\ninterface Analysis {\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  #suppress \"@azure-tools/typespec-azure-core/byos\" \"This operation does not follow the standard long-running operation pattern.\"\n  @action(\"analyze\")\n  @doc(\"Runs a custom action on ModelSummary\")\n  analyzeDocument is ResourceOps.ResourceAction<\n    ModelSummary,\n    {\n      @doc(\"The content type.\")\n      @header\n      contentType: AnalyzeContentType;\n\n      @doc(\"List of 1-based page numbers to analyze. Ex. \\\"1-3,5,7-9\\\"\")\n      @query\n      pages: string;\n\n      @doc(\"Locale hint for text recognition and document analysis. Value may contain only the language code (ex. \\\"en\\\", \\\"fr\\\") or BCP 47 language tag (ex. \\\"en-US\\\").\")\n      @query\n      locale: string;\n\n      @doc(\"The string index type.\")\n      @query\n      stringIndexType: StringIndexType;\n\n      @doc(\"The request body.\")\n      @body\n      body: bytes;\n    },\n    AcceptedResponse\n  >;\n\n  @doc(\"Get a AnalyzeResultOperation\")\n  getAnalyzeResult is ResourceOps.ResourceRead<AnalyzeResultOperation>;\n}\n\n@tag(\"Creation\")\ninterface Creation {\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Builds a custom document analysis model.\")\n  // @action(\"build\")\n  buildDocumentModel is ResourceOps.ResourceCollectionAction<\n    ModelSummary,\n    BuildDocumentModelRequest,\n    AcceptedResponse\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Creates a new model from document types of existing models.\")\n  // @action(\"compose\")\n  composeDocumentModel is ResourceOps.ResourceCollectionAction<\n    ModelSummary,\n    ComposeDocumentModelRequest,\n    AcceptedResponse\n  >;\n\n  @doc(\"Generates authorization to copy a model to this location with specified modelId and optional description.\")\n  // @action(\"authorizeCopy\")\n  authorizeCopyDocumentModel is ResourceOps.ResourceCollectionAction<\n    ModelSummary,\n    AuthorizeCopyRequest,\n    CopyAuthorization\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Copies model to the target resource, region, and modelId.\")\n  @action(\"copyTo\")\n  copyDocumentModelTo is ResourceOps.ResourceAction<\n    ModelSummary,\n    CopyAuthorization,\n    AcceptedResponse\n  >;\n}\n\n@tag(\"Operation\")\ninterface Operations {\n  @doc(\"Lists all operations.\")\n  @get\n  listOperations is ResourceOps.ResourceList<OperationInfo>;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service with a non-standard read operation.\"\n  @doc(\"Gets operation info.\")\n  @get\n  getOperation is Azure.Core.Foundations.ResourceOperation<OperationInfo, {}, GetOperationResponse>;\n}\n\n@tag(\"Management\")\ninterface DocumentModels {\n  @doc(\"Get a ModelSummary\")\n  getModel is ResourceOps.ResourceRead<ModelSummary>;\n\n  @doc(\"List ModelSummary resources\")\n  listModels is ResourceOps.ResourceList<ModelSummary>;\n\n  @doc(\"Delete a ModelSummary\")\n  deleteModel is ResourceOps.ResourceDelete<ModelSummary>;\n}\n\n@doc(\"Method used to compute string offset and length.\")\nenum StringIndexType {\n  @doc(\"Text elements\")\n  textElements,\n\n  @doc(\"Unicode code points\")\n  unicodeCodePoint,\n\n  @doc(\"UTF-16 code units\")\n  utf16CodeUnit,\n}\n\n@doc(\"Unique model name\")\n@pattern(\"[a-zA-Z0-9][a-zA-Z0-9._~-]{1,63}\")\nscalar ModelId extends string;\n\n@doc(\"Model description.\")\n@maxLength(4096)\nscalar ModelDescription extends string;\n\n@doc(\"The summary of a model.\")\n@resource(\"documentModels\")\nmodel ModelSummary {\n  @key\n  @doc(\"Unique model name\")\n  @visibility(\"read\")\n  modelId: ModelId;\n\n  @doc(\"Model description.\")\n  description: string;\n\n  @doc(\"Date and time (UTC) when the model was created\")\n  createdDateTime: utcDateTime;\n}\n\n@doc(\"The details of an error.\")\nmodel Error {\n  @doc(\"The error code.\")\n  code: string;\n\n  @doc(\"The error message.\")\n  message: string;\n\n  @doc(\"The target of the error.\")\n  target: string;\n\n  @doc(\"Additional details about the error.\")\n  details: Error[];\n\n  @doc(\"The inner error details.\")\n  innerError: InnerError;\n}\n\n@doc(\"The inner details of an error.\")\nmodel InnerError {\n  @doc(\"The error code.\")\n  code: string;\n\n  @doc(\"The error message.\")\n  message: string;\n\n  @doc(\"The error target.\")\n  target: string;\n\n  @projectedName(\"csharp\", \"InnerErrorObject\")\n  @doc(\"The inner error details.\")\n  innerError: InnerError;\n}\n\n@doc(\"Document analysis parameters.\")\nmodel AnalyzeDocumentRequest {\n  @doc(\"Content at specified URL.\")\n  urlSource: string;\n\n  @doc(\"Content represented via Base64 encoding.\")\n  base64Source: string;\n}\n\n@doc(\"General information regarding the current resource.\")\nmodel GetInfoResponse {\n  @doc(\"Info regarding custom document models.\")\n  customDocumentModels: CustomDocumentModelsInfo;\n}\n\n@doc(\"Info regarding custom document models.\")\nmodel CustomDocumentModelsInfo {\n  @doc(\"Number of custom models in the current resource.\")\n  count: int32;\n\n  @doc(\"Maximum number of custom models supported in the current resource.\")\n  limit: int32;\n}\n\n@doc(\"Operation status.\")\nenum AnalyzeResultOperationStatus {\n  @doc(\"Operation has not started.\")\n  notStarted,\n\n  @doc(\"Operation is running.\")\n  runnning,\n\n  @doc(\"Operation has failed.\")\n  failed,\n\n  @doc(\"Operation has succeeded.\")\n  succeeded,\n}\n\n@resource(\"analyzeResults\")\n@parentResource(ModelSummary)\n@doc(\"Status and result of the analyze operation.\")\nmodel AnalyzeResultOperation {\n  @key\n  @visibility(\"none\")\n  @doc(\"The result ID.\")\n  resultId: string;\n\n  @doc(\"Operation status.\")\n  status: AnalyzeResultOperationStatus;\n\n  @doc(\"Date and time (UTC) when the analyze operation was submitted.\")\n  createdDateTime: utcDateTime;\n\n  @doc(\"Date and time (UTC) when the status was last updated.\")\n  lastUpdatedDateTime: utcDateTime;\n\n  @doc(\"Encountered error during document analysis.\")\n  error: Error;\n\n  @doc(\"Document analysis result.\")\n  analyzeResult: AnalyzeResult;\n}\n\n@doc(\"The result of an analysis job.\")\nmodel AnalyzeResult {\n  @doc(\"API version used to produce this result.\")\n  apiVersion: ApiVersion;\n\n  @doc(\"Model ID used to produce this result.\")\n  modelId: ModelId;\n\n  @doc(\"Method used to compute string offset and length.\")\n  stringIndexType: StringIndexType;\n\n  @doc(\"Concatenate string representation of all textual and visual elements in reading order.\")\n  content: string;\n\n  @doc(\"Analyzed pages.\")\n  pages: DocumentPage[];\n\n  @doc(\"Extracted tables.\")\n  tables: DocumentTable[];\n\n  @doc(\"Extracted key-value pairs.\")\n  keyValuePairs: DocumentKeyValuePair[];\n\n  @doc(\"Extracted entities.\")\n  entities: DocumentEntity[];\n\n  @doc(\"Extracted styles.\")\n  styles: DocumentStyle[];\n\n  @doc(\"Extracted documents.\")\n  documents: Document[];\n}\n\n@doc(\"Content and layout elements extracted from a page from the input.\")\nmodel DocumentPage {\n  @doc(\"1-based page number in the input document.\")\n  @minValue(1)\n  pageNumber: int32;\n\n  @doc(\"The general orientation of the content in clockwise direction, measured in degrees between (-180, 180].\")\n  @minValue(-180)\n  @maxValue(180)\n  angle: int32;\n\n  @doc(\"The width of the image/PDF in pixels/inches, respectively.\")\n  @minValue(0)\n  width: int32;\n\n  @doc(\"The height of the image/PDF in pixels/inches, respectively.\")\n  @minValue(0)\n  height: int32;\n\n  @doc(\"The unit used by the width, height, and boundingBox properties.\")\n  unit: LengthUnit;\n\n  @doc(\"Location of the page in the reading order concatenated content.\")\n  spans: DocumentSpan[];\n\n  @doc(\"Extracted words from the page.\")\n  words: DocumentWord[];\n\n  @doc(\"Extracted selection marks from the page.\")\n  selectionMarks: DocumentSelectionMark[];\n\n  @doc(\"Extracted lines from the page, potentially containing both textual and visual elements.\")\n  lines: DocumentLine[];\n}\n\n@doc(\"The unit used by the width, height, and boundingBox properties. For images, the unit is \\\"pixel\\\". For PDF, the unit is \\\"inch\\\".\")\nenum LengthUnit {\n  @doc(\"Unit is pixel.\")\n  pixel,\n\n  @doc(\"Unit is inch.\")\n  inch,\n}\n\n@doc(\"Contiguous region of the concatenated content property, specified as an offset and length.\")\nmodel DocumentSpan {\n  @doc(\"Zero-based index of the content represented by the span.\")\n  @minValue(0)\n  offset: int32;\n\n  @doc(\"Number of characters in the content represented by the span.\")\n  @minValue(0)\n  length: int32;\n}\n\n@doc(\"A word object consisting of a contiguous sequence of characters. For non-space delimited languages, such as Chinese, Japanese, and Korean, each character is represented as its own word.\")\nmodel DocumentWord {\n  @doc(\"Text content of the word.\")\n  content: string;\n\n  @doc(\"Bounding box of the word\")\n  boundingBox?: BoundingBox;\n\n  @doc(\"Location of the word in the reading order concatenated content.\")\n  span: DocumentSpan;\n\n  @doc(\"Confidence of correctly extracting the word.\")\n  confidence: Confidence;\n}\n\n// @doc(\n//   \"Quadrangle bounding box, with coordinates specified relative to the top-left of the page. The eight numbers represent the four points, clockwise from the top-left corner relative to the text orientation.\"\n// )\n// @maxLength(8)\n// @minLength(8)\nalias BoundingBox = float64[];\n\n@doc(\"A selection mark object representing check boxes, radio buttons, and other elements indicating a selection.\")\nmodel DocumentSelectionMark {\n  @doc(\"State of the selection mark.\")\n  state: SelectionMarkState;\n\n  @doc(\"Bounding box of the selection mark.\")\n  boundingBox?: BoundingBox;\n\n  @doc(\"Location of the selection mark in the reading order concatenated content.\")\n  span: DocumentSpan;\n\n  @doc(\"Confidence of correctly extracting the selection mark.\")\n  confidence: Confidence;\n}\n\n@doc(\"Prediction confidence.\")\n@minValue(0)\n@maxValue(1)\nscalar Confidence extends float64;\n\n@doc(\"State of the selection mark.\")\nenum SelectionMarkState {\n  @doc(\"Selected.\")\n  selected,\n\n  @doc(\"Unselected.\")\n  unselected,\n}\n\n@doc(\"A table object consisting table cells arranged in a rectangular layout.\")\nmodel DocumentTable {\n  @doc(\"Number of rows in the table.\")\n  rowCount: int32;\n\n  @doc(\"Number of columns in the table.\")\n  columnCount: int32;\n\n  @doc(\"Cells contained within the table.\")\n  cells: DocumentTableCell[];\n\n  @doc(\"Bounding regions covering the table.\")\n  boundingRegions?: BoundingRegion[];\n\n  @doc(\"Location of the table in the reading order concatenated content.\")\n  spans: DocumentSpan[];\n}\n\n@doc(\"An object representing the location and content of a table cell.\")\nmodel DocumentTableCell {\n  @doc(\"The kind of the DocumentTableCell.\")\n  kind?: DocumentTableCellKind;\n\n  @doc(\"Row index of the cell.\")\n  rowIndex: int32;\n\n  @doc(\"Column  index of the cell.\")\n  columnIndex: int32;\n\n  @doc(\"Number of rows spanned by this cell.\")\n  rowSpan?: int32;\n\n  @doc(\"Number of columns spanned by this cell.\")\n  columnSpan?: int32;\n\n  @doc(\"Concatenated content of the table cell in reading order.\")\n  content: string;\n\n  @doc(\"Bounding regions covering the table cell.\")\n  boundingRegions?: BoundingRegion[];\n\n  @doc(\"Location of the table cell in the reading order concatenated content.\")\n  spans: DocumentSpan[];\n}\n\n@doc(\"Table cell kind.\")\nenum DocumentTableCellKind {\n  @doc(\"Content cell.\")\n  content,\n\n  @doc(\"Row header cell.\")\n  rowHeader,\n\n  @doc(\"Column header cell.\")\n  columnHeader,\n\n  @doc(\"Stub cell.\")\n  stubHead,\n\n  @doc(\"Blank cell.\")\n  description,\n}\n\n@doc(\"Bounding box on a specific page of the input.\")\nmodel BoundingRegion {\n  @doc(\"1-based page number of page containing the bounding region.\")\n  @minValue(1)\n  pageNumber: int32;\n\n  @doc(\"Bounding box on the page, or the entire page if not specified.\")\n  boundingBox: BoundingBox;\n}\n\n@doc(\"An object representing a form field with distinct field label (key) and field value (may be empty).\")\nmodel DocumentKeyValuePair {\n  @doc(\"Field label of the key-value pair.\")\n  key: DocumentKeyValueElement;\n\n  @doc(\"Field value of the key-value pair.\")\n  value?: DocumentKeyValueElement;\n\n  @doc(\"Confidence of correctly extracting the key-value pair.\")\n  confidence: Confidence;\n}\n\n@doc(\"An object representing the field key or value in a key-value pair.\")\nmodel DocumentKeyValueElement {\n  @doc(\"Concatenated content of the key-value element in reading order.\")\n  content: string;\n\n  @doc(\"Location of the key-value element in the reading order concatenated content.\")\n  spans: DocumentSpan[];\n\n  @doc(\"Bounding regions covering the key-value element.\")\n  boundingRegions?: BoundingRegion;\n}\n\n@doc(\"An object representing various categories of entities.\")\nmodel DocumentEntity {\n  @doc(\"Entity type.\")\n  category: string;\n\n  @doc(\"Entity sub type.\")\n  subCategory: string;\n\n  @doc(\"Content content\")\n  content: string;\n\n  @doc(\"Bounding regions covering the entity.\")\n  boundingRegions?: BoundingRegion;\n\n  @doc(\"Location of the entity in the reading order concatenated content.\")\n  spans: DocumentSpan[];\n\n  @doc(\"Confidence of correctly extracting the entity.\")\n  confidence: Confidence;\n}\n\n@doc(\"An object representing observed text styles.\")\nmodel DocumentStyle {\n  @doc(\"Location of the text elements in the concatenated content the style applies to.\")\n  spans: DocumentSpan[];\n\n  @doc(\"Confidence of correctly identifying the style.\")\n  confidence: Confidence;\n\n  @doc(\"Is content handwritten?\")\n  isHandwritten?: boolean;\n}\n\n@doc(\"An object describing the location and semantic content of a document.\")\nmodel Document {\n  @doc(\"Document type\")\n  docType: DocType;\n\n  @doc(\"Location of the document in the reading order concatenated content.\")\n  spans: DocumentSpan[];\n\n  @doc(\"Dictionary of named field values.\")\n  fields: Record<DocumentField>;\n\n  @doc(\"Confidence of correctly extracting the document.\")\n  confidence: Confidence;\n\n  @doc(\"Bounding regions covering the document.\")\n  boundingRegions?: BoundingRegion;\n}\n\n@doc(\"Document type name.\")\n@minLength(2)\n@maxLength(64)\nscalar DocType extends string;\n\n@doc(\"An object representing the content and location of a field value.\")\nmodel DocumentField {\n  @doc(\"Location of the field in the reading order concatenated content.\")\n  spans: DocumentSpan[];\n\n  @doc(\"Confidence of correctly extracting the field.\")\n  confidence: Confidence;\n\n  @doc(\"Data type of the field value.\")\n  type: DocumentFieldType;\n\n  @doc(\"String value.\")\n  valueString?: string;\n\n  @doc(\"Date value in YYYY-MM-DD format (ISO 8601).\")\n  valueDate?: plainDate;\n\n  @doc(\"Time value in hh:mm:ss format (ISO 8601).\")\n  valueTime?: plainTime;\n\n  @doc(\"Phone number value in E.164 format (ex. +19876543210).\")\n  valuePhoneNumber?: string;\n\n  @doc(\"Floating point value\")\n  valueNumber?: float64;\n\n  @doc(\"Integer value\")\n  valueInteger?: int64;\n\n  @doc(\"Selection mark value.\")\n  valueSelectionMark?: SelectionMarkState;\n\n  @doc(\"Presence of signature.\")\n  valueSignature?: DocumentSignatureType;\n\n  @doc(\"3-letter country code value (ISO 3166-1 alpha-3).\")\n  valueCountryRegion?: string;\n\n  @doc(\"Array of field values.\")\n  valueArray?: DocumentField[];\n\n  @doc(\"Dictionary of named field values.\")\n  valueObject?: Record<DocumentField>;\n\n  @doc(\"Field content.\")\n  content?: string;\n\n  @doc(\"Bounding regions covering the field.\")\n  boundingRegions?: BoundingRegion[];\n}\n\n@doc(\"Semantic data type of the field value.\")\nenum DocumentFieldType {\n  @doc(\"String value.\")\n  string,\n\n  @doc(\"Date value\")\n  date,\n\n  @doc(\"Time value\")\n  time,\n\n  @doc(\"Phone number value\")\n  phoneNumber,\n\n  @doc(\"Floating point value\")\n  number,\n\n  @doc(\"Integer value\")\n  integer,\n\n  @doc(\"Selection mark value.\")\n  selectionMark,\n\n  @doc(\"Country code value.\")\n  countryRegion,\n\n  @doc(\"Signature value.\")\n  signature,\n\n  @doc(\"Array value.\")\n  array,\n\n  @doc(\"Object value.\")\n  object,\n}\n\n@doc(\"Presence of signature.\")\nenum DocumentSignatureType {\n  @doc(\"Document is signed.\")\n  signed,\n\n  @doc(\"Document is unsigned.\")\n  unsigned,\n}\n\n@doc(\"A content line object consisting of an adjacent sequence of content elements, such as words and selection marks.\")\nmodel DocumentLine {\n  @doc(\"Concatenated content of the contained elements in reading order.\")\n  content: string;\n\n  @doc(\"Location of the line in the reading order concatenated content.\")\n  spans: DocumentSpan;\n\n  @doc(\"Bounding box of the line.\")\n  boundingBox?: BoundingBox;\n}\n\n@doc(\"Request body to build a new custom model.\")\nmodel BuildDocumentModelRequest {\n  @doc(\"Model Id\")\n  modelId: ModelId;\n\n  @doc(\"Model description\")\n  description?: ModelDescription;\n\n  @doc(\"Azure Blob Storage location containing the training data.\")\n  azureBlobSource?: AzureBlobContentSource;\n}\n\n@doc(\"Azure Blob Storage content.\")\nmodel AzureBlobContentSource {\n  @doc(\"Azure Blob Storage container URL.\")\n  containerUrl: string;\n\n  @doc(\"Blob name prefix.\")\n  prefix?: string;\n}\n\n@doc(\"Request body to create a composed model from component models.\")\nmodel ComposeDocumentModelRequest {\n  @doc(\"Model Id\")\n  modelId: ModelId;\n\n  @doc(\"Model description\")\n  description?: ModelDescription;\n\n  @doc(\"List of component models to compose.\")\n  componentModels: ComponentModelInfo[];\n}\n\n@doc(\"A component of a composed model.\")\nmodel ComponentModelInfo {\n  @doc(\"Model Id\")\n  modelId: ModelId;\n}\n\n@doc(\"Request body to authorize model copy.\")\nmodel AuthorizeCopyRequest {\n  @doc(\"Model Id\")\n  modelId: ModelId;\n\n  @doc(\"Model description\")\n  description?: ModelDescription;\n}\n\n@doc(\"Authorization to copy a model to the specified target resource and modelId.\")\nmodel CopyAuthorization {\n  @doc(\"ID of the target Azure resource where the model should be copied to.\")\n  targetResourceId: string;\n\n  @doc(\"Location of the target Azure resource where the model should be copied to.\")\n  targetResourceRegion: string;\n\n  @doc(\"Identifier of the target model.\")\n  targetModelId: ModelId;\n\n  @doc(\"URL of the copied model in the target account.\")\n  targetModelLocation: string;\n\n  @doc(\"Token used to authorize the request.\")\n  accessToken: string;\n\n  @doc(\"Date/time when the access token expires.\")\n  expirationDateTime: utcDateTime;\n}\n\n@resource(\"operations\")\n@doc(\"Operation info.\")\nmodel OperationInfo {\n  @key\n  @doc(\"Operation ID\")\n  @visibility(\"read\")\n  operationId: string;\n\n  @doc(\"Operation status.\")\n  status: OperationStatus;\n\n  @doc(\"Operation progress (0-100).\")\n  @minValue(0)\n  @maxValue(100)\n  percentCompleted: int32;\n\n  @doc(\"Date and time (UTC) when the operation was created.\")\n  createdDateTime: utcDateTime;\n\n  @doc(\"Date and time (UTC) when the status was last updated.\")\n  lastUpdatedDateTime: utcDateTime;\n\n  @doc(\"Type of operation\")\n  kind: OperationKind;\n\n  @doc(\"URL of the resource targeted by this operation.\")\n  resourceLocation: string;\n}\n\n@doc(\"Operation status.\")\nenum OperationStatus {\n  @doc(\"Operation has not started yet.\")\n  notStarted,\n\n  @doc(\"Operation is running.\")\n  running,\n\n  @doc(\"Operation failed.\")\n  failed,\n\n  @doc(\"Operation succeeded.\")\n  succeeded,\n\n  @doc(\"Operation was canceled.\")\n  canceled,\n}\n\n@doc(\"Type of operation\")\nenum OperationKind {\n  @doc(\"Operation to build a new custom model.\")\n  documentModelBuild,\n\n  @doc(\"Operation to compose a new custom model.\")\n  documentModelCompose,\n\n  @doc(\"Operation to copy a custom model.\")\n  documentModelCopyTo,\n}\n\n@doc(\"The response for the getOperation operation.\")\nmodel GetOperationResponse extends OperationInfo {\n  @doc(\"Encountered error.\")\n  error?: Error;\n\n  @doc(\"Operation result upon success.\")\n  result: {};\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\formrecognizer\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\formrecognizer\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\nusing Azure.Core.Traits;\n\n@useAuth(AzureApiKeyAuthentication)\n@server(\n  \"{Endpoint}/language\",\n  \"Language Service\",\n  {\n    Endpoint: Endpoint,\n  }\n)\n@service({\n  title: \"Microsoft Cognitive Language Service - Analyze Text Authoring\",\n  version: \"202\u00df2-05-15-preview\",\n})\n@useDependency(Azure.Core.Versions.v1_0_Preview_2)\n@route(\"/authoring/analyze-text/\")\nnamespace Azure.Language.Authoring;\n\nalias ServiceTraits = NoRepeatableRequests & NoConditionalRequests & NoClientRequestId;\n\nalias Operations = Azure.Core.ResourceOperations<ServiceTraits>;\n\n// Common Parameters\n\n// TODO: Use the common parameter for this\n@doc(\"The endpoint to use.\")\nscalar Endpoint extends string;\n\n// Models\n\n@doc(\"The details of a project.\")\nmodel Project {\n  @key\n  @segment(\"projects\")\n  @doc(\"The project name.\")\n  @visibility(\"read\")\n  projectName: string;\n\n  @doc(\"The project kind.\")\n  projectKind: ProjectKind;\n\n  @doc(\"The storage container name.\")\n  storageInputContainerName: string;\n\n  @doc(\"The project settings.\")\n  settings?: ProjectSettings;\n\n  @doc(\"Whether the project would be used for multiple languages or not.\")\n  multilingual?: boolean;\n\n  @doc(\"The project description.\")\n  description?: string;\n\n  @doc(\"The project language. This is BCP-47 representation of a language. For example, use \\\"en\\\" for English, \\\"en-gb\\\" for English (UK), \\\"es\\\" for Spanish etc.\")\n  language: string;\n\n  @doc(\"Represents the project creation datetime.\")\n  @visibility(\"read\")\n  createdDateTime: utcDateTime;\n\n  @doc(\"Represents the project last modification datetime.\")\n  @visibility(\"read\")\n  lastModifiedDateTime: utcDateTime;\n\n  @doc(\"Represents the project last training datetime.\")\n  @visibility(\"read\")\n  lastTrainedDateTime: utcDateTime;\n\n  @doc(\"Represents the project last deployment datetime.\")\n  @visibility(\"read\")\n  lastDeployedDateTime: utcDateTime;\n}\n\n@doc(\"Represents the project kind.\")\nenum ProjectKind {\n  @doc(\"For building a classification model to classify text using your own data. Each file will have only one label. For example, file 1 is classified as A and file 2 is classified as B.\")\n  CustomSingleLabelClassification,\n\n  @doc(\"For building a classification model to classify text using your own data. Each file can have one or many labels. For example, file 1 is classified as A, B, and C and file 2 is classified as B and C.\")\n  CustomMultiLabelClassification,\n\n  @doc(\"For building an extraction model to identify your domain categories using your own data.\")\n  CustomEntityRecognition,\n}\n\n@doc(\"Represents the settings used to define the project behavior.\")\nmodel ProjectSettings is Record<string>;\n\n@doc(\"The details of a project deployment.\")\n@parentResource(Project)\nmodel Deployment {\n  @doc(\"The name of the deployment.\")\n  @key(\"deploymentName\")\n  @segment(\"deployments\")\n  @visibility(\"read\")\n  name: string;\n}\n\n@doc(\"The details about a job.\")\nmodel Job {\n  @doc(\"The job ID.\")\n  jobId: string;\n\n  @doc(\"The creation date time of the job.\")\n  @visibility(\"read\")\n  createdDateTime: utcDateTime;\n\n  @doc(\"The the last date time the job was updated.\")\n  @visibility(\"read\")\n  lastUpdatedDateTime: utcDateTime;\n\n  @doc(\"The expiration date time of the job.\")\n  @visibility(\"read\")\n  expirationDateTime: utcDateTime;\n\n  @doc(\"The job status.\")\n  status: JobStatus;\n\n  @doc(\"The warnings that were encountered while executing the job.\")\n  warnings: JobWarning[];\n\n  @doc(\"The errors encountered while executing the job.\")\n  errors: Azure.Core.Foundations.Error;\n}\n\n@doc(\"Represents the job status.\")\nenum JobStatus {\n  @doc(\"The job has not started yet.\")\n  notStarted,\n\n  @doc(\"The job is running.\")\n  running,\n\n  @doc(\"The job has completed successfully.\")\n  succeeded,\n\n  @doc(\"The job has failed.\")\n  failed,\n\n  @doc(\"The job has been cancelled.\")\n  cancelled,\n\n  @doc(\"The job is cancelling.\")\n  cancelling,\n\n  @doc(\"The job is partially completed.\")\n  partiallyCompleted,\n}\n\n@doc(\"Represents a warning that was encountered while executing the request.\")\nmodel JobWarning {\n  @doc(\"The warning code.\")\n  code: string;\n\n  @doc(\"The warning message.\")\n  message: string;\n}\n\n@doc(\"The details of a deployment job.\")\n@parentResource(Deployment)\nmodel DeploymentJob {\n  ...Job;\n\n  @doc(\"The job ID.\")\n  @key(\"jobId\")\n  @segment(\"jobs\")\n  @visibility(\"read\")\n  id: string;\n}\n\n@doc(\"The details of a swap deployments job.\")\n@parentResource(Deployment)\nmodel SwapDeploymentsJob {\n  ...Job;\n\n  @doc(\"The job ID.\")\n  @key(\"jobId\")\n  @visibility(\"read\")\n  @segment(\"swap/jobs\")\n  id: string;\n}\n\n@doc(\"The details of an exported project.\")\nmodel ExportedProject {}\n\n@doc(\"Represents a supported language.\")\nmodel SupportedLanguage {\n  @doc(\"The language name.\")\n  languageName: string;\n\n  @doc(\"The language code. This is BCP-47 representation of a language. For example, \\\"en\\\" for English, \\\"en-gb\\\" for English (UK), \\\"es\\\" for Spanish etc.\")\n  languageCode: string;\n}\n\n@doc(\"A collection of SupportedLanguage resources.\")\nmodel SupportedLanguages is Azure.Core.Page<SupportedLanguage>;\n\n@doc(\"Represents a training config version.\")\nmodel TrainingConfigVersion {\n  @projectedName(\"csharp\", \"version\")\n  @doc(\"Represents the version of the config.\")\n  trainingConfigVersion: string;\n\n  @doc(\"Represents the training config version expiration date.\")\n  modelExpirationDate: plainDate;\n}\n\n@doc(\"A collection of TrainingConfigVersion resources.\")\nmodel TrainingConfigVersions is Azure.Core.Page<TrainingConfigVersion>;\n\n// Operations\n\n@doc(\"Export parameters.\")\nmodel ExportParams {\n  @query\n  @doc(\"The project file version.\")\n  projectFileVersion: string;\n}\n\n@doc(\"Training job parameters.\")\nmodel TrainingJobOptions {\n  @doc(\"The model label.\")\n  modelLabel: string;\n}\n\n@doc(\"Swap deployment options.\")\nmodel SwapDeploymentsOptions {\n  @doc(\"Represents the first deployment name.\")\n  firstDeploymentName: string;\n\n  @doc(\"Represents the second deployment name.\")\n  secondDeploymentName: string;\n}\n\n@doc(\"Swap deployment parameters.\")\nmodel SwapDeploymentsParams {\n  @doc(\"The body schema of the operation.\")\n  @body\n  body: SwapDeploymentsOptions;\n}\n\ninterface Projects {\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Creates a new project or updates an existing one.\")\n  createOrUpdate is Operations.LongRunningResourceCreateOrUpdate<Project>;\n\n  @doc(\"Gets the details of a project.\")\n  get is Operations.ResourceRead<Project>;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Deletes a project.\")\n  delete is Operations.LongRunningResourceDelete<Project>;\n\n  @doc(\"Lists the existing projects.\")\n  list is Operations.ResourceList<Project, ListQueryParametersTrait<StandardListQueryParameters>>;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Triggers a job to export a project's data.\")\n  export is Operations.ResourceAction<\n    Project,\n    ExportParams,\n    TypeSpec.Http.AcceptedResponse & Foundations.LongRunningStatusLocation\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  // NOTE: `import` is a reserved keyword\n  @doc(\"Triggers a job to export a project's data.\")\n  importx is Operations.ResourceAction<\n    Project,\n    ExportedProject,\n    TypeSpec.Http.AcceptedResponse & Foundations.LongRunningStatusLocation\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Triggers a training job for a project.\")\n  train is Operations.ResourceAction<\n    Project,\n    {\n      @doc(\"The body of the request.\")\n      @body\n      body: TrainingJobOptions;\n    },\n    TypeSpec.Http.AcceptedResponse & Foundations.LongRunningStatusLocation\n  >;\n}\n\ninterface Deployments {\n  @doc(\"Gets the details of a deployment.\")\n  getDeployment is Operations.ResourceRead<Deployment>;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-names\" \"This operation does not follow the standard naming pattern.\"\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Creates a new deployment or replaces an existing one.\")\n  deployProject is Operations.LongRunningResourceCreateOrReplace<Deployment>;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Deletes a project deployment.\")\n  deleteDeployment is Operations.LongRunningResourceDelete<Deployment>;\n\n  @doc(\"Lists the existing deployments.\")\n  list is Operations.ResourceList<Deployment>;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Swaps two existing deployments with each other.\")\n  @collectionAction(Deployment, \"swap\")\n  swapDeployments is Operations.ResourceCollectionAction<\n    Deployment,\n    SwapDeploymentsParams,\n    Azure.Core.Foundations.AcceptedResponse & Foundations.LongRunningStatusLocation\n  >;\n}\n\ninterface Jobs {\n  @doc(\"Gets the status of an existing deployment job.\")\n  getDeploymentStatus is Operations.ResourceRead<DeploymentJob>;\n\n  @doc(\"Gets the status of an existing swap deployment job.\")\n  getSwapDeploymentsStatus is Operations.ResourceRead<SwapDeploymentsJob>;\n}\n\n@route(\"projects/global/\")\ninterface Global {\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @get\n  @route(\"languages\")\n  @doc(\"Gets the supported languages.\")\n  listSupportedLanguages is Foundations.Operation<StandardListQueryParameters, SupportedLanguages>;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @get\n  @doc(\"Lists training configuration versions.\")\n  @route(\"training-config-versions\")\n  listTrainingConfigVersions is Foundations.Operation<\n    StandardListQueryParameters,\n    TrainingConfigVersions\n  >;\n}\n\n// Missing operations\n\n// \"/authoring/analyze-text/projects/{projectName}/models\": {\n// \"/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}\": {\n// \"/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/evaluation/result\": {\n// \"/authoring/analyze-text/projects/{projectName}/models/{trainedModelLabel}/evaluation/summary-result\": {\n\n// Special endpoints\n\n// \"/authoring/analyze-text/projects/{projectName}/export/jobs/{jobId}\": {\n// \"/authoring/analyze-text/projects/{projectName}/import/jobs/{jobId}\": {\n// \"/authoring/analyze-text/projects/{projectName}/train/jobs\": {\n// \"/authoring/analyze-text/projects/{projectName}/train/jobs/{jobId}\": {\n// \"/authoring/analyze-text/projects/{projectName}/train/jobs/{jobId}/:cancel\": {\n\n// Under global\n\n// \"/authoring/analyze-text/projects/global/deletion-jobs/{jobId}\": {\n", "file_path": "../../packages/samples/specs\\data-plane\\language\\authoring\\authoring.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\language\\authoring\\authoring.tsp"}, {"file_content": "import \"./authoring.tsp\";\n", "file_path": "../../packages/samples/specs\\data-plane\\language\\authoring\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\language\\authoring\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\n@doc(\"Language of the text records. This is BCP-47 representation of a language. For example, use \\\"en\\\" for English; \\\"es\\\" for Spanish etc. If not set, use \\\"en\\\" for English as default.\")\nscalar Language extends string;\n\n@error\nmodel ODataError {\n  message: string;\n}\n\n@doc(\"Error response\")\n@error\nmodel ErrorResponse {\n  @doc(\"The error object\")\n  error: Error;\n}\n\n@doc(\"The error object\")\nmodel Error {\n  @doc(\"One of a server-defined set of error codes\")\n  code: ErrorCode;\n\n  @doc(\"A human-readable representation of the error\")\n  message: string;\n\n  @doc(\"Error target\")\n  target?: string;\n}\n\n@doc(\"Collection of error types\")\nmodel Errors {\n  errors: Error[];\n}\n\nenum ErrorCode {\n  InvalidRequest,\n  InvalidArgument,\n  Unauthorized,\n  Forbidden,\n  NotFound,\n  ProjectNotFound,\n  OperationNotFound,\n  AzureCognitiveSearchNotFound,\n  AzureCognitiveSearchIndexNotFound,\n  TooManyRequests,\n  AzureCognitiveSearchThrottling,\n  AzureCognitiveSearchIndexLimitReached,\n  InternalServerError,\n  ServiceUnavailable,\n}\n\nmodel ApiVersionParameter {\n  @doc(\"Client API version\")\n  @query(\"api-version\")\n  apiVersion: string;\n}\n\nmodel ProjectNamePathParameter {\n  @extension(\"x-ms-parameter-location\", \"method\")\n  @doc(\"The name of the project to use\")\n  @maxLength(100)\n  @path\n  projectName: string;\n}\n\nmodel JobIdParameter {\n  @extension(\"x-ms-parameter-location\", \"method\")\n  @doc(\"Job ID\")\n  @path\n  jobId: string;\n}\n\nmodel TopParameter {\n  @extension(\"x-ms-parameter-location\", \"method\")\n  @doc(\"The maximum number of resources to return from the collection\")\n  @query\n  top?: int32;\n}\n\nmodel SkipParameter {\n  @extension(\"x-ms-parameter-location\", \"method\")\n  @doc(\"An offset into the collection of the first resource to be returned\")\n  @query\n  skip?: int32;\n}\n\nmodel MaxPageSizeParameter {\n  @extension(\"x-ms-parameter-location\", \"method\")\n  @doc(\"The maximum number of resources to include in a single response\")\n  @query\n  mazpagesize?: int32;\n}\n\nalias ListParameters = TopParameter & SkipParameter & MaxPageSizeParameter;\n\nmodel ImportExportFormatParameter {\n  @extension(\"x-ms-parameter-location\", \"method\")\n  @doc(\"Knowledge base Import or Export format\")\n  @query\n  format?: ImportExportFormat;\n}\n\nmodel AssetKindParameter {\n  @extension(\"x-ms-parameter-location\", \"method\")\n  @doc(\"Kind of the asset of the project\")\n  @query\n  assetKind?: \"qnas\" | \"synonyms\";\n}\n\nalias LROResponse = (AcceptedResponse & {\n  @header(\"Operation-Location\") operationLocation: string;\n}) | ErrorResponse;\n\n// Common models\n\nenum ImportExportFormat {\n  @doc(\"Export or Import QnA assets in JSON format\")\n  json,\n\n  @doc(\"Export or Import knowledge base replica including all assets and metadata in Excel format.\")\n  tsv,\n\n  @doc(\"Export or Import knowledge base replica including all assets and metadata in Tsv format.\")\n  excel,\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\languageqna\\Interface\\common.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\languageqna\\Interface\\common.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\n\nimport \"./questionanswering-authoring_models.tsp\";\n\n@useAuth(\n  ApiKeyAuth<ApiKeyLocation.header, \"api-key\"> | OAuth2Auth<[\n    {\n      type: OAuth2FlowType.implicit,\n      authorizationUrl: \"https://login.contoso.com/common/oauth2/v2.0/authorize\",\n      scopes: [\"https://cognitiveservices.azure.com/.default\"],\n    }\n  ]>\n)\n@service({\n  title: \"Hello world\",\n  version: \"0.1.0\",\n})\nnamespace Azure.Language.QnA; //@route(\"\")  // TODO\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Rest.Resource;\nusing TypeSpec.OpenAPI;\n\n@doc(\"\")\n@route(\"/projects/{projectName}\")\nnamespace Hello {\n  @post\n  op CreateExport(...ProjectNamePathParameter): JobState;\n}\n\ninterface Projects\n  extends ResourceList<ProjectMetadata, ODataError>,\n    ResourceRead<ProjectMetadata, ODataError>,\n    ResourceDelete<ProjectMetadata, ODataError>,\n    ResourceUpdate<ProjectMetadata, ODataError> {\n  @extension(\"x-ms-long-running-operation\", true)\n  @post\n  CreateExport(\n    ...ResourceParameters<ProjectMetadata>,\n    ...AssetKindParameter,\n  ): Body<\"\"> | ODataError; // TODO: capture LRO status\n\n  @route(\"feedback\")\n  @post\n  feedback(\n    ...ResourceParameters<ProjectMetadata>,\n    @body feedback: ActiveLearningFeedback,\n  ): ActiveLearningFeedback | ODataError;\n}\n\n// TODO: Switch to CreateOrUpdate\ninterface Deployments\n  extends ResourceCreate<ProjectDeployment, ODataError>,\n    ResourceList<ProjectDeployment, ODataError> {\n  // TODO extension resource for multi-parents\n  @get\n  @route(\"{projectName}/jobs/{jobId}\")\n  GetJob(...ResourceParameters<QnaSourceRecord>, ...JobIdParameter): JobState | ODataError;\n}\n\ninterface Synonyms\n  extends ResourceCreate<SynonymAsset, ODataError>,\n    ResourceList<SynonymAsset, ODataError> {}\n\ninterface Sources\n  extends ResourceUpdate<QnaSourceRecord, ODataError>,\n    ResourceList<QnaSourceRecord, ODataError> {\n  // TODO: Singlton Resource not represented correctly\n  @get\n  @route(\"{projectName}/sources/jobs/{jobId}\")\n  GetJob(...ResourceParameters<QnaSourceRecord>, ...JobIdParameter): JobState | ODataError;\n}\n\ninterface Qnas extends ResourceCreate<QnaRecord, ODataError>, ResourceList<QnaRecord, ODataError> {\n  @get\n  @route(\"{projectName}/qnas/jobs/{jobId}\")\n  GetJob(...ResourceParameters<QnaRecord>, ...JobIdParameter): JobState | ODataError;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\languageqna\\Interface\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\languageqna\\Interface\\main.tsp"}, {"file_content": "import \"./common.tsp\";\n\nusing TypeSpec.Rest;\nusing TypeSpec.Rest.Resource;\n\nmodel ActiveLearningFeedback {\n  @doc(\"A list of Feedback Records for Active Learning.\")\n  records?: FeedbackRecord[];\n}\n\nmodel FeedbackRecord {\n  @doc(\"Unique identifier of the user.\")\n  userId?: string;\n\n  @doc(\"User suggested question for the QnA.\")\n  userQuestion?: string;\n\n  @doc(\"Unique ID of the QnA.\")\n  qnaId?: int32;\n}\n\nmodel ProjectMetadata {\n  @doc(\"Name of the project.\")\n  @key\n  @segment(\"projects\")\n  projectName: string;\n\n  @doc(\"Description of the project.\")\n  description?: string;\n\n  language?: Language;\n\n  @doc(\"Resource enabled for multiple languages across projects or not.\")\n  multilingualResource?: boolean;\n\n  settings?: ProjectSettings;\n\n  @doc(\"Project creation date-time.\")\n  createdDateTime?: string;\n\n  @doc(\"Represents the project last modified date-time.\")\n  lastModifiedDateTime?: string;\n\n  @doc(\"Represents the project last deployment date-time.\")\n  lastDeployedDateTime?: string;\n}\n\nmodel ProjectSettings {\n  @doc(\"Default Answer response when no good match is found in the knowledge base.\")\n  defaultAnswer?: string;\n}\n\n@parentResource(ProjectMetadata)\nmodel ProjectDeployment {\n  @doc(\"Name of the deployment.\")\n  @key\n  @segment(\"deployments\")\n  deploymentName: string;\n\n  @doc(\"Represents the project last deployment date-time.\")\n  lastDeployedDateTime?: string;\n}\n\nalias stringArray = string[];\n\nmodel SynonymAsset is WordAlterations;\n\n@parentResource(ProjectMetadata)\nmodel WordAlterations {\n  @doc(\"Collection of word alterations.\")\n  @segment(\"synonym\")\n  @key\n  alterations: string[];\n}\n\n@doc(\"Source to be updated.\")\nmodel UpdateSourceRecord {\n  updateOperation: UpdateOperationKind;\n  newValue: UpdateQnaSourceRecord;\n}\n\n@doc(\"Update source record.\")\nmodel UpdateQnaSourceRecord {\n  ...QnaSourceMetadata;\n\n  @doc(\"Boolean flag used to refresh data from the Source.\")\n  refreshSourceOptions: boolean;\n}\n\n@doc(\"Custom source record with last updated date-time.\")\n@parentResource(ProjectMetadata)\nmodel QnaSourceRecord {\n  ...QnaSourceMetadata;\n  ...LastUpdatedDateTime;\n}\n\n@doc(\"Input source file or url details.\")\nmodel QnaSourceMetadata {\n  @doc(\"Friendly name of the Source.\")\n  displayName?: string;\n\n  @doc(\"Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.\")\n  @segment(\"sources\")\n  @key\n  source: string;\n\n  @doc(\"URI location for the file or url.\")\n  sourceUri: string;\n\n  sourceKind: QnaSourceKind;\n  contentStructureKind: SourceContentStructureKind;\n}\n\n@doc(\"Supported source types.\")\nenum QnaSourceKind {\n  file,\n  url,\n}\n\n@doc(\"Content structure type for sources.\")\nenum SourceContentStructureKind {\n  unstructured,\n}\n\n@doc(\"Last updated date-time parameter.\")\nmodel LastUpdatedDateTime {\n  @doc(\"Date-time when the QnA was last updated.\")\n  lastUpdatedDateTime: utcDateTime;\n}\n\n@doc(\"Represents the job metadata.\") // TODO extension resource\nmodel JobMetaData {\n  jobId: string;\n  createdDateTime: utcDateTime;\n  lastUpdatedDateTime: utcDateTime;\n  expirationDateTime?: utcDateTime;\n  status: JobStatus;\n}\n\n@doc(\"Job state represents the job metadata and any errors.\")\nmodel JobState {\n  ...JobMetaData;\n\n  @doc(\"Collection of Error types.\")\n  errors: Error[];\n}\n\n@doc(\"Job status.\")\nenum JobStatus {\n  notStarted,\n  running,\n  succeeded,\n  failed,\n  cancelled,\n  cancelling,\n  partiallyCompleted,\n}\n\nenum UpdateOperationKind {\n  add,\n  delete,\n  replace,\n}\n\nmodel UpdateQnaRecord {\n  updateOperation: UpdateOperationKind;\n  value: QnaRecord;\n}\n\n@parentResource(ProjectMetadata)\nmodel QnaRecord {\n  @segment(\"qnas\")\n  @key\n  id: int32;\n\n  answer: string;\n  source: string;\n  questions: string[];\n  metadata: string;\n  dialog: QnaDialog;\n  activeLearningSuggestions: SuggestedQuestionsCluster;\n}\n\nmodel QnaDialog {\n  isContextOnly: boolean;\n  prompts: QnaPrompt[];\n}\n\nmodel QnaPrompt {\n  displayOrder: int16;\n  qnaId: int32;\n  qna: QnaRecord;\n  displayText: string;\n}\n\nmodel SuggestedQuestionsCluster {\n  clusterHead: string;\n  suggestedQuestions: SuggestedQuestion;\n}\n\nmodel SuggestedQuestion {\n  question: string;\n  userSuggestedCount: int32;\n  autoSuggestedCount: int32;\n}\n\nmodel ImportJobOptions {\n  metadata: CreateProjectOptions;\n  assets: Asset[];\n  fileUri: string;\n}\n\nmodel Asset {\n  synonyms?: SynonymAsset;\n  qnas?: ImportQnaAsset;\n}\n\nmodel CreateProjectOptions {\n  description?: string;\n  language: Language;\n  multilingualResource: boolean;\n  settings: ProjectSettings[];\n}\n\nalias ImportQnaAsset = ImportQnaRecord;\nmodel ImportQnaRecord {\n  ...RetrieveQnaRecord;\n  ...SourceDisplayNameParameter;\n}\n\nmodel RetrieveQnaRecord {}\n\nmodel SourceDisplayNameParameter {}\n", "file_path": "../../packages/samples/specs\\data-plane\\languageqna\\Interface\\questionanswering-authoring_models.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\languageqna\\Interface\\questionanswering-authoring_models.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\n// namespace Azure.QnAMaker.Common;\n\n@doc(\"The set of possible error codes.\")\nenum ErrorCode {\n  @doc(\"Invalid request\")\n  InvalidRequest,\n\n  @doc(\"Invalid argument\")\n  InvalidArgument,\n\n  @doc(\"Unauthorized\")\n  Unauthorized,\n\n  @doc(\"Forbidden\")\n  Forbidden,\n\n  @doc(\"Not found\")\n  NotFound,\n\n  @doc(\"Project not found\")\n  ProjectNotFound,\n\n  @doc(\"Operation not found\")\n  OperationNotFound,\n\n  @doc(\"Azure Cognitive Search not found\")\n  AzureCognitiveSearchNotFound,\n\n  @doc(\"Azure Cognitive Search index not found\")\n  AzureCognitiveSearchIndexNotFound,\n\n  @doc(\"Too many requests\")\n  TooManyRequests,\n\n  @doc(\"Azure Cognitive Search throttling\")\n  AzureCognitiveSearchThrottling,\n\n  @doc(\"Azure Cognitive Search index limit reached\")\n  AzureCognitiveSearchIndexLimitReached,\n\n  @doc(\"Internal server error\")\n  InternalServerError,\n\n  @doc(\"Service unavailable\")\n  ServiceUnavailable,\n}\n\n@doc(\"The projectName parameter definition.\")\nmodel ProjectNamePathParameter {\n  @path\n  @doc(\"The name of the project\")\n  @maxLength(100)\n  projectName: string;\n}\n\n@doc(\"The jobId parameter definition.\")\nmodel JobIdParameter {\n  @extension(\"x-ms-parameter-location\", \"method\")\n  @doc(\"Job ID\")\n  @path\n  jobId: string;\n}\n\n@doc(\"The format parameter definition.\")\nmodel ImportExportFormatParameter {\n  @doc(\"Knowledge base Import or Export format\")\n  @query\n  format?: ImportExportFormat;\n}\n\n@doc(\"The assetKind parameter definition.\")\nmodel AssetKindParameter {\n  @doc(\"Kind of the asset of the project\")\n  @query\n  assetKind?: \"qnas\" | \"synonyms\";\n}\n\n@doc(\"The language property definition.\")\nmodel Language {\n  @projectedName(\"csharp\", \"LanguageCode\")\n  @doc(\"Language of the text records. This is BCP-47 representation of a language. For example, use \\\"en\\\" for English; \\\"es\\\" for Spanish etc. If not set, use \\\"en\\\" for English as default.\")\n  language?: string;\n}\n\n@doc(\"The format of an import or export operation.\")\nenum ImportExportFormat {\n  @doc(\"Export or Import QnA assets in JSON format\")\n  json,\n\n  @doc(\"Export or Import knowledge base replica including all assets and metadata in Excel format.\")\n  tsv,\n\n  @doc(\"Export or Import knowledge base replica including all assets and metadata in Tsv format.\")\n  excel,\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\languageqna\\Raw\\common.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\languageqna\\Raw\\common.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-autorest\";\nimport \"./common.tsp\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\nusing Azure.Core.Traits;\nusing Autorest;\nusing TypeSpec.OpenAPI;\n// using Azure.QnAMaker.Common;\n\n#suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is an existing service.\"\n@useAuth(\n  ApiKeyAuth<ApiKeyLocation.header, \"api-key\"> | OAuth2Auth<[\n    {\n      type: OAuth2FlowType.implicit,\n      authorizationUrl: \"https://login.contoso.com/common/oauth2/v2.0/authorize\",\n      scopes: [\"https://cognitiveservices.azure.com/.default\"],\n    }\n  ]>\n)\n@service({\n  title: \"Microsoft Cognitive Language Service - Question Answering - Authoring\",\n  version: \"21-10-01\",\n})\n@useDependency(Azure.Core.Versions.v1_0_Preview_2)\nnamespace Azure.QnAMaker;\n\nalias ServiceTraits = NoRepeatableRequests & NoConditionalRequests & NoClientRequestId;\n\nalias Operations = Azure.Core.ResourceOperations<ServiceTraits>;\n\n@doc(\"The API key header definition.\")\nmodel ApiKey {\n  @doc(\"Service connection key\")\n  @header(\"Ocp-Apim-Subscription-Key\")\n  ocpApimSubscriptionKey: string;\n}\n\n@doc(\"Collection of error types\")\nmodel Errors {\n  @projectedName(\"csharp\", \"ErrorItems\")\n  @doc(\"The error list.\")\n  errors: Azure.Core.Foundations.Error[];\n}\n\n@useDependency(Azure.Core.Versions.v1_0_Preview_2)\n@route(\"/query-knowledgebases\")\nnamespace QuestionAnsweringProjects {\n  @doc(\"Gets all projects for a user\")\n  op listProjects is Operations.ResourceList<\n    ProjectMetadata,\n    ListQueryParametersTrait<StandardListQueryParameters>\n  >;\n\n  @doc(\"Get the requested project metadata\")\n  op getProjectDetails is Operations.ResourceRead<ProjectMetadata>;\n\n  @doc(\"Create or update a project\")\n  op createProject is Operations.ResourceCreateOrUpdate<ProjectMetadata>;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Delete the project\")\n  op deleteProject is Operations.LongRunningResourceDelete<ProjectMetadata>;\n\n  @doc(\"Gets the status of a Project delete job\")\n  op getDeleteStatus is Operations.ResourceRead<DeletionJobState>;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Export project metadata and assets\")\n  @extension(\"x-ms-long-running-operation\", true)\n  @action(\"export\")\n  @actionSeparator(\"/:\")\n  op export is Operations.ResourceAction<\n    ProjectMetadata,\n    ImportExportFormatParameter & AssetKindParameter,\n    AcceptedResponse & Azure.Core.Foundations.LongRunningStatusLocation\n  >;\n\n  @doc(\"Gets the status of an Export job, once job completes, returns the project metadata, and assets\")\n  op getExportStatus is Operations.ResourceRead<ExportJobState>;\n\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Import project assets\")\n  @extension(\"x-ms-long-running-operation\", true)\n  @action(\"import\")\n  @actionSeparator(\"/:\")\n  op `import` is Operations.ResourceAction<\n    ProjectMetadata,\n    ImportExportFormatParameter & AssetKindParameter,\n    AcceptedResponse & Azure.Core.Foundations.LongRunningStatusLocation\n  >;\n\n  @doc(\"Gets the status of an Import job\")\n  op getImportStatus is Operations.ResourceRead<JobState>;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  #suppress \"@azure-tools/typespec-azure-core/long-running-polling-operation-required\" \"This operation does not follow the standard long-running operation pattern.\"\n  @doc(\"Deploy project to production.\")\n  @put\n  op createDeployment is Azure.Core.Foundations.ResourceOperation<\n    ProjectDeployment,\n    {},\n    AcceptedResponse & Azure.Core.Foundations.LongRunningStatusLocation\n  >;\n\n  @doc(\"List all deployments of a project.\")\n  op listDeployments is Operations.ResourceList<ProjectDeployment>;\n\n  @doc(\"Gets the status of a Deploy job.\")\n  @get\n  op getDeploymentsJobStatus is Operations.ResourceRead<DeploymentJobState>;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @doc(\"List all the synonyms of a project.\")\n  @get\n  @route(\"projects/{projectName}/deployments/synonyms\")\n  op listSynonyms is Azure.Core.Foundations.Operation<\n    {\n      ...ProjectNamePathParameter;\n      ...StandardListQueryParameters;\n    },\n    Azure.Core.Page<SynonymAsset>\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/request-body-problem\" \"This is an existing service that cannot be changed.\"\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @doc(\"Create or update all the synonyms of a project.\")\n  @put\n  @route(\"projects/{projectName}/deployments/synonyms\")\n  op replaceSynonyms is Azure.Core.Foundations.Operation<\n    {\n      ...ProjectNamePathParameter;\n\n      @doc(\"The request body.\")\n      @body\n      body: SynonymAsset[];\n    },\n    Azure.Core.Page<SynonymAsset>\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @doc(\"List all the sources of a project.\")\n  @get\n  @route(\"projects/{projectName}/sources\")\n  op listSources is Azure.Core.Foundations.Operation<\n    {\n      ...ProjectNamePathParameter;\n      ...StandardListQueryParameters;\n    },\n    Azure.Core.Page<QnaSourceRecord>\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @doc(\"Updates the sources of a project.\")\n  @patch\n  @route(\"projects/{projectName}/sources\")\n  op updateSources is Azure.Core.Foundations.Operation<\n    {\n      ...ProjectNamePathParameter;\n\n      @doc(\"The request body.\")\n      @body\n      body: UpdateRecord<QnaSourceRecord>;\n    },\n    Azure.Core.Page<QnaSourceRecord>\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @doc(\"Gets the status of update sources job.\")\n  @get\n  @route(\"projects/{projectName}/sources/jobs/{jobId}\")\n  op getSourcesJobStatus is Azure.Core.Foundations.Operation<\n    {\n      ...ProjectNamePathParameter;\n      ...JobIdParameter;\n    },\n    JobMetadata\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @doc(\"List all the sources of a project.\")\n  @get\n  @route(\"projects/{projectName}/qnas\")\n  op listQuestionAndAnswers is Azure.Core.Foundations.Operation<\n    {\n      ...ProjectNamePathParameter;\n      ...StandardListQueryParameters;\n    },\n    Azure.Core.Page<QnaSourceRecord>\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @doc(\"Updates the sources of a project.\")\n  @patch\n  @route(\"projects/{projectName}/qnas\")\n  op updateQuestionAndAnswers is Azure.Core.Foundations.Operation<\n    {\n      ...ProjectNamePathParameter;\n\n      @doc(\"The request body.\")\n      @body\n      body: UpdateRecord<QnaRecord>;\n    },\n    Azure.Core.Page<QnaSourceRecord>\n  >;\n\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is an existing service that cannot be changed.\"\n  @doc(\"Gets the status of update sources job.\")\n  @get\n  @route(\"projects/{projectName}/qnas/jobs/{jobId}\")\n  op getQuestionAndAnswersJobStatus is Azure.Core.Foundations.Operation<\n    {\n      ...ProjectNamePathParameter;\n      ...JobIdParameter;\n    },\n    JobMetadata\n  >;\n\n  // TODO: ok resonse code is incorrect\n  @post\n  @doc(\"Update Active Learning feedback.\")\n  @action(\"feedback\")\n  @actionSeparator(\"/\")\n  op createFeedback is Operations.ResourceAction<ProjectMetadata, {}, NoContentResponse>;\n}\n\n// Model definitions\n\n@resource(\"projects\")\n@doc(\"Represents the project\")\nmodel ProjectMetadata {\n  @key\n  @doc(\"Name of the project\")\n  @visibility(\"read\")\n  projectName: string;\n\n  @doc(\"Description of the project.\")\n  description: string;\n}\n\n@doc(\"Parameters needed to create the project\")\nmodel CreateProjectOptions {\n  @doc(\"Description of the project\")\n  description?: string;\n\n  ...Language;\n\n  @doc(\"Resource enabled for multiple languages across projects or not\")\n  multilingualResource?: boolean;\n\n  @doc(\"Configurable settings of the Project\")\n  settings?: ProjectSettings;\n}\n\n@doc(\"Configurable settings of the Project\")\nmodel ProjectSettings {\n  @doc(\"Default Answer response when no good match is found in the knowledge base\")\n  defaultAnswer?: string;\n}\n\n@doc(\"Represents the job metadata\")\nmodel JobMetadata {\n  @key\n  @doc(\"The job ID.\")\n  @visibility(\"read\")\n  jobId: string;\n\n  @doc(\"When the job was created.\")\n  createdDateTime: utcDateTime;\n\n  @doc(\"When the job expires.\")\n  expirationDateTime?: utcDateTime;\n\n  @doc(\"When the job was last updated.\")\n  lastUpdatedDateTime: utcDateTime;\n\n  @doc(\"The job status.\")\n  status: JobStatus;\n}\n\n@doc(\"The job status.\")\nenum JobStatus {\n  @doc(\"The job has not started yet.\")\n  notStarted,\n\n  @doc(\"The job is running.\")\n  running,\n\n  @doc(\"The job has completed successfully.\")\n  succeeded,\n\n  @doc(\"The job has failed.\")\n  failed,\n\n  @doc(\"The job has been cancelled.\")\n  cancelled,\n\n  @doc(\"The job is cancelling.\")\n  cancelling,\n\n  @doc(\"The job is partially completed.\")\n  partiallyCompleted,\n}\n\n@doc(\"Job state represents the job metadata and any errors\")\n@resource(\"import/jobs\")\n@parentResource(ProjectMetadata)\nmodel JobState {\n  ...JobMetadata;\n  ...Errors;\n}\n\n@doc(\"URL to download the result of the Export Job\")\nmodel ExportJobResultUrl {\n  @doc(\"URL to download the result of the Export Job\")\n  resultUrl: string;\n}\n\n@doc(\"Export job status, project metadata, and assets.\")\n@resource(\"export/jobs\")\n@parentResource(ProjectMetadata)\nmodel ExportJobState {\n  ...JobState;\n  ...ExportJobResultUrl;\n}\n\n@doc(\"The state of a deletion job.\")\n@resource(\"projects/deletion-jobs\")\nmodel DeletionJobState {\n  ...JobState;\n}\n\n@resource(\"deployments\")\n@parentResource(ProjectMetadata)\n@doc(\"Project deployment details.\")\nmodel ProjectDeployment {\n  @key\n  @doc(\"Name of the deployment.\")\n  @visibility(\"read\")\n  deploymentName: string;\n\n  @doc(\"Represents the project last deployment date-time.\")\n  lastDeployedDateTime?: utcDateTime;\n}\n\n@doc(\"Job state represents the job metadata and any errors\")\n@resource(\"jobs\")\n@parentResource(ProjectDeployment)\nmodel DeploymentJobState {\n  ...JobMetadata;\n  ...Errors;\n}\n\n@doc(\"Collection of synonyms.\")\nmodel SynonymAsset is WordAlterations;\n\n@doc(\"Collection of word alterations.\")\nmodel WordAlterations {\n  @doc(\"Collection of word alterations.\")\n  alterations: string[];\n}\n\n@doc(\"Custom source record with last updated date-time.\")\nmodel QnaSourceRecord {\n  ...QnaSourceMetadata;\n\n  @doc(\"The time of the last deployment.\")\n  lastDeployedDateTime?: utcDateTime;\n}\n\n@doc(\"Input source file or url details.\")\nmodel QnaSourceMetadata {\n  @doc(\"Friendly name of the Source.\")\n  displayName?: string;\n\n  @doc(\"Unique source identifier. Name of the file if it's a 'file' source; otherwise, the complete URL if it's a 'url' source.\")\n  source?: string;\n\n  @doc(\"URI location for the file or url.\")\n  sourceUri: string;\n\n  @doc(\"The source kind.\")\n  sourceKind: QnaSourceKind;\n\n  @doc(\"The content structure kind.\")\n  contentStructureKind: SourceContentStructureKind;\n}\n\n@doc(\"Supported source types.\")\nenum QnaSourceKind {\n  @doc(\"File source\")\n  file,\n\n  @doc(\"Url source\")\n  url,\n}\n\n@doc(\"Content structure type for sources.\")\nenum SourceContentStructureKind {\n  @doc(\"The source content is unstructured\")\n  unstructured,\n}\n\n@friendlyName(\"{name}UpdateRecord\", T)\nmodel UpdateRecord<T> {\n  updateOperation: UpdateOperationKind;\n  value: T;\n}\n\n@doc(\"Update source record.\")\nmodel UpdateQnaSourceRecord {\n  ...QnaSourceMetadata;\n\n  @doc(\"Boolean flag used to refresh data from the Source.\")\n  refreshSourceOptions: boolean;\n}\n\n@doc(\"The kind of an update operation.\")\nenum UpdateOperationKind {\n  @doc(\"Addition operation\")\n  add,\n\n  @doc(\"Deletion operation\")\n  delete,\n\n  @doc(\"Replace operation\")\n  replace,\n}\n\n@doc(\"Question and answer record\")\nmodel QnaRecord {\n  @doc(\"The record ID.\")\n  id: int32;\n\n  @doc(\"The answer.\")\n  answer: string;\n\n  @doc(\"The source.\")\n  source: string;\n\n  @doc(\"The questions.\")\n  questions: string[];\n\n  @doc(\"The metadata.\")\n  metadata: string;\n\n  @doc(\"The dialog.\")\n  dialog: QnaDialog;\n\n  @doc(\"The active learning suggestions.\")\n  activeLearningSuggestions: SuggestedQuestionsCluster;\n}\n\n@doc(\"The details of a suggested questions cluster.\")\nmodel SuggestedQuestionsCluster {\n  @doc(\"Active Learning suggested questions cluster details.\")\n  clusterHead: string;\n\n  @doc(\"List of all suggested questions for the QnA.\")\n  suggestedQuestions: SuggestedQuestion;\n}\n\n@doc(\"A dialog to be displayed to the user.\")\nmodel QnaDialog {\n  @doc(\"If true, is context only.\")\n  isContextOnly: boolean;\n\n  @doc(\"The prompts to display.\")\n  prompts: QnaPrompt[];\n}\n\n@doc(\"Details of a QnA prompt.\")\nmodel QnaPrompt {\n  @doc(\"The display order.\")\n  displayOrder: int16;\n\n  @doc(\"The QnA ID.\")\n  qnaId: int32;\n\n  @doc(\"The QnA record.\")\n  qna: QnaRecord;\n\n  @doc(\"The display text.\")\n  displayText: string;\n}\n\n@doc(\"Question suggested by the Active Learning feature.\")\nmodel SuggestedQuestion {\n  @doc(\"Question suggested by the Active Learning feature.\")\n  question: string;\n\n  @doc(\"The number of times the question was suggested explicitly by the user.\")\n  userSuggestedCount: int32;\n\n  @doc(\"The number of times the question was suggested automatically by the Active Learning algorithm.\")\n  autoSuggestedCount: int32;\n}\n\n@doc(\"The active learning feedback.\")\nmodel ActiveLearningFeedback {\n  @doc(\"A list of Feedback Records for Active Learning.\")\n  records?: FeedbackRecord[];\n}\n\n@doc(\"A feedback record.\")\nmodel FeedbackRecord {\n  @doc(\"Unique identifier of the user.\")\n  userId?: string;\n\n  @doc(\"User suggested question for the QnA.\")\n  userQuestion?: string;\n\n  @doc(\"Unique ID of the QnA.\")\n  qnaId?: int32;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\languageqna\\Raw\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\languageqna\\Raw\\main.tsp"}, {"file_content": "// Based on https://github.com/Azure/azure-rest-api-specs/blob/main/specification/search/data-plane/Azure.Search/preview/2021-04-30-Preview/searchindex.json\n\n// (PR TODO: I think we have issue for arbitrary JSON extension/object literals, but can't find it)\n// ISSUE: Can't set x-ms-code-generation-settings: https://github.com/Azure/typespec-azure/issues/1132\n// ISSUE: Can't set x-ms-parameter-grouping: https://github.com/Azure/typespec-azure/issues/1000\n// ISSUE: Can't set service description: https://github.com/Azure/typespec-azure/issues/1032\n// ISSUE: @extension on parameter doesn't work: https://github.com/Azure/typespec-azure/issues/1121\n\nimport \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\nimport \"@azure-tools/typespec-azure-core\";\n\n@useAuth(\n  ApiKeyAuth<ApiKeyLocation.header, \"api-key\"> | OAuth2Auth<[\n    {\n      type: OAuth2FlowType.implicit,\n      authorizationUrl: \"https://login.contoso.com/common/oauth2/v2.0/authorize\",\n      scopes: [\"https://cognitiveservices.azure.com/.default\"],\n    }\n  ]>\n)\n@service({\n  title: \"SearchIndexClient\",\n  version: \"2021-04-30-Preview\",\n})\nnamespace Azure.SearchIndex;\n\nusing Azure.Core;\nusing TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\n#suppress \"@azure-tools/typespec-azure-core/use-extensible-enum\" \"Existing service.\"\n@fixed\n@doc(\"Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context in producing autocomplete terms.\")\nenum AutocompleteMode {\n  @doc(\"Only one term is suggested. If the query has two terms, only the last term is completed. For example, if the input is 'washington medic', the suggested terms could include 'medicaid', 'medicare', and 'medicine'.\")\n  OneTerm: \"oneTerm\",\n\n  @doc(\"Matching two-term phrases in the index will be suggested. For example, if the inpu.t is 'medic', the suggested terms could include 'medicare coverage' and 'medical assistant'.\")\n  TwoTerms: \"twoTerms\",\n\n  @doc(\"Completes the last term in a query with two or more terms, where the last two terms are a phrase that exists in the index. For example, if the input is 'washington medic', the suggested terms could include 'washington medicaid' and 'washington medical'.\")\n  OneTermWithContext: \"oneTermWithContext\",\n}\n\n@doc(\"This parameter is only valid if the query type is 'semantic'. If set, the query returns answers extracted from key passages in the highest ranked documents. The number of answers returned can be configured by appending the pipe character '|' followed by the 'count-<number of answers>' option after the answers parameter value, such as 'extractive|count-3'. Default count is 1.\")\nenum QueryAnswerType {\n  @doc(\"Do not return answers for the query.\")\n  None: \"none\",\n\n  @doc(\"Extracts answer candidates from the contents of the documents returned in response to a query expressed as a question in natural language.\")\n  Extractive: \"extractive\",\n}\n\n@doc(\"This parameter is only valid if the query type is 'semantic'. If set, the query returns captions extracted from key passages in the highest ranked documents. When s is set to 'extractive', highlighting is enabled by default, and can be configured by appending the pipe character '|' followed by the 'highlight-<true/false>' option, such as 'extractive|highlight-true'. Defaults to 'None'.\")\nenum QueryCaptionType {\n  @doc(\"Do not return captions for the query.\")\n  None: \"none\",\n\n  @doc(\"Extracts captions from the matching documents that contain passages relevant to the search query.\")\n  Extractive: \"extractive\",\n}\n\n@doc(\"The language of the query.\")\nenum QueryLanguage {\n  @doc(\"Query language not specified.\")\n  None: \"none\",\n\n  @doc(\"Query language value for English (United States).\")\n  EnUs: \"en-us\",\n\n  @doc(\"Query language value for English (Great Britain).\")\n  EnGb: \"en-gb\",\n\n  @doc(\"Query language value for English (India).\")\n  EnIn: \"en-in\",\n\n  @doc(\"Query language value for English (Canada).\")\n  EnCa: \"en-ca\",\n\n  @doc(\"Query language value for English (Australia).\")\n  EnAu: \"en-au\",\n\n  @doc(\"Query language value for French (France).\")\n  FrFr: \"fr-fr\",\n\n  @doc(\"Query language value for French (Canada).\")\n  FrCa: \"fr-ca\",\n\n  @doc(\"Query language value for German (Germany).\")\n  DeDe: \"de-de\",\n\n  @doc(\"Query language value for Spanish (Spain).\")\n  EsEs: \"es-es\",\n\n  @doc(\"Query language value for Spanish (Mexico).\")\n  EsMx: \"es-mx\",\n\n  @doc(\"Query language value for Chinese (China).\")\n  ZhCn: \"zh-cn\",\n\n  @doc(\"Query language value for Chinese (Taiwan).\")\n  ZhTw: \"zh-tw\",\n\n  @doc(\"Query language value for Portuguese (Brazil).\")\n  PtBr: \"pt-br\",\n\n  @doc(\"Query language value for Portuguese (Portugal).\")\n  PtPt: \"pt-pt\",\n\n  @doc(\"Query language value for Italian (Italy).\")\n  ItIt: \"it-it\",\n\n  @doc(\"Query language value for Japanese (Japan).\")\n  JaJp: \"ja-jp\",\n\n  @doc(\"Query language value for Korean (Korea).\")\n  KoKr: \"ko-kr\",\n\n  @doc(\"Query language value for Russian (Russia).\")\n  RuRu: \"ru-ru\",\n\n  @doc(\"Query language value for Czech (Czech Republic).\")\n  CsCz: \"cs-cz\",\n\n  @doc(\"Query language value for Dutch (Belgium).\")\n  NlBe: \"nl-be\",\n\n  @doc(\"Query language value for Dutch (Netherlands).\")\n  NlNl: \"nl-nl\",\n\n  @doc(\"Query language value for Hungarian (Hungary).\")\n  HuHu: \"hu-hu\",\n\n  @doc(\"Query language value for Polish (Poland).\")\n  PlPl: \"pl-pl\",\n\n  @doc(\"Query language value for Swedish (Sweden).\")\n  SvSe: \"sv-se\",\n\n  @doc(\"Query language value for Turkish (Turkey).\")\n  TrTr: \"tr-tr\",\n\n  @doc(\"Query language value for Hindi (India).\")\n  HiIn: \"hi-in\",\n\n  @doc(\"Query language value for Arabic (Saudi Arabia).\")\n  ArSa: \"ar-sa\",\n\n  @doc(\"Query language value for Arabic (Egypt).\")\n  ArEg: \"ar-eg\",\n\n  @doc(\"Query language value for Arabic (Morocco).\")\n  ArMa: \"ar-ma\",\n\n  @doc(\"Query language value for Arabic (Kuwait).\")\n  ArKw: \"ar-kw\",\n\n  @doc(\"Query language value for Arabic (Jordan).\")\n  ArJo: \"ar-jo\",\n\n  @doc(\"Query language value for Danish (Denmark).\")\n  DaDk: \"da-dk\",\n\n  @doc(\"Query language value for Norwegian (Norway).\")\n  NoNo: \"no-no\",\n\n  @doc(\"Query language value for Bulgarian (Bulgaria).\")\n  BgBg: \"bg-bg\",\n\n  @doc(\"Query language value for Croatian (Croatia).\")\n  HrHr: \"hr-hr\",\n\n  @doc(\"Query language value for Croatian (Bosnia and Herzegovina).\")\n  HrBa: \"hr-ba\",\n\n  @doc(\"Query language value for Malay (Malaysia).\")\n  MsMy: \"ms-my\",\n\n  @doc(\"Query language value for Malay (Brunei Darussalam).\")\n  MsBn: \"ms-bn\",\n\n  @doc(\"Query language value for Slovenian (Slovenia).\")\n  SlSl: \"sl-sl\",\n\n  @doc(\"Query language value for Tamil (India).\")\n  TaIn: \"ta-in\",\n\n  @doc(\"Query language value for Vietnamese (Viet Nam).\")\n  ViVn: \"vi-vn\",\n\n  @doc(\"Query language value for Greek (Greece).\")\n  ElGr: \"el-gr\",\n\n  @doc(\"Query language value for Romanian (Romania).\")\n  RoRo: \"ro-ro\",\n\n  @doc(\"Query language value for Icelandic (Iceland).\")\n  IsIs: \"is-is\",\n\n  @doc(\"Query language value for Indonesian (Indonesia).\")\n  IdId: \"id-id\",\n\n  @doc(\"Query language value for Thai (Thailand).\")\n  ThTh: \"th-th\",\n\n  @doc(\"Query language value for Lithuanian (Lithuania).\")\n  LtLt: \"lt-lt\",\n\n  @doc(\"Query language value for Ukrainian (Ukraine).\")\n  UkUa: \"uk-ua\",\n\n  @doc(\"Query language value for Latvian (Latvia).\")\n  LvLv: \"lv-lv\",\n\n  @doc(\"Query language value for Estonian (Estonia).\")\n  EtEe: \"et-ee\",\n\n  @doc(\"Query language value for Catalan (Spain).\")\n  CaEs: \"ca-es\",\n\n  @doc(\"Query language value for Finnish (Finland).\")\n  FiFi: \"fi-fi\",\n\n  @doc(\"Query language value for Serbian (Bosnia and Herzegovina).\")\n  SrBa: \"sr-ba\",\n\n  @doc(\"Query language value for Serbian (Montenegro).\")\n  SrMe: \"sr-me\",\n\n  @doc(\"Query language value for Serbian (Serbia).\")\n  SrRs: \"sr-rs\",\n\n  @doc(\"Query language value for Slovak (Slovakia).\")\n  SkSk: \"sk-sk\",\n\n  @doc(\"Query language value for Norwegian (Norway).\")\n  NbNo: \"nb-no\",\n\n  @doc(\"Query language value for Armenian (Armenia).\")\n  HyAm: \"hy-am\",\n\n  @doc(\"Query language value for Bengali (India).\")\n  BnIn: \"bn-in\",\n\n  @doc(\"Query language value for Basque (Spain).\")\n  EuEs: \"eu-es\",\n\n  @doc(\"Query language value for Galician (Spain).\")\n  GlEs: \"gl-es\",\n\n  @doc(\"Query language value for Gujarati (India).\")\n  GuIn: \"gu-in\",\n\n  @doc(\"Query language value for Hebrew (Israel).\")\n  HeIl: \"he-il\",\n\n  @doc(\"Query language value for Irish (Ireland).\")\n  GaIe: \"ga-ie\",\n\n  @doc(\"Query language value for Kannada (India).\")\n  KnIn: \"kn-in\",\n\n  @doc(\"Query language value for Malayalam (India).\")\n  MlIn: \"ml-in\",\n\n  @doc(\"Query language value for Marathi (India).\")\n  MrIn: \"mr-in\",\n\n  @doc(\"Query language value for Persian (U.A.E.).\")\n  FaAe: \"fa-ae\",\n\n  @doc(\"Query language value for Punjabi (India).\")\n  PaIn: \"pa-in\",\n\n  @doc(\"Query language value for Telugu (India).\")\n  TeIn: \"te-in\",\n\n  @doc(\"Query language value for Urdu (Pakistan).\")\n  UrPk: \"ur-pk\",\n}\n\n@doc(\"Improve search recall by spell-correcting individual search query terms.\")\nenum QuerySpellerType {\n  @doc(\"Speller not enabled.\")\n  None: \"none\",\n\n  @doc(\"Speller corrects individual query terms using a static lexicon for the language specified by the queryLanguage parameter.\")\n  Lexicon: \"lexicon\",\n}\n\n#suppress \"@azure-tools/typespec-azure-core/use-extensible-enum\" \"Existing service.\"\n@fixed\n@doc(\"Specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax and 'semantic' if query syntax is not needed.\")\nenum QueryType {\n  @doc(\"Uses the simple query syntax for searches. Search text is interpreted using a simple query language that allows for symbols such as +, * and \\\"\\\". Queries are evaluated across all searchable fields by default, unless the searchFields parameter is specified.\")\n  Simple: \"simple\",\n\n  @doc(\"Uses the full Lucene query syntax for searches. Search text is interpreted using the Lucene query language which allows field-specific and weighted searches, as well as other advanced features.\")\n  Full: \"full\",\n\n  @doc(\"Best suited for queries expressed in natural language as opposed to keywords. Improves precision of search results by re-ranking the top search results using a ranking model trained on the Web corpus.\")\n  Semantic: \"semantic\",\n}\n\n#suppress \"@azure-tools/typespec-azure-core/use-extensible-enum\" \"Existing service.\"\n@fixed\n@doc(\"Index action type\")\nenum IndexActionType {\n  @doc(\"Inserts the document into the index if it is new and updates it if it exists. All fields are replaced in the update case.\")\n  Upload: \"upload\",\n\n  @doc(\"Merges the specified field values with an existing document. If the document does not exist, the merge will fail. Any field you specify in a merge will replace the existing field in the document. This also applies to collections of primitive and complex types.\")\n  Merge: \"merge\",\n\n  @doc(\"Behaves like merge if a document with the given key already exists in the index. If the document does not exist, it behaves like upload with a new document.\")\n  MergeOrUpload: \"mergeOrUpload\",\n\n  @doc(\"Removes the specified document from the index. Any field you specify in a delete operation other than the key field will be ignored. If you want to remove an individual field from a document, use merge instead and set the field explicitly to null.\")\n  Delete: \"delete\",\n}\n\n#suppress \"@azure-tools/typespec-azure-core/use-extensible-enum\" \"Existing service.\"\n@fixed\n@doc(\"Specifies whether any or all of the search terms must be matched in order to count the document as a match.\")\nenum SearchMode {\n  @doc(\"Any of the search terms must be matched in order to count the document as a match.\")\n  Any: \"any\",\n\n  @doc(\"All of the search terms must be matched in order to count the document as a match.\")\n  All: \"all\",\n}\n\n#suppress \"@azure-tools/typespec-azure-core/use-extensible-enum\" \"Existing service.\"\n@fixed\n@doc(\"A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency. The default is 'local'. Use 'global' to aggregate scoring statistics globally before scoring. Using global scoring statistics can increase latency of search queries.\")\nenum ScoringStatistics {\n  @doc(\"The scoring statistics will be calculated locally for lower latency.\")\n  Local: \"local\",\n\n  @doc(\"The scoring statistics will be calculated globally for more consistent scoring.\")\n  Global: \"global\",\n}\n\n@doc(\"Api Version Parameter\")\nmodel ApiVersionParameter {\n  #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is the name of a query parameter.\"\n  @doc(\"Client Api Version.\")\n  @query\n  `api-version`: string;\n}\n\n@doc(\"Client Request Id Parameter\")\nmodel ClientRequestIdParameter {\n  #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is the name of a header.\"\n  @doc(\"The tracking ID sent with the request to help with debugging.\")\n  @extension(\"x-ms-client-id\", true)\n  @header\n  `x-ms-client-request-id`?: string; // ISSUE: Can't set format=uuid: https://github.com/microsoft/typespec/issues/153\n}\n\n// ISSUE: Can't allow additionalProperties: https://github.com/Azure/typespec-azure/issues/997\n@doc(\"An answer is a text passage extracted from the contents of the most relevant documents that matched the query. Answers are extracted from the top search results. Answer candidates are scored and the top answers are selected.\")\nmodel AnswerResult {\n  @doc(\"The score value represents how relevant the answer is to the the query relative to other answers returned for the query.\")\n  @visibility(\"read\")\n  score?: float64;\n\n  @doc(\"The key of the document the answer was extracted from.\")\n  @visibility(\"read\")\n  key?: string;\n\n  @doc(\"The text passage extracted from the document contents as the answer.\")\n  @visibility(\"read\")\n  text?: string;\n\n  #suppress \"@azure-tools/typespec-azure-core/no-nullable\" \"Existing service\"\n  @doc(\"Same text passage as in the Text property with highlighted text phrases most relevant to the query.\")\n  @visibility(\"read\")\n  highlights?: string | null;\n}\n\n@doc(\"The result of Autocomplete requests.\")\nmodel AutocompleteItem {\n  @doc(\"The completed term.\")\n  @visibility(\"read\")\n  text: string;\n\n  @doc(\"The query along with the completed term.\")\n  @visibility(\"read\")\n  queryPlusText: string;\n}\n\n@doc(\"The result of Autocomplete query.\")\nmodel AutocompleteResult {\n  @doc(\"A value indicating the percentage of the index that was considered by the autocomplete request, or null if minimumCoverage was not specified in the request.\")\n  @projectedName(\"json\", \"@search.coverage\")\n  @visibility(\"read\")\n  coverage?: float64;\n\n  @doc(\"The list of returned Autocompleted items.\")\n  @projectedName(\"json\", \"value\")\n  @visibility(\"read\")\n  results: AutocompleteItem[];\n}\n\n@doc(\"Parameters for fuzzy matching, and other autocomplete query behaviors.\")\nmodel AutocompleteRequest {\n  @doc(\"The search text on which to base autocomplete results.\")\n  @projectedName(\"json\", \"search\")\n  searchText: string;\n\n  @doc(\"Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context while producing auto-completed terms.\")\n  autocompleteMode?: AutocompleteMode;\n\n  @doc(\"An OData expression that filters the documents used to produce completed terms for the Autocomplete result.\")\n  filter?: string;\n\n  @doc(\"A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will autocomplete terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.\")\n  @projectedName(\"json\", \"fuzzy\")\n  useFuzzyMatching?: boolean;\n\n  @doc(\"A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled.\")\n  highlightPostTag?: string;\n\n  @doc(\"A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled.\")\n  highlightPreTag?: string;\n\n  @doc(\"A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.\")\n  minimumCoverage?: float64;\n\n  @doc(\"The comma-separated list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester.\")\n  searchFields?: string;\n\n  @doc(\"The name of the suggester as specified in the suggesters collection that's part of the index definition.\")\n  suggesterName: string;\n\n  @doc(\"The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5.\")\n  top?: int32;\n}\n\n// ISSUE: Can't allow additionalProperties: https://github.com/Azure/typespec-azure/issues/997\n@doc(\"Captions are the most representative passages from the document relatively to the search query. They are often used as document summary. Captions are only returned for queries of type 'semantic'..\")\nmodel CaptionResult {\n  #suppress \"@azure-tools/typespec-azure-core/no-nullable\" \"Existing service\"\n  @doc(\"Same text passage as in the Text property with highlighted phrases most relevant to the query.\")\n  @visibility(\"read\")\n  highlights?: string | null;\n\n  @doc(\"A representative text passage extracted from the document most relevant to the search query.\")\n  @visibility(\"read\")\n  text?: string;\n}\n\n// ISSUE: Can't allow additionalProperties: https://github.com/Azure/typespec-azure/issues/997\n@doc(\"A single bucket of a facet query result. Reports the number of documents with a field value falling within a particular range or having a particular value or interval.\")\nmodel FacetResult {\n  @doc(\"The approximate count of documents falling within the bucket described by this facet.\")\n  @visibility(\"read\")\n  count?: int64;\n}\n\n@doc(\"Response containing search results from an index.\")\nmodel SearchDocumentsResult {\n  @doc(\"The total count of results found by the search operation, or null if the count was not requested. If present, the count may be greater than the number of results in this response. This can happen if you use the $top or $skip parameters, or if Azure Cognitive Search can't return all the requested documents in a single Search response.\")\n  @projectedName(\"json\", \"@odata.count\")\n  @visibility(\"read\")\n  count?: int64;\n\n  @doc(\"Continuation URL returned when Azure Cognitive Search can't return all the requested results in a single Search response. You can use this URL to formulate another GET or POST Search request to get the next part of the search response. Make sure to use the same verb (GET or POST) as the request that produced this response.\")\n  @projectedName(\"json\", \"@odata.nextLink\")\n  @visibility(\"read\")\n  nextLink?: string;\n\n  #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing service.\"\n  @doc(\"A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not specified in the request.\")\n  @visibility(\"read\")\n  `@search.coverage`?: float64;\n\n  @doc(\"The facet query results for the search operation, organized as a collection of buckets for each faceted field; null if the query did not include any facet expressions.\")\n  @projectedName(\"json\", \"@search.facets\")\n  @visibility(\"read\")\n  facets?: Record<FacetResult[]>;\n\n  @doc(\"The answers query results for the search operation; null if the answers query parameter was not specified or set to 'none'.\")\n  @projectedName(\"json\", \"@search.answers\")\n  @visibility(\"read\")\n  answers?: AnswerResult[];\n\n  @doc(\"Continuation JSON payload returned when Azure Cognitive Search can't return all the requested results in a single Search response. You can use this JSON along with @odata.nextLink to formulate another POST Search request to get the next part of the search response.\")\n  @projectedName(\"json\", \"@search.nextPageParameters\")\n  @visibility(\"read\")\n  nextPageParameters?: SearchRequest;\n\n  @doc(\"The sequence of results returned by the query.\")\n  @projectedName(\"json\", \"value\")\n  @visibility(\"read\")\n  results: SearchResult[];\n}\n\n@doc(\"Describes an error condition for the Azure Cognitive Search API.\")\n@error\nmodel SearchError {\n  @doc(\"One of a server-defined set of error codes.\")\n  @visibility(\"read\")\n  code?: string;\n\n  @doc(\"A human-readable representation of the error.\")\n  @visibility(\"read\")\n  message: string;\n\n  @doc(\"An array of details about specific errors that led to this reported error.\")\n  @visibility(\"read\")\n  details?: SearchError[];\n}\n\n// ISSUE: Can't allow additionalProperties: https://github.com/Azure/typespec-azure/issues/997\n@doc(\"Contains a document found by a search query, plus associated metadata.\")\nmodel SearchResult {\n  #suppress \"@azure-tools/typespec-azure-core/no-nullable\" \"Existing service\"\n  @doc(\"Captions are the most representative passages from the document relatively to the search query. They are often used as document summary. Captions are only returned for queries of type 'semantic'.\")\n  @projectedName(\"json\", \"@search.captions\")\n  @visibility(\"read\")\n  captions?: CaptionResult[] | null;\n\n  @doc(\"Text fragments from the document that indicate the matching search terms, organized by each applicable field; null if hit highlighting was not enabled for the query.\")\n  @projectedName(\"json\", \"@search.highlights\")\n  @visibility(\"read\")\n  highlights?: Record<string[]>;\n\n  #suppress \"@azure-tools/typespec-azure-core/no-nullable\" \"Existing service\"\n  @doc(\"The relevance score computed by the semantic ranker for the top search results. Search results are sorted by the RerankerScore first and then by the Score. RerankerScore is only returned for queries of type 'semantic'.\")\n  @projectedName(\"json\", \"@search.rerankerScore\")\n  @visibility(\"read\")\n  rerankerScore?: float64 | null;\n\n  @doc(\"The relevance score of the document compared to other documents returned by the query.\")\n  @projectedName(\"json\", \"@search.score\")\n  @visibility(\"read\")\n  score: float64;\n}\n\n@doc(\"Parameters for filtering, sorting, faceting, paging, and other search query behaviors.\")\nmodel SearchRequest {\n  @doc(\"A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.\")\n  @projectedName(\"json\", \"count\")\n  includeTotalResultCount?: boolean;\n\n  @doc(\"The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.\")\n  facets?: string[]; // ISSUE: Can't set externalDocs: https://github.com/Azure/typespec-azure/issues/1035\n\n  @doc(\"The OData $filter expression to apply to the search query.\")\n  filter?: string; // ISSUE: Can't set externalDocs: https://github.com/Azure/typespec-azure/issues/1035\n\n  @doc(\"The comma-separated list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.\")\n  @projectedName(\"json\", \"highlight\")\n  highlightFields?: string;\n\n  @doc(\"A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &lt;/em&gt;.\")\n  highlightPostTag?: string;\n\n  @doc(\"A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &lt;em&gt;.\")\n  highlightPreTag?: string;\n\n  @doc(\"A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100.\")\n  minimumCoverage?: float64;\n\n  @doc(\"The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.\")\n  @projectedName(\"json\", \"orderby\")\n  orderBy?: string;\n\n  @doc(\"A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax.\")\n  queryType?: QueryType;\n\n  @doc(\"A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency. The default is 'local'. Use 'global' to aggregate scoring statistics globally before scoring. Using global scoring statistics can increase latency of search queries.\")\n  scoringStatistics?: ScoringStatistics;\n\n  @doc(\"A value to be used to create a sticky session, which can help getting more consistent results. As long as the same sessionId is used, a best-effort attempt will be made to target the same replica set. Be wary that reusing the same sessionID values repeatedly can interfere with the load balancing of the requests across replicas and adversely affect the performance of the search service. The value used as sessionId cannot start with a '_' character.\")\n  sessionId?: string;\n\n  @doc(\"The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation' the parameter string would be \\\"mylocation--122.2,44.8\\\" (without the quotes).\")\n  scoringParameters?: string[]; // ISSUE: Can't set collectionFormat: https://github.com/Azure/typespec-azure/issues/1031\n\n  @doc(\"The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.\")\n  scoringProfile?: string;\n\n  @doc(\"The name of a semantic configuration that will be used when processing documents for queries of type semantic.\")\n  semanticConfiguration?: string;\n\n  @doc(\"A full-text search query expression; Use \\\"*\\\" or omit this parameter to match all documents.\")\n  @projectedName(\"json\", \"search\")\n  searchText?: string;\n\n  @doc(\"The comma-separated list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence over any field names listed in this parameter.\")\n  searchFields?: string;\n\n  @doc(\"A value that specifies whether any or all of the search terms must be matched in order to count the document as a match.\")\n  searchMode?: SearchMode;\n\n  @doc(\"A value that specifies the language of the search query.\")\n  queryLanguage?: QueryLanguage;\n\n  @doc(\"A value that specified the type of the speller to use to spell-correct individual search query terms.\")\n  speller?: QuerySpellerType;\n\n  @doc(\"A value that specifies whether answers should be returned as part of the search response.\")\n  answers?: QueryAnswerType;\n\n  @doc(\"The comma-separated list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.\")\n  select?: string;\n\n  @doc(\"The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use skip due to this limitation, consider using orderby on a totally-ordered key and filter with a range query instead.\")\n  skip?: int32;\n\n  @doc(\"The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be used to issue another Search request for the next page of results.\")\n  top?: int32;\n\n  @doc(\"A value that specifies whether captions should be returned as part of the search response.\")\n  captions?: QueryCaptionType;\n\n  @doc(\"The comma-separated list of field names used for semantic search.\")\n  semanticFields?: string;\n}\n\n// ISSUE: Can't allow additionalProperties: https://github.com/Azure/typespec-azure/issues/997\n@doc(\"Represents an index action that operates on a document.\")\nmodel IndexAction {\n  @doc(\"The operation to perform on a document in an indexing batch.\")\n  @projectedName(\"json\", \"@search.action\")\n  actiontype?: IndexActionType;\n}\n\n@doc(\"Contains a batch of document write actions to send to the index.\")\nmodel IndexBatch {\n  @doc(\"The actions in the batch.\")\n  @projectedName(\"json\", \"value\")\n  actions: IndexAction[];\n}\n\n@doc(\"Response containing the status of operations for all documents in the indexing request.\")\nmodel IndexDocumentsResult {\n  @doc(\"The list of status information for each document in the indexing request.\")\n  @projectedName(\"json\", \"value\")\n  @visibility(\"read\")\n  results: IndexingResult[];\n}\n\n@doc(\"Status of an indexing operation for a single document.\")\nmodel IndexingResult {\n  @doc(\"The key of a document that was in the indexing request.\")\n  @visibility(\"read\")\n  key: string;\n\n  @doc(\"The error message explaining why the indexing operation failed for the document identified by the key; null if indexing succeeded.\")\n  @visibility(\"read\")\n  errorMessage?: string;\n\n  @doc(\"A value indicating whether the indexing operation succeeded for the document identified by the key.\")\n  @projectedName(\"json\", \"status\")\n  @visibility(\"read\")\n  succeeded: boolean;\n\n  @doc(\"The status code of the indexing operation. Possible values include: 200 for a successful update or delete, 201 for successful document creation, 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy.\")\n  @visibility(\"read\")\n  statusCode: int32;\n}\n\n@doc(\"Response containing suggestion query results from an index.\")\nmodel SuggestDocumentsResult {\n  @doc(\"The sequence of results returned by the query.\")\n  @projectedName(\"json\", \"value\")\n  @visibility(\"read\")\n  results: SuggestResult[];\n\n  @doc(\"A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not set in the request.\")\n  @projectedName(\"json\", \"@search.coverage\")\n  @visibility(\"read\")\n  coverage?: float64;\n}\n\n// ISSUE: Can't allow additionalProperties: https://github.com/Azure/typespec-azure/issues/997\n@doc(\"A result containing a document found by a suggestion query, plus associated metadata.\")\nmodel SuggestResult {\n  @doc(\"The text of the suggestion result.\")\n  @projectedName(\"json\", \"@search.text\")\n  @visibility(\"read\")\n  text: string;\n}\n\n@doc(\"Parameters for filtering, sorting, fuzzy matching, and other suggestions query behaviors.\")\nmodel SuggestRequest {\n  // ISSUE: Can't set externalDocs: https://github.com/Azure/typespec-azure/issues/1035\n  @doc(\"An OData expression that filters the documents considered for suggestions.\")\n  filter?: string;\n\n  @doc(\"A value indicating whether to use fuzzy matching for the suggestion query. Default is false. When set to true, the query will find suggestions even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestion searches are slower and consume more resources.\")\n  @projectedName(\"json\", \"fuzzy\")\n  useFuzzyMatching?: boolean;\n\n  @doc(\"A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled.\")\n  highlightPostTag?: string;\n\n  @doc(\"A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled.\")\n  highlightPreTag?: string;\n\n  @doc(\"A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestion query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.\")\n  minimumCoverage?: float64;\n\n  @doc(\"The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.\")\n  @projectedName(\"json\", \"orderby\")\n  orderBy?: string;\n\n  @doc(\"The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.\")\n  @projectedName(\"json\", \"search\")\n  searchText: string;\n\n  @doc(\"The comma-separated list of field names to search for the specified search text. Target fields must be included in the specified suggester.\")\n  searchFields?: string;\n\n  @doc(\"The comma-separated list of fields to retrieve. If unspecified, only the key field will be included in the results.\")\n  select?: string;\n\n  @doc(\"The name of the suggester as specified in the suggesters collection that's part of the index definition.\")\n  suggesterName: string;\n\n  @doc(\"The number of suggestions to retrieve. This must be a value between 1 and 100. The default is 5.\")\n  top?: int32;\n}\n\n#suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"Existing operation.\"\n@tag(\"Documents\")\n@route(\"/docs\")\ninterface Documents {\n  @doc(\"Queries the number of documents in the index.\")\n  @get\n  @route(\"$count\")\n  getCount(...ApiVersionParameter, ...ClientRequestIdParameter): int64 | SearchError;\n\n  @doc(\"Searches for documents in the index.\")\n  @get\n  getSearch(\n    @doc(\"A full-text search query expression; Use \\\"*\\\" or omit this parameter to match all documents.\")\n    @query(\"search\")\n    searchText?: string,\n\n    @doc(\"A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.\")\n    @query(\"$count\")\n    includeTotalResultCount?: boolean,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.\")\n    @query({\n      name: \"facet\",\n      format: \"multi\",\n    })\n    facets?: string[], // ISSUE: Can't set collectionFormat: https://github.com/Azure/typespec-azure/issues/1031\n\n    #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing operation.\"\n    @doc(\"The OData $filter expression to apply to the search query.\")\n    @query\n    $filter?: string,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"The list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.\")\n    @query({\n      name: \"highlight\",\n      format: \"multi\",\n    })\n    highlightFields?: string[],\n\n    @doc(\"A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &lt;/em&gt;.\")\n    @query\n    highlightPostTag?: string,\n\n    @doc(\"A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &lt;em&gt;.\")\n    @query\n    highlightPreTag?: string,\n\n    @doc(\"A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100.\")\n    @query\n    minimumCoverage?: float64,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.\")\n    @query({\n      name: \"$orderBy\",\n      format: \"multi\",\n    })\n    orderBy?: string[],\n\n    @doc(\"A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax.\")\n    @query\n    queryType?: QueryType,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation' the parameter string would be \\\"mylocation--122.2,44.8\\\" (without the quotes).\")\n    @query({\n      name: \"scoringParameter\",\n      format: \"multi\",\n    })\n    scoringParameters?: string[], // ISSUE: Can't set collectionFormat: https://github.com/Azure/typespec-azure/issues/1031\n\n    @doc(\"The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.\")\n    @query\n    scoringProfile?: string,\n\n    @doc(\"The name of the semantic configuration that lists which fields should be used for semantic ranking, captions, highlights, and answers\")\n    @query\n    semanticConfiguration?: string,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"The list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence over any field names listed in this parameter.\")\n    @query({\n      format: \"multi\",\n    })\n    searchFields?: string[],\n\n    @doc(\"The language of the query.\")\n    @query\n    queryLanguage?: QueryLanguage,\n\n    @doc(\"Improve search recall by spell-correcting individual search query terms.\")\n    @query\n    speller?: QuerySpellerType,\n\n    @doc(\"This parameter is only valid if the query type is 'semantic'. If set, the query returns answers extracted from key passages in the highest ranked documents. The number of answers returned can be configured by appending the pipe character '|' followed by the 'count-<number of answers>' option after the answers parameter value, such as 'extractive|count-3'. Default count is 1.\")\n    @query\n    answers?: QueryAnswerType,\n\n    @doc(\"A value that specifies whether any or all of the search terms must be matched in order to count the document as a match.\")\n    @query\n    searchMode?: SearchMode,\n\n    @doc(\"A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency.\")\n    @query\n    scoringStatistics?: ScoringStatistics,\n\n    @doc(\"A value to be used to create a sticky session, which can help to get more consistent results. As long as the same sessionId is used, a best-effort attempt will be made to target the same replica set. Be wary that reusing the same sessionID values repeatedly can interfere with the load balancing of the requests across replicas and adversely affect the performance of the search service. The value used as sessionId cannot start with a '_' character.\")\n    @query\n    sessionId?: string,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing operation.\"\n    @doc(\"The list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.\")\n    @query({\n      format: \"multi\",\n    })\n    $select?: string[],\n\n    #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing operation.\"\n    @doc(\"The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use $skip due to this limitation, consider using $orderby on a totally-ordered key and $filter with a range query instead.\")\n    @query\n    $skip?: int32,\n\n    #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing operation.\"\n    @doc(\"The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be used to issue another Search request for the next page of results.\")\n    @query\n    $top?: int32,\n\n    @doc(\"This parameter is only valid if the query type is 'semantic'. If set, the query returns captions extracted from key passages in the highest ranked documents. When Captions is set to 'extractive', highlighting is enabled by default, and can be configured by appending the pipe character '|' followed by the 'highlight-<true/false>' option, such as 'extractive|highlight-true'. Defaults to 'None'.\")\n    @query\n    captions?: QueryCaptionType,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"The list of field names used for semantic search.\")\n    @query({\n      format: \"multi\",\n    })\n    semanticFields?: string[],\n\n    ...ApiVersionParameter,\n    ...ClientRequestIdParameter,\n  ): SearchDocumentsResult | SearchError;\n\n  @doc(\"Autocompletes incomplete query terms based on input text and matching terms in the index.\")\n  @post\n  @route(\"search.post.search\")\n  searchPost(\n    @doc(\"The definition of the Search request.\")\n    @body\n    searchRequest: SearchRequest,\n\n    ...ApiVersionParameter,\n    ...ClientRequestIdParameter,\n  ): SearchDocumentsResult | SearchError;\n\n  @doc(\"Autocompletes incomplete query terms based on input text and matching terms in the index.\")\n  @get\n  @route(\"search.autocomplete\")\n  getAutocomplete(\n    @doc(\"The incomplete term which should be auto-completed.\")\n    @query\n    search: string,\n\n    @doc(\"The name of the suggester as specified in the suggesters collection that's part of the index definition.\")\n    @query\n    suggesterName: string,\n\n    @doc(\"Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context while producing auto-completed terms.\")\n    @query\n    autocompleteMode?: AutocompleteMode,\n\n    #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing operation.\"\n    @doc(\"An OData expression that filters the documents used to produce completed terms for the Autocomplete result.\")\n    @query\n    $filter?: string,\n\n    @doc(\"A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.\")\n    @query\n    fuzzy?: boolean,\n\n    @doc(\"A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled.\")\n    @query\n    highlightPostTag?: string,\n\n    @doc(\"A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled.\")\n    @query\n    highlightPreTag?: string,\n\n    @doc(\"A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.\")\n    @query\n    minimumCoverage?: float64,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"The list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester.\")\n    @query({\n      format: \"multi\",\n    })\n    searchFields?: string[],\n\n    #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing operation.\"\n    @doc(\"The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5.\")\n    @query\n    $top?: int32,\n\n    ...ApiVersionParameter,\n    ...ClientRequestIdParameter,\n  ): AutocompleteResult | SearchError;\n\n  @doc(\"Autocompletes incomplete query terms based on input text and matching terms in the index.\")\n  @post\n  @route(\"search.post.autocomplete\")\n  autocompletePost(\n    @doc(\"The definition of the Autocomplete request.\")\n    @body\n    autocompleteRequest: AutocompleteRequest,\n\n    ...ApiVersionParameter,\n    ...ClientRequestIdParameter,\n  ): AutocompleteResult | SearchError;\n\n  @doc(\"Sends a batch of document write actions to the index.\")\n  @post\n  @route(\"search.index\")\n  index(\n    @doc(\"The batch of index actions.\")\n    @body\n    batch: IndexBatch,\n\n    ...ApiVersionParameter,\n    ...ClientRequestIdParameter,\n  ): IndexDocumentsResult | {\n    @statusCode statusCode: 207;\n    @body body: IndexDocumentsResult;\n  } | SearchError;\n\n  @doc(\"Suggests documents in the index that match the given partial query text.\")\n  @get\n  @route(\"search.suggest\")\n  getSuggestion(\n    @doc(\"The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.\")\n    @query(\"search\")\n    searchText: string,\n\n    @doc(\"The name of the suggester as specified in the suggesters collection that's part of the index definition.\")\n    @query\n    suggesterName: string,\n\n    #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing operation.\"\n    @doc(\"An OData expression that filters the documents considered for suggestions.\")\n    @query\n    $filter?: string,\n\n    @doc(\"A value indicating whether to use fuzzy matching for the suggestions query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestions queries are slower and consume more resources.\")\n    @query(\"fuzzy\")\n    useFuzzyMatching?: boolean,\n\n    @doc(\"A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled.\")\n    @query\n    highlightPostTag?: string,\n\n    @doc(\"A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled.\")\n    @query\n    highlightPreTag?: string,\n\n    @doc(\"A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestions query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.\")\n    @query\n    minimumCoverage?: float64,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.\")\n    @query({\n      name: \"$orderby\",\n      format: \"multi\",\n    })\n    orderBy?: string[],\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"The list of field names to search for the specified search text. Target fields must be included in the specified suggester.\")\n    @query({\n      format: \"multi\",\n    })\n    searchFields?: string[],\n\n    #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing operation.\"\n    @doc(\"The list of fields to retrieve. If unspecified, only the key field will be included in the results.\")\n    @query\n    $select?: string,\n\n    #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"Existing operation.\"\n    @doc(\"The number of suggestions to retrieve. The value must be a number between 1 and 100. The default is 5.\")\n    @query\n    $top?: int32,\n\n    ...ApiVersionParameter,\n    ...ClientRequestIdParameter,\n  ): SuggestDocumentsResult | SearchError;\n\n  @doc(\"Search post suggest.\")\n  @post\n  @route(\"search.post.suggest\")\n  suggestPost(\n    @doc(\"The Suggest request.\")\n    @body\n    suggestRequest: SuggestRequest,\n\n    ...ApiVersionParameter,\n    ...ClientRequestIdParameter,\n  ): SuggestDocumentsResult | SearchError;\n}\n\n// ISSUE: Can't respond with empty object: https://github.com/Azure/typespec-azure/issues/1122.\n// They probably meant to have additonalProperties here? Surely this doesn't literally return `{}` always?\n@tag(\"Documents\")\n@route(\"/docs('{key}')\")\ninterface DocumentsByKey {\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"Existing service.\"\n  @doc(\"Retrieves a document from the index.\")\n  @get\n  get(\n    @doc(\"The key\")\n    @path\n    key: string,\n\n    #suppress \"@azure-tools/typespec-azure-core/prefer-csv-collection-format\" \"Existing service\"\n    @doc(\"Selected fields\")\n    @query({\n      name: \"$select\",\n      format: \"multi\",\n    })\n    selectedFields: string[],\n\n    ...ApiVersionParameter,\n    ...ClientRequestIdParameter,\n  ): Body<{}> | SearchError;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchindex\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchindex\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nusing TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\nnamespace Azure.SearchService;\n\n@doc(\"The error object\")\n@error\nmodel SearchError {\n  @doc(\"One of a server-defined set of error codes\")\n  @visibility(\"read\")\n  code: string;\n\n  @doc(\"A human-readable representation of the error\")\n  @visibility(\"read\")\n  message: string;\n\n  @doc(\"An array of details about specific errors that led to this reported error.\")\n  @visibility(\"read\")\n  details?: SearchError[];\n}\n\nmodel ApiVersionParameter {\n  #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is the name of a query parameter.\"\n  @doc(\"Client API version\")\n  @TypeSpec.Http.query\n  `api-version`: string;\n}\n\n// ISSUE: Can't set x-ms-parameter-grouping: https://github.com/Azure/typespec-azure/issues/1000\n// ISSUE: @extension on parameter doesn't work: https://github.com/Azure/typespec-azure/issues/1121\nmodel ClientRequestIdParameter {\n  #suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is the name of an HTTP header.\"\n  @doc(\"The tracking ID sent with the request to help with debugging.\")\n  @TypeSpec.Http.header\n  `x-ms-client-request-id`: string;\n}\n\nmodel PreferHeaderParameter {\n  @doc(\"The tracking ID sent with the request to help with debugging.\")\n  @TypeSpec.Http.header(\"Prefer\")\n  prefer: \"return=representation\"; // BUGBUG. format needed, also missing few other custom x-ms flags\n}\n\nmodel IfMatchParameter {\n  @doc(\"The tracking ID sent with the request to help with debugging.\")\n  @TypeSpec.Http.header(\"If-Match\")\n  ifMatch?: string; // BUGBUG. format needed, also missing few other custom x-ms flags\n}\n\nmodel IfNoneMatchParameter {\n  @doc(\"Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value.\")\n  @TypeSpec.Http.header(\"If-None-Match\")\n  ifNoneMatch?: string;\n}\n\nmodel SelectParameter {\n  @doc(\"Selects which top-level properties of the resource to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties.\")\n  @TypeSpec.Http.query\n  $select?: string;\n}\n\nmodel CollectionResult<T, N> {\n  @extension(\"x-ms-client-name\", N)\n  value: T;\n}\n\nmodel SearchCreatedResponse<T> {\n  ...CreatedResponse;\n  @body body: T;\n}\n\nmodel ETag {\n  @projectedName(\"json\", \"@odata.etag\")\n  @doc(\"The ETag of the resource.\")\n  eTag: string;\n}\n\nmodel IgnoreResetRequirementsParameter {\n  @doc(\"Ignores cache reset requirements.\")\n  @query(\"ignoreResetRequirements\")\n  skipIndexerResetRequirementForCache?: boolean;\n}\n\nmodel DisableCacheReprocessingChangeDetectionParameter {\n  @doc(\"Disables cache reprocessing change detection.\")\n  @query\n  disableCacheReprocessingChangeDetection?: boolean;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\common.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\common.tsp"}, {"file_content": "namespace Azure.SearchService;\n\nmodel SearchIndexerDataIdentity {\n  @doc(\"Identifies the concrete type of the identity.\")\n  `@odata.type`: string;\n}\n\nmodel SearchIndexerDataNoneIdentity extends SearchIndexerDataIdentity {}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\dataIdentity.model.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\dataIdentity.model.tsp"}, {"file_content": "namespace Azure.SearchService;\n\n@doc(\"Base type for data change detection policies.\")\nmodel DataChangeDetectionPolicy {\n  @doc(\"Identifies the concrete type of the data change detection policy.\")\n  `@odata.type`: string;\n}\n\n@doc(\"Base type for data deletion detection policies.\")\nmodel DataDeletionDetectionPolicy {\n  @doc(\"Identifies the concrete type of the data deletion detection policy.\")\n  `@odata.type`: string;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\dataPolicy.model.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\dataPolicy.model.tsp"}, {"file_content": "namespace Azure.SearchService;\n\n@doc(\"The language codes supported for input text by KeyPhraseExtractionSkill.\")\nenum KeyPhraseExtractionSkillLanguage {\n  @doc(\"Danish\") da,\n  @doc(\"Dutch\") nl,\n  @doc(\"English\") en,\n  @doc(\"Finnish\") fi,\n  @doc(\"French\") fr,\n  @doc(\"German\") de,\n  @doc(\"Italian\") it,\n  @doc(\"Japanese\") ja,\n  @doc(\"Korean\") ko,\n  @doc(\"Norwegian (Bokmaal)\") no,\n  @doc(\"Polish\") pl,\n  @doc(\"Portuguese (Portugal)\") `pt-PT`,\n  @doc(\"Portuguese (Brazil)\") `pt-BR`,\n  @doc(\"Russian\") ru,\n  @doc(\"Spanish\") es,\n  @doc(\"Swedish\") sv,\n}\n\n@doc(\"The language codes supported for input by OcrSkill.\")\nenum OcrSkillLanguage {\n  @doc(\"Chinese-Simplified\") `zh-Hans`,\n  @doc(\"Chinese-Traditional\") `zh-Hant`,\n  @doc(\"Czech\") cs,\n  @doc(\"Danish\") da,\n  @doc(\"Dutch\") nl,\n  @doc(\"English\") en,\n  @doc(\"Finnish\") fi,\n  @doc(\"French\") fr,\n  @doc(\"German\") de,\n  @doc(\"Greek\") el,\n  @doc(\"Hungarian\") hu,\n  @doc(\"Italian\") it,\n  @doc(\"Japanese\") ja,\n  @doc(\"Korean\") ko,\n  @doc(\"Norwegian (Bokmaal)\") nb,\n  @doc(\"Polish\") pl,\n  @doc(\"Portuguese\") pt,\n  @doc(\"Russian\") ru,\n  @doc(\"Spanish\") es,\n  @doc(\"Swedish\") sv,\n  @doc(\"Turkish\") tr,\n  @doc(\"Arabic\") ar,\n  @doc(\"Romanian\") ro,\n  @doc(\"Serbian (Cyrillic, Serbia)\") `sr-Cyrl`,\n  @doc(\"Serbian (Latin, Serbia)\") `sr-Latn`,\n  @doc(\"Slovak\") sk,\n\n  @doc(\"Unknown.  If the language is explicitly set to \\\"unk\\\", the language will be auto-detected.\")\n  unk,\n}\n\n@doc(\"The language codes supported for input by ImageAnalysisSkill.\")\nenum ImageAnalysisSkillLanguage {\n  @doc(\"English\") en,\n  @doc(\"Spanish\") es,\n  @doc(\"Japanese\") ja,\n  @doc(\"Portuguese\") pt,\n  @doc(\"Chinese\") zh,\n}\n\n@doc(\"The language codes supported for input text by EntityRecognitionSkill.\")\nenum EntityRecognitionSkillLanguage {\n  @doc(\"Arabic\") ar,\n  @doc(\"Czech\") cs,\n  @doc(\"Chinese-Simplified\") `zh-Hans`,\n  @doc(\"Chinese-Traditional\") `zh-Hant`,\n  @doc(\"Danish\") da,\n  @doc(\"Dutch\") nl,\n  @doc(\"English\") en,\n  @doc(\"Finnish\") fi,\n  @doc(\"French\") fr,\n  @doc(\"German\") de,\n  @doc(\"Greek\") el,\n  @doc(\"Hungarian\") hu,\n  @doc(\"Italian\") it,\n  @doc(\"Japanese\") ja,\n  @doc(\"Korean\") ko,\n  @doc(\"Norwegian (Bokmaal)\") no,\n  @doc(\"Polish\") pl,\n  @doc(\"Portuguese (Portugal)\") `pt-PT`,\n  @doc(\"Portuguese (Brazil)\") `pt-BR`,\n  @doc(\"Russian\") ru,\n  @doc(\"Spanish\") es,\n  @doc(\"Swedish\") sv,\n  @doc(\"Turkish\") tr,\n}\n\n@doc(\"The language codes supported for input text by SentimentSkill.\")\nenum SentimentSkillLanguage {\n  @doc(\"Danish\") da,\n  @doc(\"Dutch\") nl,\n  @doc(\"English\") en,\n  @doc(\"Finnish\") fi,\n  @doc(\"French\") fr,\n  @doc(\"German\") de,\n  @doc(\"Greek\") el,\n  @doc(\"Italian\") it,\n  @doc(\"Japanese\") ja,\n  @doc(\"Korean\") ko,\n  @doc(\"Norwegian (Bokmaal)\") no,\n  @doc(\"Polish\") pl,\n  @doc(\"Portuguese (Portugal)\") `pt-PT`,\n  @doc(\"Russian\") ru,\n  @doc(\"Spanish\") es,\n  @doc(\"Swedish\") sv,\n  @doc(\"Turkish\") tr,\n}\n\n@doc(\"The language codes supported for input text by SplitSkill.\")\nenum SplitSkillLanguage {\n  @doc(\"Danish\") da,\n  @doc(\"German\") de,\n  @doc(\"English\") en,\n  @doc(\"Spanish\") es,\n  @doc(\"Finnish\") fi,\n  @doc(\"French\") fr,\n  @doc(\"Italian\") it,\n  @doc(\"Korean\") ko,\n  @doc(\"Portuguese\") pt,\n}\n\n@doc(\"The language codes supported for input text by CustomEntityLookupSkill.\")\nenum CustomEntityLookupSkillLanguage {\n  @doc(\"Danish\") da,\n  @doc(\"German\") de,\n  @doc(\"English\") en,\n  @doc(\"Spanish\") es,\n  @doc(\"Finnish\") fi,\n  @doc(\"French\") fr,\n  @doc(\"Italian\") it,\n  @doc(\"Korean\") ko,\n  @doc(\"Portuguese\") pt,\n}\n\n@doc(\"The language codes supported for input text by TextTranslationSkill.\")\nenum TextTranslationSkillLanguage {\n  @doc(\"Afrikaans\") af,\n  @doc(\"Arabic\") ar,\n  @doc(\"Bangla\") bn,\n  @doc(\"Bosnian (Latin)\") bs,\n  @doc(\"Bulgarian\") bg,\n  @doc(\"Cantonese (Traditional)\") yue,\n  @doc(\"Catalan\") ca,\n  @doc(\"Chinese Simplified\") `zh-Hans`,\n  @doc(\"Chinese Traditional\") `zh-Hant`,\n  @doc(\"Croatian\") hr,\n  @doc(\"Czech\") cs,\n  @doc(\"Danish\") da,\n  @doc(\"Dutch\") nl,\n  @doc(\"English\") en,\n  @doc(\"Estonian\") et,\n  @doc(\"Fijian\") fj,\n  @doc(\"Filipino\") fil,\n  @doc(\"Finnish\") fi,\n  @doc(\"French\") fr,\n  @doc(\"German\") de,\n  @doc(\"Greek\") el,\n  @doc(\"Haitian Creole\") ht,\n  @doc(\"Hebrew\") he,\n  @doc(\"Hindi\") hi,\n  @doc(\"Hmong Daw\") mww,\n  @doc(\"Hungarian\") hu,\n  @doc(\"Icelandic\") `is`,\n  @doc(\"Indonesian\") id,\n  @doc(\"Italian\") it,\n  @doc(\"Japanese\") ja,\n  @doc(\"Kiswahili\") sw,\n  @doc(\"Klingon\") tlh,\n  @doc(\"Klingon (Latin script)\") `tlh-Latn`,\n  @doc(\"Klingon (Klingon script)\") `tlh-Piqd`,\n  @doc(\"Korean\") ko,\n  @doc(\"Latvian\") lv,\n  @doc(\"Lithuanian\") lt,\n  @doc(\"Malagasy\") mg,\n  @doc(\"Malay\") ms,\n  @doc(\"Maltese\") mt,\n  @doc(\"Norwegian\") nb,\n  @doc(\"Persian\") fa,\n  @doc(\"Polish\") pl,\n  @doc(\"Portuguese\") pt,\n  @doc(\"Portuguese (Brazil)\") `pt-br`,\n  @doc(\"Portuguese (Portugal)\") `pt-PT`,\n  @doc(\"Queretaro Otomi\") otq,\n  @doc(\"Romanian\") ro,\n  @doc(\"Russian\") ru,\n  @doc(\"Samoan\") sm,\n  @doc(\"Serbian (Cyrillic)\") `sr-Cyrl`,\n  @doc(\"Serbian (Latin)\") `sr-Latn`,\n  @doc(\"Slovak\") sk,\n  @doc(\"Slovenian\") sl,\n  @doc(\"Spanish\") es,\n  @doc(\"Swedish\") sv,\n  @doc(\"Tahitian\") ty,\n  @doc(\"Tamil\") ta,\n  @doc(\"Telugu\") te,\n  @doc(\"Thai\") th,\n  @doc(\"Tongan\") to,\n  @doc(\"Turkish\") tr,\n  @doc(\"Ukrainian\") uk,\n  @doc(\"Urdu\") ur,\n  @doc(\"Vietnamese\") vi,\n  @doc(\"Welsh\") cy,\n  @doc(\"Yucatec Maya\") yua,\n  @doc(\"Irish\") ga,\n  @doc(\"Kannada\") kn,\n  @doc(\"Maori\") mi,\n  @doc(\"Malayalam\") ml,\n  @doc(\"Punjabi\") pa,\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\languages.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\languages.tsp"}, {"file_content": "import \"./search-datasource.ops.tsp\";\nimport \"./search-indexer.ops.tsp\";\nimport \"./search-index.ops.tsp\";\nimport \"./skills.ops.tsp\";\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\n\nimport \"./searchservice.models.tsp\";\n\nnamespace Azure.SearchService;\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Rest.Resource;\n\n@tag(\"DataSources\")\ninterface DatasourcesApis {\n  @route(\"/datasources\")\n  @doc(\"Lists all indexe data sources available for a search service.\")\n  @get\n  list(...SelectParameter, ...ClientRequestIdParameter, ...ApiVersionParameter): CollectionResult<\n    SearchIndexerDataSource,\n    \"DataSources\"\n  > | SearchError;\n\n  @route(\"/datasources\")\n  @doc(\"Creates a new datasource.\")\n  @post\n  create(\n    @doc(\"The definition of the data source to create.\")\n    @body\n    body: SearchIndexerDataSource,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchCreatedResponse<SearchIndexerDataSource> | SearchError;\n\n  @doc(\"Retrieves an index definition.\")\n  @route(\"/datasources('{dataSourceName}')\")\n  @get\n  get(\n    @doc(\"The name of the data source to retrieve.\")\n    @path\n    dataSourceName: string,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchIndexerDataSource | SearchError;\n\n  @doc(\"Creates a new search data source or updates an data source if it already exists.\")\n  @route(\"/datasources('{dataSourceName}')\")\n  @put\n  createOrUpdate(\n    @doc(\"The name of the data source to create or update.\")\n    @path\n    dataSourceName: string,\n\n    @doc(\"The definition of the data source to create or update.\")\n    @body\n    body: SearchIndexerDataSource,\n\n    ...IgnoreResetRequirementsParameter,\n    ...ClientRequestIdParameter,\n    ...IfMatchParameter,\n    ...IfNoneMatchParameter,\n    ...PreferHeaderParameter,\n    ...ApiVersionParameter,\n  ): SearchIndexerDataSource | SearchCreatedResponse<SearchIndexerDataSource> | SearchError;\n\n  @doc(\"Deletes a datasource.\")\n  @route(\"/datasources('{dataSourceName}')\")\n  @delete\n  delete(\n    @doc(\"The name of the data source to delete.\")\n    @path\n    dataSourceName: string,\n\n    ...ClientRequestIdParameter,\n    ...IfMatchParameter,\n    ...IfNoneMatchParameter,\n    ...ApiVersionParameter,\n  ): NoContentResponse | NotFoundResponse | SearchError;\n}\n\n@tag(\"Service\")\ninterface ServiceApis {\n  @get\n  @route(\"servicestats\")\n  GetServiceStatistics(\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): ServiceStatistics | SearchError;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\search-datasource.ops.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\search-datasource.ops.tsp"}, {"file_content": "import \"./searchservice.models.tsp\";\n\nusing TypeSpec.OpenAPI;\nusing TypeSpec.Rest;\n\nnamespace Azure.SearchService;\n\n@doc(\"Represents a search index definition, which describes the fields and search behavior of an index.\")\nmodel SearchIndex {\n  ...ETag;\n\n  @doc(\"The name of the index.\")\n  name: string;\n\n  @doc(\"The fields of the index.\")\n  fields: SearchField[];\n\n  @doc(\"The scoring profiles for the index.\")\n  scoringProfiles?: ScoringProfile[];\n\n  @doc(\"The name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used.\")\n  defaultScoringProfile?: string;\n\n  @doc(\"Options to control Cross-Origin Resource Sharing (CORS) for the index.\")\n  corsOptions?: CorsOptions;\n\n  @doc(\"The suggesters for the index.\")\n  suggesters?: Suggester;\n\n  @doc(\"The analyzers for the index.\")\n  analyzers?: LexicalAnalyzer;\n\n  @doc(\"The tokenizers for the index.\")\n  tokenizers?: LexicalTokenizer;\n\n  @doc(\"The token filters for the index.\")\n  tokenFilter?: TokenFilter;\n\n  @doc(\"The character filters for the index.\")\n  charFilters?: CharFilter;\n\n  @doc(\"The normalizers for the index.\")\n  normalizers?: LexicalNormalizer;\n\n  @doc(\"A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019.\")\n  encryptionKey?: SearchResourceEncryptionKey;\n\n  @doc(\"The type of similarity algorithm to be used when scoring and ranking the documents matching a search query. The similarity algorithm can only be defined at index creation time and cannot be modified on existing indexes. If null, the ClassicSimilarity algorithm is used.\")\n  similarity?: Similarity;\n\n  @doc(\"Defines parameters for a search index that influence semantic capabilities.\")\n  semantic?: SemanticSettings;\n}\n\n@doc(\"Represents a field in an index definition, which describes the name, data type, and search behavior of a field.\")\nmodel SearchField {\n  @doc(\"The name of the field, which must be unique within the fields collection of the index or parent field.\")\n  name: string;\n\n  @doc(\"The data type of the field.\")\n  type: SearchFieldDataType;\n\n  @doc(\"A value indicating whether the field uniquely identifies documents in the index. Exactly one top-level field in each index must be chosen as the key field and it must be of type Edm.String. Key fields can be used to look up documents directly and update or delete specific documents. Default is false for simple fields and null for complex fields.\")\n  key?: boolean;\n\n  @doc(\"A value indicating whether the field can be returned in a search result. You can disable this option if you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user. This property must be true for key fields, and it must be null for complex fields. This property can be changed on existing fields. Enabling this property does not cause any increase in index storage requirements. Default is true for simple fields and null for complex fields.\")\n  retrievable?: boolean;\n\n  @doc(\"A value indicating whether the field is full-text searchable. This means it will undergo analysis such as word-breaking during indexing. If you set a searchable field to a value like \\\"sunny day\\\", internally it will be split into the individual tokens \\\"sunny\\\" and \\\"day\\\". This enables full-text searches for these terms. Fields of type Edm.String or Collection(Edm.String) are searchable by default. This property must be false for simple fields of other non-string data types, and it must be null for complex fields. Note: searchable fields consume extra space in your index since Azure Cognitive Search will store an additional tokenized version of the field value for full-text searches. If you want to save space in your index and you don't need a field to be included in searches, set searchable to false.\")\n  searchable?: boolean;\n\n  @doc(\"A value indicating whether to enable the field to be referenced in $filter queries. filterable differs from searchable in how strings are handled. Fields of type Edm.String or Collection(Edm.String) that are filterable do not undergo word-breaking, so comparisons are for exact matches only. For example, if you set such a field f to \\\"sunny day\\\", $filter=f eq 'sunny' will find no matches, but $filter=f eq 'sunny day' will. This property must be null for complex fields. Default is true for simple fields and null for complex fields.\")\n  filterable?: boolean;\n\n  @doc(\"A value indicating whether to enable the field to be referenced in $orderby expressions. By default Azure Cognitive Search sorts results by score, but in many experiences users will want to sort by fields in the documents. A simple field can be sortable only if it is single-valued (it has a single value in the scope of the parent document). Simple collection fields cannot be sortable, since they are multi-valued. Simple sub-fields of complex collections are also multi-valued, and therefore cannot be sortable. This is true whether it's an immediate parent field, or an ancestor field, that's the complex collection. Complex fields cannot be sortable and the sortable property must be null for such fields. The default for sortable is true for single-valued simple fields, false for multi-valued simple fields, and null for complex fields.\")\n  sortable?: boolean;\n\n  @doc(\"A value indicating whether to enable the field to be referenced in facet queries. Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, and so on). This property must be null for complex fields. Fields of type Edm.GeographyPoint or Collection(Edm.GeographyPoint) cannot be facetable. Default is true for all other simple fields.\")\n  facetable?: boolean;\n\n  @doc(\"The name of the analyzer to use for the field. This option can be used only with searchable fields and it can't be set together with either searchAnalyzer or indexAnalyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields.\")\n  analyzer?: LexicalAnalyzerName;\n\n  @doc(\"The name of the analyzer used at search time for the field. This option can be used only with searchable fields. It must be set together with indexAnalyzer and it cannot be set together with the analyzer option. This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. This analyzer can be updated on an existing field. Must be null for complex fields.\")\n  searchAnalyzer?: LexicalAnalyzerName;\n\n  @doc(\"The name of the analyzer used at indexing time for the field. This option can be used only with searchable fields. It must be set together with searchAnalyzer and it cannot be set together with the analyzer option.  This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields.\")\n  indexAnalyzer?: LexicalAnalyzerName;\n\n  @doc(\"The name of the normalizer to use for the field. This option can be used only with fields with filterable, sortable, or facetable enabled. Once the normalizer is chosen, it cannot be changed for the field. Must be null for complex fields.\")\n  normalizer?: LexicalNormalizerName;\n\n  @doc(\"A list of the names of synonym maps to associate with this field. This option can be used only with searchable fields. Currently only one synonym map per field is supported. Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map. This attribute can be changed on existing fields. Must be null or an empty collection for complex fields.\")\n  synonymMaps: string[];\n\n  @doc(\"A list of sub-fields if this is a field of type Edm.ComplexType or Collection(Edm.ComplexType). Must be null or empty for simple fields.\")\n  fields?: SearchField[];\n}\n\n@doc(\"Defines the data type of a field in a search index.\")\nenum SearchFieldDataType {\n  @doc(\"Indicates that a field contains a string.\")\n  String: \"Edm.String\",\n\n  @doc(\"Indicates that a field contains a 32-bit signed integer.\")\n  Int32: \"Edm.Int32\",\n\n  @doc(\"Indicates that a field contains a 64-bit signed integer.\")\n  Int64: \"Edm.Int64\",\n\n  @doc(\"Indicates that a field contains an IEEE double-precision floating point number.\")\n  Double: \"Edm.Double\",\n\n  @doc(\"Indicates that a field contains a Boolean value (true or false).\")\n  Boolean: \"Edm.Boolean\",\n\n  @doc(\"Indicates that a field contains a date/time value, including timezone information.\")\n  DateTimeOffset: \"Edm.DateTimeOffset\",\n\n  @doc(\"Indicates that a field contains a geo-location in terms of longitude and latitude.\")\n  GeographyPoint: \"Edm.GeographyPoint\",\n\n  @doc(\"Indicates that a field contains one or more complex objects that in turn have sub-fields of other types.\")\n  ComplexType: \"Edm.ComplexType\",\n}\n\n@doc(\"Defines the names of all text analyzers supported by Azure Cognitive Search.\")\nenum LexicalAnalyzerName {\n  @doc(\"Microsoft analyzer for Arabic.\")\n  ArMicrosoft: \"ar.microsoft\",\n\n  @doc(\"Lucene analyzer for Arabic.\")\n  ArLucene: \"ar.lucene\",\n\n  @doc(\"Lucene analyzer for Armenian.\")\n  HyLucene: \"hy.lucene\",\n\n  @doc(\"Microsoft analyzer for Bangla.\")\n  BnMicrosoft: \"bn.microsoft\",\n\n  @doc(\"Lucene analyzer for Basque.\")\n  EuLucene: \"eu.lucene\",\n\n  @doc(\"Microsoft analyzer for Bulgarian.\")\n  BgMicrosoft: \"bg.microsoft\",\n\n  @doc(\"Lucene analyzer for Bulgarian.\")\n  BgLucene: \"bg.lucene\",\n\n  @doc(\"Microsoft analyzer for Catalan.\")\n  CaMicrosoft: \"ca.microsoft\",\n\n  @doc(\"Lucene analyzer for Catalan.\")\n  CaLucene: \"ca.lucene\",\n\n  @doc(\"Microsoft analyzer for Chinese (Simplified).\")\n  ZhHansMicrosoft: \"zh-Hans.microsoft\",\n\n  @doc(\"Lucene analyzer for Chinese (Simplified).\")\n  ZhHansLucene: \"zh-Hans.lucene\",\n\n  @doc(\"Microsoft analyzer for Chinese (Traditional).\")\n  ZhHantMicrosoft: \"zh-Hant.microsoft\",\n\n  @doc(\"Lucene analyzer for Chinese (Traditional).\")\n  ZhHantLucene: \"zh-Hant.lucene\",\n\n  @doc(\"Microsoft analyzer for Croatian.\")\n  HrMicrosoft: \"hr.microsoft\",\n\n  @doc(\"Microsoft analyzer for Czech.\")\n  CsMicrosoft: \"cs.microsoft\",\n\n  @doc(\"Lucene analyzer for Czech.\")\n  CsLucene: \"cs.lucene\",\n\n  @doc(\"Microsoft analyzer for Danish.\")\n  DaMicrosoft: \"da.microsoft\",\n\n  @doc(\"Lucene analyzer for Danish.\")\n  DaLucene: \"da.lucene\",\n\n  @doc(\"Microsoft analyzer for Dutch.\")\n  NlMicrosoft: \"nl.microsoft\",\n\n  @doc(\"Lucene analyzer for Dutch.\")\n  NlLucene: \"nl.lucene\",\n\n  @doc(\"Microsoft analyzer for English.\")\n  EnMicrosoft: \"en.microsoft\",\n\n  @doc(\"Lucene analyzer for English.\")\n  EnLucene: \"en.lucene\",\n\n  @doc(\"Microsoft analyzer for Estonian.\")\n  EtMicrosoft: \"et.microsoft\",\n\n  @doc(\"Microsoft analyzer for Finnish.\")\n  FiMicrosoft: \"fi.microsoft\",\n\n  @doc(\"Lucene analyzer for Finnish.\")\n  FiLucene: \"fi.lucene\",\n\n  @doc(\"Microsoft analyzer for French.\")\n  FrMicrosoft: \"fr.microsoft\",\n\n  @doc(\"Lucene analyzer for French.\")\n  FrLucene: \"fr.lucene\",\n\n  @doc(\"Lucene analyzer for Galician.\")\n  GlLucene: \"gl.lucene\",\n\n  @doc(\"Microsoft analyzer for German.\")\n  DeMicrosoft: \"de.microsoft\",\n\n  @doc(\"Lucene analyzer for German.\")\n  DeLucene: \"de.lucene\",\n\n  @doc(\"Microsoft analyzer for Greek.\")\n  ElMicrosoft: \"el.microsoft\",\n\n  @doc(\"Lucene analyzer for Greek.\")\n  ElLucene: \"el.lucene\",\n\n  @doc(\"Microsoft analyzer for Gujarati.\")\n  GuMicrosoft: \"gu.microsoft\",\n\n  @doc(\"Microsoft analyzer for Hebrew.\")\n  HeMicrosoft: \"he.microsoft\",\n\n  @doc(\"Microsoft analyzer for Hindi.\")\n  HiMicrosoft: \"hi.microsoft\",\n\n  @doc(\"Lucene analyzer for Hindi.\")\n  HiLucene: \"hi.lucene\",\n\n  @doc(\"Microsoft analyzer for Hungarian.\")\n  HuMicrosoft: \"hu.microsoft\",\n\n  @doc(\"Lucene analyzer for Hungarian.\")\n  HuLucene: \"hu.lucene\",\n\n  @doc(\"Microsoft analyzer for Icelandic.\")\n  IsMicrosoft: \"is.microsoft\",\n\n  @doc(\"Microsoft analyzer for Indonesian (Bahasa).\")\n  IdMicrosoft: \"id.microsoft\",\n\n  @doc(\"Lucene analyzer for Indonesian.\")\n  IdLucene: \"id.lucene\",\n\n  @doc(\"Lucene analyzer for Irish.\")\n  GaLucene: \"ga.lucene\",\n\n  @doc(\"Microsoft analyzer for Italian.\")\n  ItMicrosoft: \"it.microsoft\",\n\n  @doc(\"Lucene analyzer for Italian.\")\n  ItLucene: \"it.lucene\",\n\n  @doc(\"Microsoft analyzer for Japanese.\")\n  JaMicrosoft: \"ja.microsoft\",\n\n  @doc(\"Lucene analyzer for Japanese.\")\n  JaLucene: \"ja.lucene\",\n\n  @doc(\"Microsoft analyzer for Kannada.\")\n  KnMicrosoft: \"kn.microsoft\",\n\n  @doc(\"Microsoft analyzer for Korean.\")\n  KoMicrosoft: \"ko.microsoft\",\n\n  @doc(\"Lucene analyzer for Korean.\")\n  KoLucene: \"ko.lucene\",\n\n  @doc(\"Microsoft analyzer for Latvian.\")\n  LvMicrosoft: \"lv.microsoft\",\n\n  @doc(\"Lucene analyzer for Latvian.\")\n  LvLucene: \"lv.lucene\",\n\n  @doc(\"Microsoft analyzer for Lithuanian.\")\n  LtMicrosoft: \"lt.microsoft\",\n\n  @doc(\"Microsoft analyzer for Malayalam.\")\n  MlMicrosoft: \"ml.microsoft\",\n\n  @doc(\"Microsoft analyzer for Malay (Latin).\")\n  MsMicrosoft: \"ms.microsoft\",\n\n  @doc(\"Microsoft analyzer for Marathi.\")\n  MrMicrosoft: \"mr.microsoft\",\n\n  @doc(\"Microsoft analyzer for Norwegian (Bokm\u00e5l).\")\n  NbMicrosoft: \"nb.microsoft\",\n\n  @doc(\"Lucene analyzer for Norwegian.\")\n  NoLucene: \"no.lucene\",\n\n  @doc(\"Lucene analyzer for Persian.\")\n  FaLucene: \"fa.lucene\",\n\n  @doc(\"Microsoft analyzer for Polish.\")\n  PlMicrosoft: \"pl.microsoft\",\n\n  @doc(\"Lucene analyzer for Polish.\")\n  PlLucene: \"pl.lucene\",\n\n  @doc(\"Microsoft analyzer for Portuguese (Brazil).\")\n  PtBrMicrosoft: \"pt-BR.microsoft\",\n\n  @doc(\"Lucene analyzer for Portuguese (Brazil).\")\n  PtBrLucene: \"pt-BR.lucene\",\n\n  @doc(\"Microsoft analyzer for Portuguese (Portugal).\")\n  PtPtMicrosoft: \"pt-PT.microsoft\",\n\n  @doc(\"Lucene analyzer for Portuguese (Portugal).\")\n  PtPtLucene: \"pt-PT.lucene\",\n\n  @doc(\"Microsoft analyzer for Punjabi.\")\n  PaMicrosoft: \"pa.microsoft\",\n\n  @doc(\"Microsoft analyzer for Romanian.\")\n  RoMicrosoft: \"ro.microsoft\",\n\n  @doc(\"Lucene analyzer for Romanian.\")\n  RoLucene: \"ro.lucene\",\n\n  @doc(\"Microsoft analyzer for Russian.\")\n  RuMicrosoft: \"ru.microsoft\",\n\n  @doc(\"Lucene analyzer for Russian.\")\n  RuLucene: \"ru.lucene\",\n\n  @doc(\"Microsoft analyzer for Serbian (Cyrillic).\")\n  SrCyrillicMicrosoft: \"sr-cyrillic.microsoft\",\n\n  @doc(\"Microsoft analyzer for Serbian (Latin).\")\n  SrLatinMicrosoft: \"sr-latin.microsoft\",\n\n  @doc(\"Microsoft analyzer for Slovak.\")\n  SkMicrosoft: \"sk.microsoft\",\n\n  @doc(\"Microsoft analyzer for Slovenian.\")\n  SlMicrosoft: \"sl.microsoft\",\n\n  @doc(\"Microsoft analyzer for Spanish.\")\n  EsMicrosoft: \"es.microsoft\",\n\n  @doc(\"Lucene analyzer for Spanish.\")\n  EsLucene: \"es.lucene\",\n\n  @doc(\"Microsoft analyzer for Swedish.\")\n  SvMicrosoft: \"sv.microsoft\",\n\n  @doc(\"Lucene analyzer for Swedish.\")\n  SvLucene: \"sv.lucene\",\n\n  @doc(\"Microsoft analyzer for Tamil.\")\n  TaMicrosoft: \"ta.microsoft\",\n\n  @doc(\"Microsoft analyzer for Telugu.\")\n  TeMicrosoft: \"te.microsoft\",\n\n  @doc(\"Microsoft analyzer for Thai.\")\n  ThMicrosoft: \"th.microsoft\",\n\n  @doc(\"Lucene analyzer for Thai.\")\n  ThLucene: \"th.lucene\",\n\n  @doc(\"Microsoft analyzer for Turkish.\")\n  TrMicrosoft: \"tr.microsoft\",\n\n  @doc(\"Lucene analyzer for Turkish.\")\n  TrLucene: \"tr.lucene\",\n\n  @doc(\"Microsoft analyzer for Ukrainian.\")\n  UkMicrosoft: \"uk.microsoft\",\n\n  @doc(\"Microsoft analyzer for Urdu.\")\n  UrMicrosoft: \"ur.microsoft\",\n\n  @doc(\"Microsoft analyzer for Vietnamese.\")\n  ViMicrosoft: \"vi.microsoft\",\n\n  @doc(\"Standard Lucene analyzer.\")\n  StandardLucene: \"standard.lucene\",\n\n  @doc(\"Standard ASCII Folding Lucene analyzer. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#Analyzers\")\n  StandardAsciiFoldingLucene: \"standardasciifolding.lucene\",\n\n  @doc(\"Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordAnalyzer.html\")\n  Keyword: \"keyword\",\n\n  @doc(\"Flexibly separates text into terms via a regular expression pattern. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html\")\n  Pattern: \"pattern\",\n\n  @doc(\"Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/SimpleAnalyzer.html\")\n  Simple: \"simple\",\n\n  @doc(\"Divides text at non-letters; Applies the lowercase and stopword token filters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html\")\n  Stop: \"stop\",\n\n  @doc(\"An analyzer that uses the whitespace tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceAnalyzer.html\")\n  Whitespace: \"whitespace\",\n}\n\n@doc(\"Defines parameters for a search index that influence scoring in search queries.\")\nmodel ScoringProfile {\n  @doc(\"The name of the scoring profile.\")\n  name: string;\n\n  @doc(\"Parameters that boost scoring based on text matches in certain index fields.\")\n  text?: TextWeights;\n\n  @doc(\"The collection of functions that influence the scoring of documents.\")\n  functions?: ScoringFunction[];\n\n  @doc(\"A value indicating how the results of individual scoring functions should be combined. Defaults to \\\"Sum\\\". Ignored if there are no scoring functions.\")\n  functionAggregation?: ScoringFunctionAggregation;\n}\n\n@doc(\"Defines weights on index fields for which matches should boost scoring in search queries.\")\nmodel TextWeights {\n  @doc(\"The dictionary of per-field weights to boost document scoring. The keys are field names and the values are the weights for each field.\")\n  weights: Record<float64>;\n}\n\n@doc(\"Base type for functions that can modify document scores during ranking.\")\n@discriminator(\"type\")\nmodel ScoringFunction {\n  @doc(\"The name of the field used as input to the scoring function.\")\n  fieldName: string;\n\n  @doc(\"A multiplier for the raw score. Must be a positive number not equal to 1.0.\")\n  boost: float64;\n\n  @doc(\"A value indicating how boosting will be interpolated across document scores; defaults to \\\"Linear\\\".\")\n  interpolation?: ScoringFunctionInterpolation;\n}\n\n@doc(\"Defines a function that boosts scores based on distance from a geographic location.\")\nmodel DistanceScoringFunction extends ScoringFunction {\n  type: \"distance\";\n\n  @doc(\"Parameter values for the distance scoring function.\")\n  distance: DistanceScoringParameters;\n}\n\n@doc(\"Provides parameter values to a distance scoring function.\")\nmodel DistanceScoringParameters {\n  @doc(\"The name of the parameter passed in search queries to specify the reference location.\")\n  referencePointParameter: string;\n\n  @doc(\"The distance in kilometers from the reference location where the boosting range ends.\")\n  boostingDistance: float64;\n}\n\n@doc(\"Defines a function that boosts scores based on the value of a date-time field.\")\nmodel FreshnessScoringFunction extends ScoringFunction {\n  type: \"freshness\";\n\n  @doc(\"Parameter values for the freshness scoring function.\")\n  freshness: FreshnessScoringParameters;\n}\n\n@doc(\"Provides parameter values to a freshness scoring function.\")\nmodel FreshnessScoringParameters {\n  @doc(\"The expiration period after which boosting will stop for a particular document.\")\n  boostingDuration: duration;\n}\n\n@doc(\"Defines a function that boosts scores based on the magnitude of a numeric field.\")\nmodel MagnitudeScoringFunction extends ScoringFunction {\n  type: \"magnitude\";\n\n  @doc(\"Parameter values for the magnitude scoring function.\")\n  magnitude: MagnitudeScoringParameters;\n}\n\n@doc(\"Provides parameter values to a magnitude scoring function.\")\nmodel MagnitudeScoringParameters {\n  @doc(\"The field value at which boosting stgarts.\")\n  boostingRangeStart: float64;\n\n  @doc(\"The field value at which boosting ends.\")\n  boostingRangeEnd: float64;\n\n  @doc(\"A value indicating whether to apply a constant boost for field values beyond the range end value; default is false.\")\n  constantBoostBeyondRange?: boolean;\n}\n\n@doc(\"Defines a function that boosts scores of documents with string values matching a given list of tags.\")\nmodel TagScoringFunction extends ScoringFunction {\n  type: \"tag\";\n\n  @doc(\"Parameter values for the tag scoring function.\")\n  tag: TagScoringParameters;\n}\n\n@doc(\"Provides parameter values to a tag scoring function.\")\nmodel TagScoringParameters {\n  @doc(\"The name of the parameter passed in search queries to specify the list of tags to compare against the target field.\")\n  tagsParameter: string;\n}\n\n@doc(\"Defines the function used to interpolate score boosting across a range of documents.\")\nenum ScoringFunctionInterpolation {\n  @doc(\"Boosts scores by a linearly decreasing amount. This is the default interpolation for scoring functions.\")\n  Linear: \"linear\",\n\n  @doc(\"Boosts scores by a constant factor.\")\n  Constant: \"constant\",\n\n  @doc(\"Boosts scores by an amount that decreases quadratically. Boosts decrease slowly for higher scores, and more quickly as the scores decrease. This interpolation option is not allowed in tag scoring functions.\")\n  Quadratic: \"quadratic\",\n\n  @doc(\"Boosts scores by an amount that decreases logarithmically. Boosts decrease quickly for higher scores, and more slowly as the scores decrease. This interpolation option is not allowed in tag scoring functions.\")\n  Logarithmic: \"logarithmic\",\n}\n\n@doc(\"Defines the aggregation function used to combine the results of all the scoring functions in a scoring profile.\")\nenum ScoringFunctionAggregation {\n  @doc(\"Boost scores by the sum of all scoring function results.\")\n  Sum: \"sum\",\n\n  @doc(\"Boost scores by the average of all scoring function results.\")\n  Average: \"average\",\n\n  @doc(\"Boost scores by the minimum of all scoring function results.\")\n  Minimum: \"minimum\",\n\n  @doc(\"Boost scores by the maximum of all scoring function results.\")\n  Maximum: \"maximum\",\n\n  @doc(\"Boost scores using the first applicable scoring function in the scoring profile.\")\n  FirstMatching: \"firstMatching\",\n}\n\n@doc(\"Defines options to control Cross-Origin Resource Sharing (CORS) for an index.\")\nmodel CorsOptions {\n  @doc(\"The list of origins from which JavaScript code will be granted access to your index. Can contain a list of hosts of the form {protocol}://{fully-qualified-domain-name}[:{port#}], or a single '*' to allow all origins (not recommended).\")\n  allowedOrigins: string[];\n\n  @doc(\"The duration for which browsers should cache CORS preflight responses. Defaults to 5 minutes.\")\n  maxAgeInSeconds?: int64;\n}\n\n@doc(\"Defines how the Suggest API should apply to a group of fields in the index.\")\nmodel Suggester {\n  @doc(\"The name of the suggester.\")\n  name: string;\n\n  @doc(\"A value indicating the capabilities of the suggester.\")\n  searchMode: SuggesterSearchMode;\n\n  @doc(\"The list of field names to which the suggester applies. Each field must be searchable.\")\n  sourceFields: string[];\n}\n\n@doc(\"A value indicating the capabilities of the suggester.\")\nenum SuggesterSearchMode {\n  @doc(\"Matches consecutive whole terms and prefixes in a field. For example, for the field 'The fastest brown fox', the queries 'fast' and 'fastest brow' would both match.\")\n  AnalyzingInfixMatching: \"analyzingInfixMatching\",\n}\n\n@doc(\"Base type for analyzers.\")\n@discriminator(\"@odata.type\")\nmodel LexicalAnalyzer {\n  @doc(\"The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters.\")\n  name: string;\n}\n\n@doc(\"Allows you to take control over the process of converting text into indexable/searchable tokens. It's a user-defined configuration consisting of a single predefined tokenizer and one or more filters. The tokenizer is responsible for breaking text into tokens, and the filters for modifying tokens emitted by the tokenizer.\")\nmodel CustomAnalyzer extends LexicalAnalyzer {\n  `@odata.type`: \"#Microsoft.Azure.Search.CustomAnalyzer\";\n\n  @doc(\"The name of the tokenizer to use to divide continuous text into a sequence of tokens, such as breaking a sentence into words.\")\n  tokenizer: LexicalTokenizerName;\n\n  @doc(\"A list of token filters used to filter out or modify the tokens generated by a tokenizer. For example, you can specify a lowercase filter that converts all characters to lowercase. The filters are run in the order in which they are listed.\")\n  tokenFilters?: TokenFilterName[];\n\n  @doc(\"A list of character filters used to prepare input text before it is processed by the tokenizer. For instance, they can replace certain characters or symbols. The filters are run in the order in which they are listed.\")\n  charFilters?: CharFilterName[];\n}\n\n@doc(\"Flexibly separates text into terms via a regular expression pattern. This analyzer is implemented using Apache Lucene.\")\nmodel PatternAnalyzer extends LexicalAnalyzer {\n  `@odata.type`: \"#Microsoft.Azure.Search.PatternAnalyzer\";\n\n  @doc(\"A value indicating whether terms should be lower-cased. Default is true.\")\n  lowercase?: boolean = true;\n\n  @doc(\"A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters.\")\n  pattern?: string = \"\\\\W+\";\n\n  @doc(\"Regular expression flags.\")\n  flags?: RegexFlags;\n\n  @doc(\"A list of stopwords.\")\n  stopwords: string[];\n}\n\n@doc(\"Standard Apache Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter.\")\nmodel LuceneStandardAnalyzer extends LexicalAnalyzer {\n  `@odata.type`: \"#Microsoft.Azure.Search.StandardAnalyzer\";\n\n  @doc(\"The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.\")\n  @maxValue(300)\n  maxTokenLength?: int32 = 255;\n\n  @doc(\"A list of stopwords.\")\n  stopwords?: string[];\n}\n\n@doc(\"Divides text at non-letters; Applies the lowercase and stopword token filters. This analyzer is implemented using Apache Lucene.\")\nmodel StopAnalyzer extends LexicalAnalyzer {\n  `@odata.type`: \"#Microsoft.Azure.Search.StopAnalyzer\";\n\n  @doc(\"A list of stopwords.\")\n  stopwords?: string[];\n}\n\n@doc(\"Defines the names of all tokenizers supported by Azure Cognitive Search.\")\nenum LexicalTokenizerName {\n  @doc(\"Grammar-based tokenizer that is suitable for processing most European-language documents. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html\")\n  Classic: \"classic\",\n\n  @doc(\"Tokenizes the input from an edge into n-grams of the given size(s). See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html\")\n  EdgeNGram: \"edgeNGram\",\n\n  @doc(\"Emits the entire input as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html\")\n  Keyword: \"keyword_v2\",\n\n  @doc(\"Divides text at non-letters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html\")\n  Letter: \"letter\",\n\n  @doc(\"Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html\")\n  Lowercase: \"lowercase\",\n\n  @doc(\"Divides text using language-specific rules.\")\n  MicrosoftLanguageTokenizer: \"microsoft_language_tokenizer\",\n\n  @doc(\"Divides text using language-specific rules and reduces words to their base forms.\")\n  MicrosoftLanguageStemmingTokenizer: \"microsoft_language_stemming_tokenizer\",\n\n  @doc(\"Tokenizes the input into n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html\")\n  NGram: \"nGram\",\n\n  @doc(\"Tokenizer for path-like hierarchies. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html\")\n  PathHierarchy: \"path_hierarchy_v2\",\n\n  @doc(\"Tokenizer that uses regex pattern matching to construct distinct tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html\")\n  Pattern: \"pattern\",\n\n  @doc(\"Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html\")\n  Standard: \"standard_v2\",\n\n  @doc(\"Tokenizes urls and emails as one token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html\")\n  UaxUrlEmail: \"uax_url_email\",\n\n  @doc(\"Divides text at whitespace. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html\")\n  Whitespace: \"whitespace\",\n}\n\n@doc(\"Defines the names of all token filters supported by Azure Cognitive Search.\")\nenum TokenFilterName {\n  @doc(\"A token filter that applies the Arabic normalizer to normalize the orthography. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ar/ArabicNormalizationFilter.html\")\n  ArabicNormalization: \"arabic_normalization\",\n\n  @doc(\"Strips all characters after an apostrophe (including the apostrophe itself). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/tr/ApostropheFilter.html\")\n  Apostrophe: \"apostrophe\",\n\n  @doc(\"Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \\\"Basic Latin\\\" Unicode block) into their ASCII equivalents, if such equivalents exist. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html\")\n  Asciifolding: \"asciifolding\",\n\n  @doc(\"Forms bigrams of CJK terms that are generated from the standard tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html\")\n  CjkBigram: \"cjk_bigram\",\n\n  @doc(\"Normalizes CJK width differences. Folds fullwidth ASCII variants into the equivalent basic Latin, and half-width Katakana variants into the equivalent Kana. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKWidthFilter.html\")\n  CjkWidth: \"cjk_width\",\n\n  @doc(\"Removes English possessives, and dots from acronyms. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicFilter.html\")\n  Classic: \"classic\",\n\n  @doc(\"Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html\")\n  CommonGram: \"common_grams\",\n\n  @doc(\"Generates n-grams of the given size(s) starting from the front or the back of an input token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html\")\n  EdgeNGram: \"edgeNGram_v2\",\n\n  @doc(\"Removes elisions. For example, \\\"l'avion\\\" (the plane) will be converted to \\\"avion\\\" (plane). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html\")\n  Elision: \"elision\",\n\n  @doc(\"Normalizes German characters according to the heuristics of the German2 snowball algorithm. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/de/GermanNormalizationFilter.html\")\n  GermanNormalization: \"german_normalization\",\n\n  @doc(\"Normalizes text in Hindi to remove some differences in spelling variations. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/hi/HindiNormalizationFilter.html\")\n  HindiNormalization: \"hindi_normalization\",\n\n  @doc(\"Normalizes the Unicode representation of text in Indian languages. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/in/IndicNormalizationFilter.html\")\n  IndicNormalization: \"indic_normalization\",\n\n  @doc(\"Emits each incoming token twice, once as keyword and once as non-keyword. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html\")\n  KeywordRepeat: \"keyword_repeat\",\n\n  @doc(\"A high-performance kstem filter for English. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/en/KStemFilter.html\")\n  Kstem: \"kstem\",\n\n  @doc(\"Removes words that are too long or too short. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html\")\n  Length: \"length\",\n\n  @doc(\"Limits the number of tokens while indexing. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html\")\n  Limit: \"limit\",\n\n  @doc(\"Normalizes token text to lower case. See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.html\")\n  Lowercase: \"lowercase\",\n\n  @doc(\"Generates n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html\")\n  NGram: \"nGram_v2\",\n\n  @doc(\"Applies normalization for Persian. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/fa/PersianNormalizationFilter.html\")\n  PersianNormalization: \"persian_normalization\",\n\n  @doc(\"Create tokens for phonetic matches. See https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html\")\n  Phonetic: \"phonetic\",\n\n  @doc(\"Uses the Porter stemming algorithm to transform the token stream. See http://tartarus.org/~martin/PorterStemmer\")\n  PorterStem: \"porter_stem\",\n\n  @doc(\"Reverses the token string. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html\")\n  Reverse: \"reverse\",\n\n  @doc(\"Normalizes use of the interchangeable Scandinavian characters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianNormalizationFilter.html\")\n  ScandinavianNormalization: \"scandinavian_normalization\",\n\n  @doc(\"Folds Scandinavian characters \u00e5\u00c5\u00e4\u00e6\u00c4\u00c6-&gt;a and \u00f6\u00d6\u00f8\u00d8-&gt;o. It also discriminates against use of double vowels aa, ae, ao, oe and oo, leaving just the first one. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianFoldingFilter.html\")\n  ScandinavianFoldingNormalization: \"scandinavian_folding\",\n\n  @doc(\"Creates combinations of tokens as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html\")\n  Shingle: \"shingle\",\n\n  @doc(\"A filter that stems words using a Snowball-generated stemmer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html\")\n  Snowball: \"snowball\",\n\n  @doc(\"Normalizes the Unicode representation of Sorani text. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ckb/SoraniNormalizationFilter.html\")\n  SoraniNormalization: \"sorani_normalization\",\n\n  @doc(\"Language specific stemming filter. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#TokenFilters\")\n  Stemmer: \"stemmer\",\n\n  @doc(\"Removes stop words from a token stream. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html\")\n  Stopwords: \"stopwords\",\n\n  @doc(\"Trims leading and trailing whitespace from tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TrimFilter.html\")\n  Trim: \"trim\",\n\n  @doc(\"Truncates the terms to a specific length. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html\")\n  Truncate: \"truncate\",\n\n  @doc(\"Filters out tokens with same text as the previous token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html\")\n  Unique: \"unique\",\n\n  @doc(\"Normalizes token text to upper case. See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html\")\n  Uppercase: \"uppercase\",\n\n  @doc(\"Splits words into subwords and performs optional transformations on subword groups.\")\n  WordDelimiter: \"word_delimiter\",\n}\n\n@doc(\"Defines the names of all character filters supported by Azure Cognitive Search.\")\nenum CharFilterName {\n  @doc(\"A character filter that attempts to strip out HTML constructs. See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.html\")\n  HtmlStrip: \"html_strip\",\n}\n\n@doc(\"Defines flags that can be combined to control how regular expressions are used in the pattern analyzer and pattern tokenizer.\")\nenum RegexFlags {\n  @doc(\"Enables canonical equivalence.\")\n  CanonEq: \"CANON_EQ\",\n\n  @doc(\"Enables case-insensitive matching.\")\n  CaseInsensitive: \"CASE_INSENSITIVE\",\n\n  @doc(\"Permits whitespace and comments in the pattern.\")\n  Comments: \"COMMENTS\",\n\n  @doc(\"Enables dotall mode.\")\n  DotAll: \"DOTALL\",\n\n  @doc(\"Enables literal parsing of the pattern.\")\n  Literal: \"LITERAL\",\n\n  @doc(\"Enables multiline mode.\")\n  Multiline: \"MULTILINE\",\n\n  @doc(\"Enables Unicode-aware case folding.\")\n  UnicodeCase: \"UNICODE_CASE\",\n\n  @doc(\"Enables Unix lines mode.\")\n  UnixLines: \"UNIX_LINES\",\n}\n\n@doc(\"Base type for tokenizers.\")\n@discriminator(\"@odata.type\")\nmodel LexicalTokenizer {\n  @doc(\"The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters.\")\n  name: string;\n}\n\n@doc(\"Grammar-based tokenizer that is suitable for processing most European-language documents. This tokenizer is implemented using Apache Lucene.\")\nmodel ClassicTokenizer extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.ClassicTokenizer\";\n\n  @doc(\"The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.\")\n  @maxValue(300)\n  maxTokenLength?: int32 = 255;\n}\n\n@doc(\"Tokenizes the input from an edge into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene.\")\nmodel EdgeNGramTokenizer extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.EdgeNGramTokenizer\";\n\n  @doc(\"The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram.\")\n  @maxValue(300)\n  minGram?: int32 = 1;\n\n  @doc(\"The maximum n-gram length. Default is 2. Maximum is 300.\")\n  @maxValue(300)\n  maxGram?: int32 = 2;\n\n  @doc(\"Character classes to keep in the tokens.\")\n  tokenChars?: TokenCharacterKind[];\n}\n\n@doc(\"Represents classes of characters on which a token filter can operate.\")\nenum TokenCharacterKind {\n  @doc(\"Keeps letters in tokens.\")\n  Letter: \"letter\",\n\n  @doc(\"Keeps digits in tokens.\")\n  Digit: \"digit\",\n\n  @doc(\"Keeps whitespace in tokens.\")\n  Whitespace: \"whitespace\",\n\n  @doc(\"Keeps punctuation in tokens.\")\n  Punctuation: \"punctuation\",\n\n  @doc(\"Keeps symbols in tokens.\")\n  Symbol: \"symbol\",\n}\n\n@doc(\"Emits the entire input as a single token. This tokenizer is implemented using Apache Lucene.\")\nmodel KeywordTokenizer extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.KeywordTokenizer\";\n\n  @doc(\"The read buffer size in bytes. Default is 256.\")\n  bufferSize?: int32 = 256;\n}\n\n@doc(\"Emits the entire input as a single token. This tokenizer is implemented using Apache Lucene.\")\nmodel KeywordTokenizerV2 extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.KeywordTokenizerV2\";\n\n  @doc(\"The maximum token length. Default is 256. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.\")\n  @maxValue(300)\n  maxTokenLength?: int32 = 255;\n}\n\n@doc(\"Grammar-based tokenizer that is suitable for processing most European-language documents. This tokenizer is implemented using Apache Lucene.\")\nmodel MicrosoftLanguageTokenizer extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.MicrosoftLanguageTokenizer\";\n\n  @doc(\"The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.\")\n  @maxValue(300)\n  maxTokenLength?: int32 = 255;\n\n  @doc(\"A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false.\")\n  isSearchTokenizer?: boolean = false;\n\n  @doc(\"The language to use. The default is English.\")\n  language?: MicrosoftTokenizerLanguage;\n}\n\n@doc(\"Lists the languages supported by the Microsoft language tokenizer.\")\nenum MicrosoftTokenizerLanguage {\n  @doc(\"Selects the Microsoft tokenizer for Arabic.\")\n  Arabic: \"arabic\",\n\n  @doc(\"Selects the Microsoft tokenizer for Bangla.\")\n  Bangla: \"bangla\",\n\n  @doc(\"Selects the Microsoft tokenizer for Bulgarian.\")\n  Bulgarian: \"bulgarian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Catalan.\")\n  Catalan: \"catalan\",\n\n  @doc(\"Selects the Microsoft tokenizer for Croatian.\")\n  Croatian: \"croatian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Czech.\")\n  Czech: \"czech\",\n\n  @doc(\"Selects the Microsoft tokenizer for Danish.\")\n  Danish: \"danish\",\n\n  @doc(\"Selects the Microsoft tokenizer for Dutch.\")\n  Dutch: \"dutch\",\n\n  @doc(\"Selects the Microsoft tokenizer for English.\")\n  English: \"english\",\n\n  @doc(\"Selects the Microsoft tokenizer for Finnish.\")\n  Finnish: \"finnish\",\n\n  @doc(\"Selects the Microsoft tokenizer for French.\")\n  French: \"french\",\n\n  @doc(\"Selects the Microsoft tokenizer for German.\")\n  German: \"german\",\n\n  @doc(\"Selects the Microsoft tokenizer for Greek.\")\n  Greek: \"greek\",\n\n  @doc(\"Selects the Microsoft tokenizer for Gujarati.\")\n  Gujarati: \"gujarati\",\n\n  @doc(\"Selects the Microsoft tokenizer for Hebrew.\")\n  Hebrew: \"hebrew\",\n\n  @doc(\"Selects the Microsoft tokenizer for Hindi.\")\n  Hindi: \"hindi\",\n\n  @doc(\"Selects the Microsoft tokenizer for Hungarian.\")\n  Hungarian: \"hungarian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Icelandic.\")\n  Icelandic: \"icelandic\",\n\n  @doc(\"Selects the Microsoft tokenizer for Indonesian.\")\n  Indonesian: \"indonesian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Italian.\")\n  Italian: \"italian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Kannada.\")\n  Kannada: \"kannada\",\n\n  @doc(\"Selects the Microsoft tokenizer for Latvian.\")\n  Latvian: \"latvian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Lithuanian.\")\n  Lithuanian: \"lithuanian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Malay.\")\n  Malay: \"malay\",\n\n  @doc(\"Selects the Microsoft tokenizer for Malayalam.\")\n  Malayalam: \"malayalam\",\n\n  @doc(\"Selects the Microsoft tokenizer for Marathi.\")\n  Marathi: \"marathi\",\n\n  @doc(\"Selects the Microsoft tokenizer for  Norwegian (Bokm\u00e5l).\")\n  NorwegianBokmaal: \"norwegianBokmaal\",\n\n  @doc(\"Selects the Microsoft tokenizer for Polish.\")\n  Polish: \"polish\",\n\n  @doc(\"Selects the Microsoft tokenizer for Portuguese.\")\n  Portuguese: \"portuguese\",\n\n  @doc(\"Selects the Microsoft tokenizer for Portuguese (Brazil).\")\n  PortugueseBrazilian: \"portugueseBrazilian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Punjabi.\")\n  Punjabi: \"punjabi\",\n\n  @doc(\"Selects the Microsoft tokenizer for Romanian.\")\n  Romanian: \"romanian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Russian.\")\n  Russian: \"russian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Serbian (Cyrillic).\")\n  SerbianCyrillic: \"serbianCyrillic\",\n\n  @doc(\"Selects the Microsoft tokenizer for Serbian (Latin).\")\n  SerbianLatin: \"serbianLatin\",\n\n  @doc(\"Selects the Microsoft tokenizer for Slovak.\")\n  Slovak: \"slovak\",\n\n  @doc(\"Selects the Microsoft tokenizer for Slovenian.\")\n  Slovenian: \"slovenian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Spanish.\")\n  Spanish: \"spanish\",\n\n  @doc(\"Selects the Microsoft tokenizer for Swedish.\")\n  Swedish: \"swedish\",\n\n  @doc(\"Selects the Microsoft tokenizer for Tamil.\")\n  Tamil: \"tamil\",\n\n  @doc(\"Selects the Microsoft tokenizer for Telugu.\")\n  Telugu: \"telugu\",\n\n  @doc(\"Selects the Microsoft tokenizer for Turkish.\")\n  Turkish: \"turkish\",\n\n  @doc(\"Selects the Microsoft tokenizer for Ukrainian.\")\n  Ukrainian: \"ukrainian\",\n\n  @doc(\"Selects the Microsoft tokenizer for Urdu.\")\n  Urdu: \"urdu\",\n}\n\n@doc(\"Divides text using language-specific rules and reduces words to their base forms.\")\nmodel MicrosoftLanguageStemmingTokenizer extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.MicrosoftLanguageStemmingTokenizer\";\n\n  @doc(\"The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.\")\n  @maxValue(300)\n  maxTokenLength?: int32 = 255;\n\n  @doc(\"A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false.\")\n  isSearchTokenizer?: boolean = false;\n\n  @doc(\"The language to use. The default is English.\")\n  language?: MicrosoftStemmingTokenizerLanguage;\n}\n\n@doc(\"Lists the languages supported by the Microsoft language stemming  tokenizer.\")\nenum MicrosoftStemmingTokenizerLanguage {\n  @doc(\"Selects the Microsoft stemming tokenizer for Bangla.\")\n  Bangla: \"bangla\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Bulgarian.\")\n  Bulgarian: \"bulgarian\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Catalan.\")\n  Catalan: \"catalan\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Chinese (Simplified).\")\n  ChineseSimplified: \"chineseSimplified\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Chinese (Traditional).\")\n  ChineseTraditional: \"chineseTraditional\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Croatian.\")\n  Croatian: \"croatian\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Czech.\")\n  Czech: \"czech\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Danish.\")\n  Danish: \"danish\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Dutch.\")\n  Dutch: \"dutch\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for English.\")\n  English: \"english\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for French.\")\n  French: \"french\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for German.\")\n  German: \"german\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Greek.\")\n  Greek: \"greek\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Gujarati.\")\n  Gujarati: \"gujarati\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Hindi.\")\n  Hindi: \"hindi\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Icelandic.\")\n  Icelandic: \"icelandic\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Indonesian.\")\n  Indonesian: \"indonesian\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Italian.\")\n  Italian: \"italian\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Japanese.\")\n  Japanese: \"japanese\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Kannada.\")\n  Kannada: \"kannada\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Korean.\")\n  Korean: \"korean\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Malay.\")\n  Malay: \"malay\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Malayalam.\")\n  Malayalam: \"malayalam\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Marathi.\")\n  Marathi: \"marathi\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for  Norwegian (Bokm\u00e5l).\")\n  NorwegianBokmaal: \"norwegianBokmaal\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Polish.\")\n  Polish: \"polish\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Portuguese.\")\n  Portuguese: \"portuguese\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Portuguese (Brazil).\")\n  PortugueseBrazilian: \"portugueseBrazilian\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Punjabi.\")\n  Punjabi: \"punjabi\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Romanian.\")\n  Romanian: \"romanian\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Russian.\")\n  Russian: \"russian\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Serbian (Cyrillic).\")\n  SerbianCyrillic: \"serbianCyrillic\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Serbian (Latin).\")\n  SerbianLatin: \"serbianLatin\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Slovenian.\")\n  Slovenian: \"slovenian\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Spanish.\")\n  Spanish: \"spanish\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Swedish.\")\n  Swedish: \"swedish\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Tamil.\")\n  Tamil: \"tamil\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Telugu.\")\n  Telugu: \"telugu\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Thai.\")\n  Thai: \"thai\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Ukrainian.\")\n  Ukrainian: \"ukrainian\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Urdu.\")\n  Urdu: \"urdu\",\n\n  @doc(\"Selects the Microsoft stemming tokenizer for Vietnamese.\")\n  Vietnamese: \"vietnamese\",\n}\n\n@doc(\"Tokenizes the input into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene.\")\nmodel NGramTokenizer extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.NGramTokenizer\";\n\n  @doc(\"The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram.\")\n  @maxValue(300)\n  minGram?: int32 = 1;\n\n  @doc(\"The maximum n-gram length. Default is 2. Maximum is 300.\")\n  @maxValue(300)\n  maxGram?: int32 = 2;\n\n  @doc(\"Character classes to keep in the tokens.\")\n  tokenChars?: TokenCharacterKind[];\n}\n\n@doc(\"Tokenizer for path-like hierarchies. This tokenizer is implemented using Apache Lucene.\")\nmodel PathHierarchyTokenizerV2 extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.PathHierarchyTokenizerV2\";\n\n  @doc(\"The delimiter character to use. Default is \\\"/\\\".\")\n  @maxLength(1)\n  delimiter?: string = \"/\";\n\n  @doc(\"A value that, if set, replaces the delimiter character. Default is \\\"/\\\".\")\n  @maxLength(1)\n  replacement?: string = \"/\";\n\n  @doc(\"The maximum token length. Default and maximum is 300.\")\n  @maxValue(300)\n  maxTokenLength?: int32 = 300;\n\n  @doc(\"A value indicating whether to generate tokens in reverse order. Default is false.\")\n  // x-ms-client-name=ReverseTokenOrder\n  reverse?: boolean;\n\n  @doc(\"The number of initial tokens to skip. Default is 0.\")\n  skip?: int32 = 0;\n}\n\n@doc(\"Tokenizer that uses regex pattern matching to construct distinct tokens. This tokenizer is implemented using Apache Lucene.\")\nmodel PatternTokenizer extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.PatternTokenizer\";\n\n  @doc(\"A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters.\")\n  pattern?: string = \"\\\\W+\";\n\n  @doc(\"Regular expression flags.\")\n  flags?: RegexFlags;\n\n  @doc(\"The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1.\")\n  group?: int32 = -1;\n}\n\n@doc(\"Breaks text following the Unicode Text Segmentation rules. This tokenizer is implemented using Apache Lucene.\")\nmodel LuceneStandardTokenizer extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.StandardTokenizer\";\n\n  @doc(\"The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.\")\n  @maxValue(300)\n  maxTokenLength?: int32 = 255;\n}\n\n@doc(\"Breaks text following the Unicode Text Segmentation rules. This tokenizer is implemented using Apache Lucene.\")\nmodel LuceneStandardTokenizerV2 extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.StandardTokenizerV2\";\n\n  @doc(\"The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.\")\n  @maxValue(300)\n  maxTokenLength?: int32 = 255;\n}\n\n@doc(\"Tokenizes urls and emails as one token. This tokenizer is implemented using Apache Lucene.\")\nmodel UaxUrlEmailTokenizer extends LexicalTokenizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.UaxUrlEmailTokenizer\";\n\n  @doc(\"The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters.\")\n  @maxValue(300)\n  maxTokenLength?: int32 = 255;\n}\n\n@doc(\"Base type for token filters.\")\n@discriminator(\"@odata.type\")\nmodel TokenFilter {\n  @doc(\"The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters.\")\n  name: string;\n}\n\n@doc(\"Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \\\"Basic Latin\\\" Unicode block) into their ASCII equivalents, if such equivalents exist. This token filter is implemented using Apache Lucene.\")\nmodel AsciiFoldingTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.AsciiFoldingTokenFilter\";\n\n  @doc(\"A value indicating whether the original token will be kept. Default is false.\")\n  preserveOriginal?: boolean = false;\n}\n\n@doc(\"Scripts that can be ignored by CjkBigramTokenFilter.\")\nenum CjkBigramTokenFilterScripts {\n  @doc(\"Ignore Han script when forming bigrams of CJK terms.\")\n  Han: \"han\",\n\n  @doc(\"Ignore Hiragana script when forming bigrams of CJK terms.\")\n  Hiragana: \"hiragana\",\n\n  @doc(\"Ignore Katakana script when forming bigrams of CJK terms.\")\n  Katakana: \"katakana\",\n\n  @doc(\"Ignore Hangul script when forming bigrams of CJK terms.\")\n  Hangul: \"hangul\",\n}\n\n@doc(\"Forms bigrams of CJK terms that are generated from the standard tokenizer. This token filter is implemented using Apache Lucene.\")\nmodel CjkBigramTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.CjkBigramTokenFilter\";\n\n  @doc(\"The scripts to ignore.\")\n  ignoreScripts?: CjkBigramTokenFilterScripts[];\n\n  @doc(\"Forms bigrams of CJK terms that are generated from the standard tokenizer. This token filter is implemented using Apache Lucene.\")\n  outputUnigrams?: boolean;\n}\n\n@doc(\"Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. This token filter is implemented using Apache Lucene.\")\nmodel CommonGramTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.CommonGramTokenFilter\";\n\n  @doc(\"The set of common words.\")\n  commonWords: string[];\n\n  @doc(\"A value indicating whether common words matching will be case insensitive. Default is false.\")\n  ignoreCase?: boolean = false;\n\n  @doc(\"A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false.\")\n  @projectedName(\"json\", \"queryMode\")\n  useQueryMode?: boolean;\n}\n\n@doc(\"Decomposes compound words found in many Germanic languages. This token filter is implemented using Apache Lucene.\")\nmodel DictionaryDecompounderTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.DictionaryDecompounderTokenFilter\";\n\n  @doc(\"The list of words to match against.\")\n  wordList: string[];\n\n  @doc(\"The minimum word size. Only words longer than this get processed. Default is 5. Maximum is 300.\")\n  @maxValue(300)\n  minWordSize?: int32 = 5;\n\n  @doc(\"The minimum subword size. Only words longer than this get processed. Default is 5. Maximum is 300.\")\n  @maxValue(300)\n  minSubwordSize?: int32 = 2;\n\n  @doc(\"The maximum subword size. Only words longer than this get processed. Default is 5. Maximum is 300.\")\n  @maxValue(300)\n  maxSubwordSize?: int32 = 15;\n\n  @doc(\"A value indicating whether to add only the longest matching subword to the output. Default is false.\")\n  onlyLongestMatch?: boolean = false;\n}\n\n@doc(\"Specifies which side of the input an n-gram should be generated from.\")\nenum EdgeNGramTokenFilterSide {\n  @doc(\"Specifies that the n-gram should be generated from the front of the input.\")\n  Front: \"front\",\n\n  @doc(\"Specifies that the n-gram should be generated from the back of the input.\")\n  Back: \"back\",\n}\n\n@doc(\"Generates n-grams of the given size(s) starting from the front or the back of an input token. This token filter is implemented using Apache Lucene.\")\nmodel EdgeNGramTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.EdgeNGramTokenFilter\";\n\n  @doc(\"The minimum n-gram length. Default is 1. Must be less than the value of maxGram.\")\n  minGram?: int32 = 1;\n\n  @doc(\"The maximum n-gram length. Default is 2.\")\n  maxGram?: int32 = 2;\n\n  @doc(\"Specifies which side of the input the n-gram should be generated from. Default is \\\"front\\\".\")\n  side?: EdgeNGramTokenFilterSide; //= EdgeNGramTokenFilterSide.Front\n}\n\n@doc(\"Generates n-grams of the given size(s) starting from the front or the back of an input token. This token filter is implemented using Apache Lucene.\")\nmodel EdgeNGramTokenFilterV2 extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.EdgeNGramTokenFilterV2\";\n\n  @doc(\"The minimum n-gram length. Default is 1. Must be less than the value of maxGram.\")\n  minGram?: int32 = 1;\n\n  @doc(\"The maximum n-gram length. Default is 2.\")\n  maxGram?: int32 = 2;\n\n  @doc(\"Specifies which side of the input the n-gram should be generated from. Default is \\\"front\\\".\")\n  side?: EdgeNGramTokenFilterSide; //= EdgeNGramTokenFilterSide.Front\n}\n\n@doc(\"Removes elisions. For example, \\\"l'avion\\\" (the plane) will be converted to \\\"avion\\\" (plane). This token filter is implemented using Apache Lucene.\")\nmodel ElisionTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.ElisionTokenFilter\";\n\n  @doc(\"The set of articles to remove.\")\n  articles?: string[];\n}\n\n@doc(\"A token filter that only keeps tokens with text contained in a specified list of words. This token filter is implemented using Apache Lucene.\")\nmodel KeepTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.KeepTokenFilter\";\n\n  @doc(\"The list of words to keep.\")\n  keepWords: string[];\n\n  @doc(\"A value indicating whether to lower case all words first. Default is false.\")\n  @projectedName(\"json\", \"keepWordsCase\")\n  lowerCaseKeepWords?: boolean = false;\n}\n\n@doc(\"Marks terms as keywords. This token filter is implemented using Apache Lucene.\")\nmodel KeywordMarkerTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.KeywordMarkerTokenFilter\";\n\n  @doc(\"A list of words to mark as keywords.\")\n  keepWords: string[];\n\n  @doc(\"A value indicating whether to ignore case. If true, all words are converted to lower case first. Default is false.\")\n  ignoreCase?: boolean = false;\n}\n\n@doc(\"Removes words that are too long or too short. This token filter is implemented using Apache Lucene.\")\nmodel LengthTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.LengthTokenFilter\";\n\n  @doc(\"The minimum length in characters. Default is 0. Maximum is 300. Must be less than the value of max.\")\n  @maxValue(300)\n  @projectedName(\"json\", \"min\")\n  minLength?: int32 = 0;\n\n  @doc(\"The maximum  length in characters. Default is 0. Maximum is 300. Must be less than the value of max.\")\n  @maxValue(300)\n  @projectedName(\"json\", \"max\")\n  maxLength?: int32 = 300;\n}\n\n@doc(\"Limits the number of tokens while indexing. This token filter is implemented using Apache Lucene.\")\nmodel LimitTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.LimitTokenFilter\";\n\n  @doc(\"The maximum number of tokens to produce. Default is 1.\")\n  @maxValue(300)\n  maxTokenCount?: int32 = 1;\n\n  @doc(\"A value indicating whether all tokens from the input must be consumed even if maxTokenCount is reached. Default is false.\")\n  consumeAllTokens?: boolean = false;\n}\n\n@doc(\"Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene.\")\nmodel NGramTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.NGramTokenFilter\";\n\n  @doc(\"The minimum n-gram length. Default is 1. Must be less than the value of maxGram.\")\n  minGram?: int32 = 1;\n\n  @doc(\"The maximum n-gram length. Default is 2.\")\n  maxGram?: int32 = 2;\n}\n\n@doc(\"Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene.\")\nmodel NGramTokenFilterV2 extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.NGramTokenFilterV2\";\n\n  @doc(\"The minimum n-gram length. Default is 1. Must be less than the value of maxGram.\")\n  minGram?: int32 = 1;\n\n  @doc(\"The maximum n-gram length. Default is 2.\")\n  maxGram?: int32 = 2;\n}\n\n@doc(\"Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene.\")\nmodel PatternCaptureTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.PatternCaptureTokenFilter\";\n\n  @doc(\"A list of patterns to match against each token.\")\n  patterns: string[];\n\n  @doc(\"A value indicating whether to return the original token even if one of the patterns matches. Default is true.\")\n  preserveOriginal?: boolean = true;\n}\n\n@doc(\"A character filter that replaces characters in the input string. It uses a regular expression to identify character sequences to preserve and a replacement pattern to identify characters to replace. For example, given the input text \\\"aa bb aa bb\\\", pattern \\\"(aa)\\\\s+(bb)\\\", and replacement \\\"$1#$2\\\", the result would be \\\"aa#bb aa#bb\\\". This token filter is implemented using Apache Lucene.\")\nmodel PatternReplaceTokenFilter extends TokenFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.PatternReplaceTokenFilter\";\n\n  @doc(\"A regular expression pattern.\")\n  pattern: string;\n\n  @doc(\"The replacement text.\")\n  replacement: string;\n}\n\n@doc(\"Base type for character filters.\")\n@discriminator(\"@odata.type\")\nmodel CharFilter {\n  @doc(\"The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters.\")\n  name: string;\n}\n\n@doc(\"A character filter that applies mappings defined with the mappings option. Matching is greedy (longest pattern matching at a given point wins). Replacement is allowed to be the empty string. This character filter is implemented using Apache Lucene.\")\nmodel MappingCharFilter extends CharFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.MappingCharFilter\";\n\n  @doc(\"A list of mappings of the following format: \\\"a=>b\\\" (all occurrences of the character \\\"a\\\" will be replaced with character \\\"b\\\").\")\n  mappings: string[];\n}\n\n@doc(\"A character filter that replaces characters in the input string. It uses a regular expression to identify character sequences to preserve and a replacement pattern to identify characters to replace. For example, given the input text \\\"aa bb aa bb\\\", pattern \\\"(aa)\\\\s+(bb)\\\", and replacement \\\"$1#$2\\\", the result would be \\\"aa#bb aa#bb\\\". This character filter is implemented using Apache Lucene.\")\nmodel PatternReplaceCharFilter extends CharFilter {\n  `@odata.type`: \"#Microsoft.Azure.Search.PatternReplaceCharFilter\";\n\n  @doc(\"A regular expression pattern.\")\n  pattern: string;\n\n  @doc(\"The replacement text.\")\n  replacement: string;\n}\n\n@doc(\"Base type for similarity algorithms. Similarity algorithms are used to calculate scores that tie queries to documents. The higher the score, the more relevant the document is to that specific query. Those scores are used to rank the search results.\")\n@discriminator(\"@odata.type\")\nmodel Similarity {}\n\n@doc(\"Legacy similarity algorithm which uses the Lucene TFIDFSimilarity implementation of TF-IDF. This variation of TF-IDF introduces static document length normalization as well as coordinating factors that penalize documents that only partially match the searched queries.\")\nmodel ClassicSimilarity extends Similarity {\n  `@odata.type`: \"#Microsoft.Azure.Search.ClassicSimilarity\";\n}\n\n@doc(\"Ranking function based on the Okapi BM25 similarity algorithm. BM25 is a TF-IDF-like algorithm that includes length normalization (controlled by the 'b' parameter) as well as term frequency saturation (controlled by the 'k1' parameter).\")\nmodel BM25Similarity extends Similarity {\n  `@odata.type`: \"#Microsoft.Azure.Search.BM25Similarity\";\n\n  @doc(\"This property controls the scaling function between the term frequency of each matching terms and the final relevance score of a document-query pair. By default, a value of 1.2 is used. A value of 0.0 means the score does not scale with an increase in term frequency.\")\n  k1?: float64;\n\n  @doc(\"This property controls how the length of a document affects the relevance score. By default, a value of 0.75 is used. A value of 0.0 means no length normalization is applied, while a value of 1.0 means the score is fully normalized by the length of the document.\")\n  b?: float64;\n}\n\n@doc(\"Defines parameters for a search index that influence semantic capabilities.\")\nmodel SemanticSettings {\n  @doc(\"The semantic configurations for the index.\")\n  configurations: SemanticConfiguration[];\n}\n\n@doc(\"Defines a specific configuration to be used in the context of semantic capabilities.\")\nmodel SemanticConfiguration {\n  @doc(\"The name of the semantic configuration.\")\n  name: string;\n\n  @doc(\"Describes the title, content, and keyword fields to be used for semantic ranking, captions, highlights, and answers. At least one of the three sub properties (titleField, prioritizedKeywordsFields and prioritizedContentFields) need to be set.\")\n  prioritizedFields: PrioritizedFields;\n}\n\n@doc(\"Describes the title, content, and keywords fields to be used for semantic ranking, captions, highlights, and answers.\")\nmodel PrioritizedFields {\n  @doc(\"Defines the title field to be used for semantic ranking, captions, highlights, and answers. If you don't have a title field in your index, leave this blank.\")\n  titleField?: SemanticField[];\n\n  @doc(\"Defines the content fields to be used for semantic ranking, captions, highlights, and answers. For the best result, the selected fields should contain text in natural language form. The order of the fields in the array represents their priority. Fields with lower priority may get truncated if the content is long.\")\n  prioritizedContentFields?: SemanticField[];\n\n  @doc(\"Defines the keyword fields to be used for semantic ranking, captions, highlights, and answers. For the best result, the selected fields should contain a list of keywords. The order of the fields in the array represents their priority. Fields with lower priority may get truncated if the content is long.\")\n  prioritizedKeywordsFields?: SemanticField[];\n}\n\n@doc(\"A field that is used as part of the semantic configuration.\")\nmodel SemanticField {\n  @doc(\"Field name.\")\n  fieldName: string;\n}\n\n@doc(\"Base type for normalizers.\")\n@discriminator(\"@odata.type\")\nmodel LexicalNormalizer {\n  @doc(\"The name of the normalizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. It cannot end in '.microsoft' nor '.lucene', nor be named 'asciifolding', 'standard', 'lowercase', 'uppercase', or 'elision'.\")\n  name: string;\n}\n\n@doc(\"Allows you to configure normalization for filterable, sortable, and facetable fields, which by default operate with strict matching. This is a user-defined configuration consisting of at least one or more filters, which modify the token that is stored.\")\nmodel CustomNormalizer extends LexicalNormalizer {\n  `@odata.type`: \"#Microsoft.Azure.Search.CustomNormalizer\";\n\n  @doc(\"A list of token filters used to filter out or modify the input token. For example, you can specify a lowercase filter that converts all characters to lowercase. The filters are run in the order in which they are listed.\")\n  tokenFilters?: TokenFilterName[];\n\n  @doc(\"A list of character filters used to prepare input text before it is processed. For instance, they can replace certain characters or symbols. The filters are run in the order in which they are listed.\")\n  charFilters?: CharFilterName;\n}\n\n@doc(\"Defines the names of all text normalizers supported by Azure Cognitive Search.\")\nenum LexicalNormalizerName {\n  @doc(\"Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \\\"Basic Latin\\\" Unicode block) into their ASCII equivalents, if such equivalents exist. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html\")\n  Asciifolding: \"asciifolding\",\n\n  @doc(\"Removes elisions. For example, \\\"l'avion\\\" (the plane) will be converted to \\\"avion\\\" (plane). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html\")\n  Elision: \"elision\",\n\n  @doc(\"Normalizes token text to lowercase. See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.html\")\n  Lowercase: \"lowercase\",\n\n  @doc(\"Standard normalizer, which consists of lowercase and asciifolding. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html\")\n  Standard: \"standard\",\n\n  @doc(\"Normalizes token text to uppercase. See https://lucene.apache.org/core/6_6_1/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html\")\n  Uppercase: \"uppercase\",\n}\n\n@doc(\"Statistics for a given index. Statistics are collected periodically and are not guaranteed to always be up-to-date.\")\nmodel GetIndexStatisticsResult {\n  @doc(\"The number of documents in the index.\")\n  documentCount: int64;\n\n  @doc(\"The amount of storage in bytes consumed by the index.\")\n  storageSize: int64;\n}\n\n@doc(\"Specifies some text and analysis components used to break that text into tokens.\")\nmodel AnalyzeRequest {\n  @doc(\"The text to break into tokens.\")\n  text: string;\n\n  @doc(\"The name of the analyzer to use to break the given text.\")\n  analyzer?: LexicalAnalyzerName;\n\n  @doc(\"The name of the tokenizer to use to break the given text.\")\n  tokenizer?: LexicalTokenizerName;\n\n  @doc(\"The name of the normalizer to use to normalize the given text.\")\n  normalizer?: LexicalNormalizerName;\n\n  @doc(\"An optional list of token filters to use when breaking the given text.\")\n  tokenFilters?: TokenFilterName[];\n\n  @doc(\"An optional list of character filters to use when breaking the given text.\")\n  charFilters?: CharFilterName[];\n}\n\n@doc(\"The result of testing an analyzer on text.\")\nmodel AnalyzeResult {\n  @doc(\"The list of tokens returned by the analyzer specified in the request.\")\n  tokens: AnalyzedTokenInfo[];\n}\n\n@doc(\"Information about a token returned by an analyzer.\")\nmodel AnalyzedTokenInfo {\n  @doc(\"The token returned by the analyzer.\")\n  token: string;\n\n  @doc(\"The index of the first character of the token in the input text.\")\n  startOffset: int32;\n\n  @doc(\"The index of the last character of the token in the input text.\")\n  endOffset: int32;\n\n  @doc(\"The position of the token in the input text relative to other tokens. The first token in the input text has position 0, the next has position 1, and so on. Depending on the analyzer used, some tokens might have the same position, for example if they are synonyms of each other.\")\n  position: int32;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\search-index.models.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\search-index.models.tsp"}, {"file_content": "import \"./search-index.models.tsp\";\nimport \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"./common.tsp\";\n\nusing TypeSpec.Http;\n\nnamespace Azure.SearchService;\n\n@tag(\"Indexes\")\ninterface Indexes {\n  @route(\"/indexes\")\n  @doc(\"Lists all indexes available for a search service.\")\n  @get\n  list(...SelectParameter, ...ClientRequestIdParameter, ...ApiVersionParameter): CollectionResult<\n    SearchIndex,\n    \"Indexes\"\n  > | SearchError;\n\n  @route(\"/indexes\")\n  @doc(\"Creates a new search index.\")\n  @post\n  create(\n    @doc(\"The definition of the index to create.\")\n    @body\n    body: SearchIndex,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchCreatedResponse<SearchIndex> | SearchError;\n\n  @doc(\"Retrieves an index definition.\")\n  @route(\"/indexes('{indexName}')\")\n  @get\n  get(\n    @doc(\"The name of the index to retrieve.\")\n    @path\n    indexName: string,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchIndex | SearchError;\n\n  @doc(\"Creates a new search index or updates an index if it already exists.\")\n  @route(\"/indexes('{indexName}')\")\n  @put\n  createOrUpdate(\n    @doc(\"The name of the index to create or update.\")\n    @path\n    indexName: string,\n\n    @doc(\"The definition of the index to create or update.\")\n    @body\n    body: SearchIndex,\n\n    @doc(\"Allows new analyzers, tokenizers, token filters, or char filters to be added to an index by taking the index offline for at least a few seconds. This temporarily causes indexing and query requests to fail. Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes.\")\n    @query\n    allowIndexDowntime?: boolean,\n\n    ...ClientRequestIdParameter,\n    ...IfMatchParameter,\n    ...IfNoneMatchParameter,\n    ...PreferHeaderParameter,\n    ...ApiVersionParameter,\n  ): SearchIndex | SearchCreatedResponse<SearchIndex> | SearchError;\n\n  @doc(\"Deletes a search index and all the documents it contains. This operation is permanent, with no recovery option. Make sure you have a master copy of your index definition, data ingestion code, and a backup of the primary data source in case you need to re-build the index.\")\n  @route(\"/indexes('{indexName}')\")\n  @delete\n  delete(\n    @doc(\"The name of the index to delete.\")\n    @path\n    indexName: string,\n\n    ...ClientRequestIdParameter,\n    ...IfMatchParameter,\n    ...IfNoneMatchParameter,\n    ...ApiVersionParameter,\n  ): NoContentResponse | SearchError;\n\n  @doc(\"Returns statistics for the given index, including a document count and storage usage.\")\n  @route(\"/indexes('{indexName}')/search.stats\")\n  @get\n  getStatistics(\n    @doc(\"The name of the index for which to retrieve statistics.\")\n    @path\n    indexName: string,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): GetIndexStatisticsResult | SearchError;\n\n  @doc(\"Shows how an analyzer breaks text into tokens.\")\n  @route(\"/indexes('{indexName}')/search.analyze\")\n  @post\n  analyze(\n    @doc(\"The name of the index for which to test an analyzer.\")\n    @path\n    indexName: string,\n\n    @doc(\"The text and analyzer or analysis components to test.\")\n    @body\n    request: AnalyzeRequest,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): AnalyzeResult | SearchError;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\search-index.ops.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\search-index.ops.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\n\nimport \"./searchservice.models.tsp\";\n\n// TODO: Parameterized host. ISSUE: https://github.com/microsoft/typespec/issues/175\n@doc(\"Client that can be used to manage and query indexes and documents, as well as manage other resources, on a search service.\")\n@useAuth(\n  ApiKeyAuth<ApiKeyLocation.header, \"api-key\"> | OAuth2Auth<[\n    {\n      type: OAuth2FlowType.implicit,\n      authorizationUrl: \"https://login.contoso.com/common/oauth2/v2.0/authorize\",\n      scopes: [\"https://cognitiveservices.azure.com/.default\"],\n    }\n  ]>\n)\n@service({\n  title: \"Search Service\",\n  version: \"2021-04-30-Preview\",\n})\nnamespace Azure.SearchService;\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Rest.Resource;\nusing TypeSpec.OpenAPI;\n\n@tag(\"Indexers\")\ninterface IndexersApis {\n  @route(\"/indexers\")\n  @doc(\"Lists all indexers available for a search service.\")\n  @get\n  list(...SelectParameter, ...ClientRequestIdParameter, ...ApiVersionParameter): CollectionResult<\n    SearchIndexer,\n    \"Indexers\"\n  > | SearchError;\n\n  @route(\"/indexers\")\n  @doc(\"Creates a new search indexer.\")\n  @post\n  create(\n    @doc(\"The definition of the data source to create.\")\n    @body\n    body: SearchIndexer,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchCreatedResponse<SearchIndexer> | SearchError;\n\n  @doc(\"Retrieves an indexer definition.\")\n  @route(\"/indexers('{indexerName}')\")\n  @get\n  get(\n    @doc(\"The name of the data source to retrieve.\")\n    @path\n    indexerName: string,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchIndexer | SearchError;\n\n  @doc(\"Creates a new indexer or updates an indexer if it already exists.\")\n  @route(\"/indexers('{indexerName}')\")\n  @put\n  createOrUpdate(\n    @doc(\"The name of the indexer to create or update.\")\n    @path\n    indexerName: string,\n\n    @doc(\"The definition of the data source to create or update.\")\n    @body\n    body: SearchIndexer,\n\n    ...IgnoreResetRequirementsParameter,\n    ...DisableCacheReprocessingChangeDetectionParameter,\n    ...ClientRequestIdParameter,\n    ...IfMatchParameter,\n    ...IfNoneMatchParameter,\n    ...PreferHeaderParameter,\n    ...ApiVersionParameter,\n  ): SearchIndexer | SearchCreatedResponse<SearchIndexer> | SearchError;\n\n  @doc(\"Deletes a indexer.\")\n  @route(\"/indexers('{indexerName}')\")\n  @delete\n  delete(\n    @doc(\"The name of the indexer to delete.\")\n    @path\n    indexerName: string,\n\n    ...ClientRequestIdParameter,\n    ...IfMatchParameter,\n    ...IfNoneMatchParameter,\n    ...ApiVersionParameter,\n  ): NoContentResponse | NotFoundResponse | SearchError;\n\n  @doc(\"Resets the change tracking state associated with an indexer.\")\n  @route(\"/indexers('{indexerName}')/search.reset\")\n  @post\n  reset(\n    @doc(\"The name of the indexer to reset.\")\n    @path\n    indexerName: string,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): NoContentResponse | SearchError;\n\n  @doc(\"Resets specific documents in the datasource to be selectively re-ingested by the indexer.\")\n  @route(\"/indexers('{indexerName}')/search.resetdocs\")\n  @post\n  resetDocs(\n    @doc(\"The name of the indexer to reset.\")\n    @path\n    indexerName: string,\n\n    @doc(\"datasource document identifiers to be reset\")\n    @body\n    @projectedName(\"json\", \"keysOrIds\")\n    documentKeysOrIds: string[],\n\n    @doc(\"If false, keys or ids will be appended to existing ones. If true, only the keys or ids in this payload will be queued to be re-ingested.\")\n    @query\n    overwrite?: boolean = false,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): NoContentResponse | SearchError;\n\n  @doc(\"Runs an indexer on-demand.\")\n  @route(\"/indexers('{indexerName}')/search.run\")\n  @post\n  run(\n    @doc(\"The name of the indexer to reset.\")\n    @path\n    indexerName: string,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): AcceptedResponse | SearchError;\n\n  @doc(\"Returns the current status and execution history of an indexer.\")\n  @route(\"/indexers('{indexerName}')/search.status\")\n  @get\n  getStatus(\n    @doc(\"The name of the indexer for which to retrieve status.\")\n    @path\n    indexerName: string,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchIndexerStatus | SearchError;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\search-indexer.ops.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\search-indexer.ops.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\n\nimport \"./dataIdentity.model.tsp\";\nimport \"./dataPolicy.model.tsp\";\n\nusing TypeSpec.Rest;\nusing TypeSpec.Rest.Resource;\nusing TypeSpec.OpenAPI;\n\nnamespace Azure.SearchService;\n\nmodel SearchIndexerDataSource {\n  @doc(\"The name of the datasource.\")\n  @visibility(\"read\")\n  name: string;\n\n  @doc(\"The description of the datasource.\")\n  description?: string;\n\n  @doc(\"The type of the datasource.\")\n  type: SearchIndexerDataSourceType;\n\n  @doc(\"Credentials for the datasource.\")\n  credentials: DataSourceCredentials;\n\n  @doc(\"The data container for the datasource.\")\n  container: SearchIndexerDataContainer;\n\n  @doc(\"An explicit managed identity to use for this datasource. If not specified and the connection string is a managed identity, the system-assigned managed identity is used. If not specified, the value remains unchanged. If ',none,' is specified, the value of this property is cleared.\")\n  identity?: SearchIndexerDataIdentity;\n\n  @doc(\"The data change detection policy for the datasource.\")\n  dataChangeDetectionPolicy?: DataChangeDetectionPolicy;\n\n  @doc(\"The data deletion detection policy for the datasource.\")\n  dataDeletionDetectionPolicy?: DataDeletionDetectionPolicy;\n\n  ...ETag;\n\n  @doc(\"A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your datasource definition when you want full assurance that no one, not even Microsoft, can decrypt your data source definition in Azure Cognitive Search. Once you have encrypted your data source definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your datasource definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019.\")\n  encryptionKey?: SearchResourceEncryptionKey;\n}\n\nmodel SearchResourceEncryptionKey {\n  @doc(\"The name of your Azure Key Vault key to be used to encrypt your data at rest.\")\n  @projectedName(\"json\", \"keyVaultKeyName\")\n  keyName: string;\n\n  @doc(\"The version of your Azure Key Vault key to be used to encrypt your data at rest.\")\n  @projectedName(\"json\", \"keyVaultKeyVersion\")\n  keyVersion: string;\n\n  @doc(\"The URI of your Azure Key Vault, also referred to as DNS name, that contains the key to be used to encrypt your data at rest. An example URI might be https://my-keyvault-name.vault.azure.net.\")\n  @projectedName(\"json\", \"keyVaultUri\")\n  vaultUri: string;\n\n  @doc(\"Optional Azure Active Directory credentials used for accessing your Azure Key Vault. Not required if using managed identity instead.\")\n  accessCredentials?: AzureActiveDirectoryApplicationCredentials;\n\n  @doc(\"An explicit managed identity to use for this encryption key. If not specified and the access credentials property is null, the system-assigned managed identity is used. On update to the resource, if the explicit identity is unspecified, it remains unchanged. If none is specified, the value of this property is cleared.\")\n  identity?: SearchIndexerDataIdentity;\n}\n\nmodel AzureActiveDirectoryApplicationCredentials {\n  @doc(\"An AAD Application ID that was granted the required access permissions to the Azure Key Vault that is to be used when encrypting your data at rest. The Application ID should not be confused with the Object ID for your AAD Application.\")\n  applicationId?: string;\n\n  @doc(\"The authentication key of the specified AAD application.\")\n  applicationSecret?: string;\n}\n\nenum SearchIndexerDataSourceType {\n  @doc(\"Indicates an Azure SQL datasource.\")\n  AzureSql: \"azuresql\",\n\n  @doc(\"Indicates a CosmosDB datasource.\")\n  CosmosDb: \"cosmosdb\",\n\n  @doc(\"Indicates an Azure Blob datasource.\")\n  AzureBlob: \"azureblob\",\n\n  @doc(\"Indicates an Azure Table datasource.\")\n  AzureTable: \"azuretable\",\n\n  @doc(\"Indicates a MySql datasource.\")\n  MySql: \"mysql\",\n\n  @doc(\"Indicates an ADLS Gen2 datasource.\")\n  AdlsGen2: \"adlsgen2\",\n}\n\n@doc(\"Represents credentials that can be used to connect to a datasource.\")\nmodel DataSourceCredentials {\n  @doc(\"The connection string for the datasource. Set to '<unchanged>' if you do not want the connection string updated.\")\n  connectionString?: string;\n}\n\n@doc(\"Represents information about the entity (such as Azure SQL table or CosmosDB collection) that will be indexed.\")\nmodel SearchIndexerDataContainer {\n  @doc(\"The name of the table or view (for Azure SQL data source) or collection (for CosmosDB data source) that will be indexed.\")\n  name: string;\n\n  @doc(\"A query that is applied to this data container. The syntax and meaning of this parameter is datasource-specific. Not supported by Azure SQL datasources.\")\n  query?: string;\n}\n\nmodel SearchIndexer {\n  @doc(\"The name of the indexer.\")\n  name: string;\n\n  @doc(\"The description of the indexer.\")\n  description?: string;\n\n  @doc(\"The name of the datasource from which this indexer reads data.\")\n  dataSourceName: string;\n\n  @doc(\"The name of the skillset executing with this indexer.\")\n  skillsetName?: string;\n\n  @doc(\"The name of the index to which this indexer writes data.\")\n  targetIndexName: string;\n\n  @doc(\"The schedule for this indexer.\")\n  schedule?: IndexingSchedule;\n\n  @doc(\"Parameters for indexer execution.\")\n  parameters?: IndexingParameters;\n\n  @doc(\"Defines mappings between fields in the data source and corresponding target fields in the index.\")\n  fieldMappings?: FieldMapping;\n\n  @doc(\"Output field mappings are applied after enrichment and immediately before indexing.\")\n  outputFieldMappings?: FieldMapping;\n\n  @doc(\"A value indicating whether the indexer is disabled. Default is false.\")\n  disabled?: boolean = false;\n\n  ...ETag;\n\n  @doc(\"A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your indexer definition (as well as indexer execution status) when you want full assurance that no one, not even Microsoft, can decrypt them in Azure Cognitive Search. Once you have encrypted your indexer definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your indexer definition (and indexer execution status) will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019.\")\n  encryptionKey?: SearchResourceEncryptionKey;\n\n  @doc(\"Adds caching to an enrichment pipeline to allow for incremental modification steps without having to rebuild the index every time.\")\n  cache?: SearchIndexerCache;\n}\n\n@doc(\"Response from a get service statistics request. If successful, it includes service level counters and limits.\")\nmodel ServiceStatistics {\n  @doc(\"Service level resource counters.\")\n  counters?: ServiceCounters;\n\n  @doc(\"Service level general limits.\")\n  limits?: ServiceLimits;\n}\n\nmodel ServiceCounters {\n  @doc(\"Total number of documents across all indexes in the service.\")\n  documentCount?: ResourceCounter;\n\n  @doc(\"Total number of indexes.\")\n  indexesCount?: ResourceCounter;\n\n  @doc(\"Total number of indexers.\")\n  indexersCount?: ResourceCounter;\n\n  @doc(\"Total number of data sources.\")\n  dataSourcesCount?: ResourceCounter;\n\n  @doc(\"Total size of used storage in bytes.\")\n  storageSize?: ResourceCounter;\n\n  @doc(\"Total number of synonym maps.\")\n  synonymMaps?: ResourceCounter;\n\n  @doc(\"Total number of skillsets.\")\n  skillsetCount?: ResourceCounter;\n}\n\nmodel ServiceLimits {\n  @doc(\"The maximum allowed fields per index.\")\n  maxFieldsPerIndex?: int32;\n\n  @doc(\"The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3.\")\n  maxFieldNestingDepthPerIndex?: int32;\n\n  @doc(\"The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index.\")\n  maxComplexCollectionFieldsPerIndex?: int32;\n\n  @doc(\"The maximum number of objects in complex collections allowed per document.\")\n  maxComplexObjectsInCollectionsPerDocument?: int32;\n}\n\nmodel ResourceCounter {\n  @doc(\"The resource usage amount.\")\n  usage: int64;\n\n  @doc(\"The resource amount quota.\")\n  quota?: int64;\n}\n\n@doc(\"Represents a schedule for indexer execution.\")\nmodel IndexingSchedule {\n  @doc(\"The interval of time between indexer executions.\")\n  //@format(\"duration\")\n  interval: string;\n\n  @doc(\"The time when an indexer should start running.\")\n  startTime?: utcDateTime;\n}\n\n@doc(\"Represents parameters for indexer execution.\")\nmodel IndexingParameters {\n  @doc(\"The number of items that are read from the data source and indexed as a single batch in order to improve performance. The default depends on the data source type.\")\n  batchSize?: int32;\n\n  @doc(\"The maximum number of items that can fail indexing for indexer execution to still be considered successful. -1 means no limit. Default is 0.\")\n  maxFailedItems?: int32;\n\n  @doc(\"The maximum number of items in a single batch that can fail indexing for the batch to still be considered successful. -1 means no limit. Default is 0.\")\n  maxFailedItemsPerBatch?: int32;\n\n  configuration?: IndexingParametersConfiguration;\n}\n\n@doc(\"A dictionary of indexer-specific configuration properties. Each name is the name of a specific property. Each value must be of a primitive type.\")\nmodel IndexingParametersConfiguration {\n  parsingMode?: BlobIndexerParsingMode;\n\n  @doc(\"Comma-delimited list of filename extensions to ignore when processing from Azure blob storage.  For example, you could exclude '.png, .mp4' to skip over those files during indexing.\")\n  excludedFileNameExtensions?: string;\n\n  @doc(\"Comma-delimited list of filename extensions to select when processing from Azure blob storage.  For example, you could focus indexing on specific application files '.docx, .pptx, .msg' to specifically include those file types.\")\n  indexedFileNameExtensions?: string;\n\n  @doc(\"For Azure blobs, set to false if you want to continue indexing when an unsupported content type is encountered, and you don't know all the content types (file extensions) in advance.\")\n  failOnUnsupportedContentType?: boolean = false;\n\n  @doc(\"For Azure blobs, set to false if you want to continue indexing if a document fails indexing.\")\n  failOnUnprocessableDocument?: boolean = false;\n\n  @doc(\"For Azure blobs, set this property to true to still index storage metadata for blob content that is too large to process. Oversized blobs are treated as errors by default. For limits on blob size, see https://docs.microsoft.com/azure/search/search-limits-quotas-capacity.\")\n  indexStorageMetadataOnlyForOversizedDocuments?: boolean = false;\n\n  @doc(\"For CSV blobs, specifies a comma-delimited list of column headers, useful for mapping source fields to destination fields in an index.\")\n  delimitedTextHeaders?: string;\n\n  @doc(\"For CSV blobs, specifies the end-of-line single-character delimiter for CSV files where each line starts a new document (for example, \\\" | \\\").\")\n  delimitedTextDelimiter?: string;\n\n  @doc(\"For CSV blobs, indicates that the first (non-blank) line of each blob contains headers.\")\n  firstLineContainsHeaders?: boolean = true;\n\n  @doc(\"For JSON arrays, given a structured or semi-structured document, you can specify a path to the array using this property.\")\n  documentRoot?: string;\n\n  dataToExtract?: BlobIndexerDataToExtract;\n  imageAction?: BlobIndexerImageAction;\n\n  @doc(\"If true, will create a path //document//file_data that is an object representing the original file data downloaded from your blob data source.  This allows you to pass the original file data to a custom skill for processing within the enrichment pipeline, or to the Document Extraction skill.\")\n  allowSkillsetToReadFileData?: boolean = false;\n\n  pdfTextRotationAlgorithm?: BlobIndexerPDFTextRotationAlgorithm;\n  executionEnvironment?: IndexerExecutionEnvironment;\n\n  @doc(\"Increases the timeout beyond the 5-minute default for Azure SQL database data sources, specified in the format 'hh:mm:ss'.\")\n  queryTimeout?: string = \"00:05:00\";\n}\n\n@doc(\"Represents the parsing mode for indexing from an Azure blob data source.\")\nenum BlobIndexerParsingMode {\n  @doc(\"Set to default for normal file processing.\")\n  Default: \"default\",\n\n  @doc(\"Set to text to improve indexing performance on plain text files in blob storage.\")\n  Text: \"text\",\n\n  @doc(\"Set to delimitedText when blobs are plain CSV files.\")\n  DelimitedText: \"delimitedText\",\n\n  @doc(\"Set to json to extract structured content from JSON files.\")\n  Json: \"json\",\n\n  @doc(\"Set to jsonArray to extract individual elements of a JSON array as separate documents in Azure Cognitive Search.\")\n  JsonArray: \"jsonArray\",\n\n  @doc(\"Set to jsonLines to extract individual JSON entities, separated by a new line, as separate documents in Azure Cognitive Search.\")\n  JsonLines: \"jsonLines\",\n}\n\n@doc(\"Specifies the data to extract from Azure blob storage and tells the indexer which data to extract from image content when \\\"imageAction\\\" is set to a value other than \\\"none\\\".  This applies to embedded image content in a .PDF or other application, or image files such as .jpg and .png, in Azure blobs.\")\nenum BlobIndexerDataToExtract {\n  @doc(\"Indexes just the standard blob properties and user-specified metadata.\")\n  StorageMetadata: \"storageMetadata\",\n\n  @doc(\"Extracts metadata provided by the Azure blob storage subsystem and the content-type specific metadata (for example, metadata unique to just .png files are indexed).\")\n  AllMetadata: \"allMetadata\",\n\n  @doc(\"Extracts all metadata and textual content from each blob.\")\n  ContentAndMetadata: \"contentAndMetadata\",\n}\n\n@doc(\"Determines how to process embedded images and image files in Azure blob storage.  Setting the \\\"imageAction\\\" configuration to any value other than \\\"none\\\" requires that a skillset also be attached to that indexer.\")\nenum BlobIndexerImageAction {\n  @doc(\"Ignores embedded images or image files in the data set.  This is the default.\")\n  None: \"none\",\n\n  @doc(\"Extracts text from images (for example, the word \\\"STOP\\\" from a traffic stop sign), and embeds it into the content field.  This action requires that \\\"dataToExtract\\\" is set to \\\"contentAndMetadata\\\".  A normalized image refers to additional processing resulting in uniform image output, sized and rotated to promote consistent rendering when you include images in visual search results. This information is generated for each image when you use this option.\")\n  GenerateNormalizedImages: \"generateNormalizedImages\",\n\n  @doc(\"Extracts text from images (for example, the word \\\"STOP\\\" from a traffic stop sign), and embeds it into the content field, but treats PDF files differently in that each page will be rendered as an image and normalized accordingly, instead of extracting embedded images.  Non-PDF file types will be treated the same as if \\\"generateNormalizedImages\\\" was set.\")\n  GenerateNormalizedImagePerPage: \"generateNormalizedImagePerPage\",\n}\n\n@doc(\"Determines algorithm for text extraction from PDF files in Azure blob storage.\")\nenum BlobIndexerPDFTextRotationAlgorithm {\n  @doc(\"Leverages normal text extraction.  This is the default.\")\n  None: \"none\",\n\n  @doc(\"May produce better and more readable text extraction from PDF files that have rotated text within them.  Note that there may be a small performance speed impact when this parameter is used.  This parameter only applies to PDF files, and only to PDFs with embedded text.  If the rotated text appears within an embedded image in the PDF, this parameter does not apply.\")\n  DetectAngles: \"detectAngles\",\n}\n\n@doc(\"Specifies the environment in which the indexer should execute.\")\nenum IndexerExecutionEnvironment {\n  @doc(\"Indicates that Azure Cognitive Search can determine where the indexer should execute. This is the default environment when nothing is specified and is the recommended value.\")\n  standard,\n\n  @doc(\"Indicates that the indexer should run with the environment provisioned specifically for the search service. This should only be specified as the execution environment if the indexer needs to access resources securely over shared private link resources.\")\n  private,\n}\n\n@doc(\"Defines a mapping between a field in a data source and a target field in an index.\")\nmodel FieldMapping {\n  @doc(\"The name of the field in the data source.\")\n  sourceFieldName: string;\n\n  @doc(\"The name of the target field in the index. Same as the source field name by default.\")\n  targetFieldName?: string;\n\n  @doc(\"A function to apply to each source field value before indexing.\")\n  mappingFunction?: FieldMappingFunction;\n}\n\n@doc(\"Represents a function that transforms a value from a data source before indexing.\")\nmodel FieldMappingFunction {\n  @doc(\"The name of the field mapping function.\")\n  name: string;\n\n  @doc(\"A dictionary of parameter name/value pairs to pass to the function. Each value must be of a primitive type.\")\n  parameters?: Record<string>;\n}\n\nmodel SearchIndexerCache {\n  @doc(\"The connection string to the storage account where the cache data will be persisted.\")\n  storageConnectionString?: string;\n\n  @doc(\"Specifies whether incremental reprocessing is enabled.\")\n  enableReprocessing?: boolean;\n}\n\n@doc(\"Represents the current status and execution history of an indexer.\")\nmodel SearchIndexerStatus {\n  @doc(\"Overall indexer status.\")\n  status: IndexerStatus;\n\n  @doc(\"The result of the most recent or an in-progress indexer execution.\")\n  lastResult?: IndexerExecutionResult;\n\n  @doc(\"History of the recent indexer executions, sorted in reverse chronological order.\")\n  executionHistory: IndexerExecutionResult[];\n\n  @doc(\"The execution limits for the indexer.\")\n  limits: SearchIndexerLimits;\n}\n\n@doc(\"Represents the overall indexer status.\")\nenum IndexerStatus {\n  @doc(\"Indicates that the indexer is in an unknown state.\")\n  Unknown: \"unknown\",\n\n  @doc(\"Indicates that the indexer experienced an error that cannot be corrected without human intervention.\")\n  Error: \"error\",\n\n  @doc(\"Indicates that the indexer is running normally.\")\n  Running: \"running\",\n}\n\n@doc(\"Represents the result of an individual indexer execution.\")\nmodel IndexerExecutionResult {\n  @doc(\"The outcome of this indexer execution.\")\n  status: IndexerExecutionStatus;\n\n  @doc(\"The outcome of this indexer execution.\")\n  statusDetail?: IndexerExecutionStatusDetail;\n\n  @doc(\"All of the state that defines and dictates the indexer's current execution.\")\n  currentState?: IndexerCurrentState;\n\n  @doc(\"The error message indicating the top-level error, if any.\")\n  errorMessage?: string;\n\n  @doc(\"The start time of this indexer execution.\")\n  startTime?: utcDateTime;\n\n  @doc(\"The end time of this indexer execution, if the execution has already completed.\")\n  endTime?: utcDateTime;\n\n  @doc(\"The item-level indexing errors.\")\n  @visibility(\"read\")\n  errors: SearchIndexerError[];\n\n  @doc(\"The item-level indexing warnings.\")\n  @visibility(\"read\")\n  warnings: SearchIndexerWarning[];\n\n  @doc(\"The number of items that were processed during this indexer execution. This includes both successfully processed items and items where indexing was attempted but failed.\")\n  @projectedName(\"json\", \"itemsProcessed\")\n  @visibility(\"read\")\n  itemCount: int32;\n\n  @doc(\"The number of items that failed to be indexed during this indexer execution.\")\n  @visibility(\"read\")\n  @projectedName(\"json\", \"itemsFailed\")\n  failedItemCount: int32;\n\n  @doc(\"Change tracking state with which an indexer execution started.\")\n  @visibility(\"read\")\n  initialTrackingState?: string;\n\n  @doc(\"Change tracking state with which an indexer execution finished.\")\n  @visibility(\"read\")\n  finalTrackingState?: string;\n}\n\n@doc(\"Represents the status of an individual indexer execution.\")\nenum IndexerExecutionStatus {\n  @doc(\"An indexer invocation has failed, but the failure may be transient. Indexer invocations will continue per schedule.\")\n  TransientFailure: \"transientFailure\",\n\n  @doc(\"Indexer execution completed successfully.\")\n  Success: \"success\",\n\n  @doc(\"Indexer execution is in progress.\")\n  InProgress: \"inProgress\",\n\n  @doc(\"Indexer has been reset.\")\n  Reset: \"reset\",\n}\n\n@doc(\"Details the status of an individual indexer execution.\")\nenum IndexerExecutionStatusDetail {\n  @doc(\"Indicates that the reset that occurred was for a call to ResetDocs.\")\n  ResetDocs: \"resetDocs\",\n}\n\n@doc(\"Represents all of the state that defines and dictates the indexer's current execution.\")\nmodel IndexerCurrentState {\n  @doc(\"The mode the indexer is running in.\")\n  mode?: IndexingMode;\n\n  @doc(\"Change tracking state used when indexing starts on all documents in the datasource.\")\n  allDocsInitialChangeTrackingState?: string;\n\n  @doc(\"Change tracking state value when indexing finishes on all documents in the datasource.\")\n  allDocsFinalChangeTrackingState?: string;\n\n  @doc(\"Change tracking state used when indexing starts on select, reset documents in the datasource.\")\n  resetDocsInitialChangeTrackingState?: string;\n\n  @doc(\"Change tracking state value when indexing finishes on select, reset documents in the datasource.\")\n  resetDocsFinalChangeTrackingState?: string;\n\n  @doc(\"The list of document keys that have been reset. The document key is the document's unique identifier for the data in the search index. The indexer will prioritize selectively re-ingesting these keys.\")\n  resetDocumentKeys?: string[];\n\n  @doc(\"The list of datasource document ids that have been reset. The datasource document id is the unique identifier for the data in the datasource. The indexer will prioritize selectively re-ingesting these ids.\")\n  resetDatasourceDocumentIds?: string[];\n}\n\n@doc(\"Represents the mode the indexer is executing in.\")\nenum IndexingMode {\n  @doc(\"The indexer is indexing all documents in the datasource.\")\n  IndexingAllDocs: \"indexingAllDocs\",\n\n  @doc(\"The indexer is indexing selective, reset documents in the datasource. The documents being indexed are defined on indexer status.\")\n  IndexingResetDocs: \"indexingResetDocs\",\n}\n\n@doc(\"Represents an item- or document-level indexing error.\")\nmodel SearchIndexerError {\n  @doc(\"The key of the item for which indexing failed.\")\n  key?: string;\n\n  @doc(\"The message describing the error that occurred while processing the item.\")\n  errorMessage: string;\n\n  @doc(\"The status code indicating why the indexing operation failed. Possible values include: 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy.\")\n  statusCode: int32;\n\n  @doc(\"The name of the source at which the error originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available.\")\n  name?: string;\n\n  @doc(\"Additional, verbose details about the error to assist in debugging the indexer. This may not be always available.\")\n  details?: string;\n\n  @doc(\"A link to a troubleshooting guide for these classes of errors. This may not be always available.\")\n  documentationLink?: string;\n}\n\n@doc(\"Represents an item-level warning.\")\nmodel SearchIndexerWarning {\n  @doc(\"The key of the item which generated a warning.\")\n  key?: string;\n\n  @doc(\"The message describing the warning that occurred while processing the item.\")\n  message: string;\n\n  @doc(\"The name of the source at which the warning originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available.\")\n  name?: string;\n\n  @doc(\"Additional, verbose details about the warning to assist in debugging the indexer. This may not be always available.\")\n  details?: string;\n\n  @doc(\"A link to a troubleshooting guide for these classes of warnings. This may not be always available.\")\n  documentationLink?: string;\n}\n\nmodel SearchIndexerLimits {\n  @doc(\"The maximum duration that the indexer is permitted to run for one execution.\")\n  maxRunTime?: string;\n\n  @doc(\"The maximum size of a document, in bytes, which will be considered valid for indexing.\")\n  maxDocumentExtractionSize?: int64;\n\n  @doc(\"The maximum number of characters that will be extracted from a document picked up for indexing.\")\n  maxDocumentContentCharactersToExtract?: int64;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\searchservice.models.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\searchservice.models.tsp"}, {"file_content": "import \"./languages.tsp\";\nimport \"./searchservice.models.tsp\";\n\nusing TypeSpec.OpenAPI;\nusing TypeSpec.Rest;\n\nnamespace Azure.SearchService;\n\n@doc(\"A list of skills.\")\nmodel SearchIndexerSkillset {\n  ...ETag;\n\n  @doc(\"The name of the skillset.\")\n  name: string;\n\n  @doc(\"The description of the skillset.\")\n  description?: string;\n\n  @doc(\"A list of skills in the skillset.\")\n  skills: SearchIndexerSkill[];\n\n  @doc(\"Details about cognitive services to be used when running skills.\")\n  @projectedName(\"json\", \"cognitiveServices\")\n  cognitiveServicesAccount?: CognitiveServicesAccount;\n\n  @doc(\"Definition of additional projections to azure blob, table, or files, of enriched data.\")\n  knowledgeStore?: SearchIndexerKnowledgeStore;\n\n  @doc(\"A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your skillset definition when you want full assurance that no one, not even Microsoft, can decrypt your skillset definition in Azure Cognitive Search. Once you have encrypted your skillset definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your skillset definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019.\")\n  encryptionKey?: SearchResourceEncryptionKey | null;\n}\n\n@discriminator(\"@odata.type\")\n@doc(\"Base type for skills.\")\nmodel SearchIndexerSkill {\n  @doc(\"The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'.\")\n  name: string;\n\n  @doc(\"The description of the skill which describes the inputs, outputs, and usage of the skill.\")\n  description?: string;\n\n  @doc(\"Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document.\")\n  context?: string;\n\n  @doc(\"Inputs of the skills could be a column in the source data set, or the output of an upstream skill.\")\n  inputs: InputFieldMappingEntry[];\n\n  @doc(\"The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill.\")\n  outputs: OutputFieldMappingEntry[];\n}\n\n@doc(\"Input field mapping for a skill.\")\nmodel InputFieldMappingEntry {\n  @doc(\"The name of the input.\")\n  name: string;\n\n  @doc(\"The source of the input.\")\n  source?: string;\n\n  @doc(\"The source context used for selecting recursive inputs.\")\n  sourceContext?: string;\n\n  @doc(\"The recursive inputs used when creating a complex type.\")\n  inputs?: InputFieldMappingEntry[];\n}\n\n@doc(\"Output field mapping for a skill.\")\nmodel OutputFieldMappingEntry {\n  @doc(\"The name of the output defined by the skill.\")\n  name: string;\n\n  @doc(\"The target name of the output. It is optional and default to name.\")\n  targetName?: string;\n}\n\n@doc(\"A skill that enables scenarios that require a Boolean operation to determine the data to assign to an output.\")\nmodel ConditionalSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Util.ConditionalSkill\";\n}\n\n@doc(\"A skill that uses text analytics for key phrase extraction.\")\nmodel KeyPhraseExtractionSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.KeyPhraseExtractionSkill\";\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: KeyPhraseExtractionSkillLanguage;\n\n  @doc(\"A number indicating how many key phrases to return. If absent, all identified key phrases will be returned.\")\n  maxKeyPhraseCount?: int32;\n\n  @doc(\"The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary.\")\n  modelVersion?: string;\n}\n\n@doc(\"A skill that uses text analytics for key phrase extraction.\")\nmodel OcrSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Vision.OcrSkill\";\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: OcrSkillLanguage;\n\n  @doc(\"A value indicating to turn orientation detection on or not. Default is false.\")\n  @projectedName(\"json\", \"detectOrientation\")\n  shouldDetectOrientation?: boolean = false;\n\n  @doc(\"Defines the sequence of characters to use between the lines of text recognized by the OCR skill. The default value is \\\"space\\\".\")\n  lineEnding?: LineEnding; // = LineEnding.Space https://github.com/microsoft/typespec/issues/130\n}\n\nenum LineEnding {\n  @doc(\"Lines are separated by a single space character.\")\n  Space: \"space\",\n\n  @doc(\"Lines are separated by a carriage return ('\\\\r') character.\")\n  CarriageReturn: \"carriageReturn\",\n\n  @doc(\"Lines are separated by a single line feed ('\\\\n') character.\")\n  LineFeed: \"lineFeed\",\n\n  @doc(\"Lines are separated by a carriage return and a line feed ('\\\\r\\\\n') character.\")\n  CarriageReturnLineFeed: \"carriageReturnLineFeed\",\n}\n\n@doc(\"A skill that analyzes image files. It extracts a rich set of visual features based on the image content.\")\nmodel ImageAnalysisSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Vision.ImageAnalysisSkill\";\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: ImageAnalysisSkillLanguage;\n\n  @doc(\"A list of visual features.\")\n  visualFeatures: VisualFeature[];\n\n  @doc(\"A string indicating which domain-specific details to return.\")\n  details: ImageDetail[];\n}\n\n@doc(\"The strings indicating what visual feature types to return.\")\nenum VisualFeature {\n  @doc(\"Visual features recognized as adult persons.\")\n  Adult: \"adult\",\n\n  @doc(\"Visual features recognized as commercial brands.\")\n  Brands: \"brands\",\n\n  @doc(\"Categories.\")\n  Categories: \"categories\",\n\n  @doc(\"Description.\")\n  Description: \"description\",\n\n  @doc(\"Visual features recognized as people faces.\")\n  Faces: \"faces\",\n\n  @doc(\"Visual features recognized as objects.\")\n  Objects: \"objects\",\n\n  @doc(\"Tags.\")\n  Tags: \"tags\",\n}\n\n@doc(\"A string indicating which domain-specific details to return.\")\nenum ImageDetail {\n  @doc(\"Details recognized as celebrities.\")\n  Celebrities: \"celebrities\",\n\n  @doc(\"Details recognized as landmarks.\")\n  Landmarks: \"landmarks\",\n}\n\n@doc(\"A skill that detects the language of input text and reports a single language code for every document submitted on the request. The language code is paired with a score indicating the confidence of the analysis.\")\nmodel LanguageDetectionSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.LanguageDetectionSkill\";\n\n  @doc(\"A country code to use as a hint to the language detection model if it cannot disambiguate the language.\")\n  defaultCountryHint?: string;\n\n  @doc(\"The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary.\")\n  modelVersion?: string;\n}\n\n@doc(\"A skill for reshaping the outputs. It creates a complex type to support composite fields (also known as multipart fields).\")\nmodel ShaperSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Util.ShaperSkill\";\n}\n\n@doc(\"A skill for merging two or more strings into a single unified string, with an optional user-defined delimiter separating each component part.\")\nmodel MergeSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.MergeSkill\";\n\n  @doc(\"The tag indicates the start of the merged text. By default, the tag is an empty space.\")\n  insertPreTag?: string = \" \";\n\n  @doc(\"The tag indicates the end of the merged text. By default, the tag is an empty space.\")\n  insertPostTag?: string = \" \";\n}\n\n@doc(\"Text analytics entity recognition.\")\nmodel EntityRecognitionSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.EntityRecognitionSkill\";\n\n  @doc(\"A list of entity categories that should be extracted.\")\n  categories?: EntityCategory[];\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: EntityRecognitionSkillLanguage;\n\n  @doc(\"Determines whether or not to include entities which are well known but don't conform to a pre-defined type. If this configuration is not set (default), set to null or set to false, entities which don't conform to one of the pre-defined types will not be surfaced.\")\n  includeTypelessEntities?: boolean;\n\n  @doc(\"A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included.\")\n  minimumPrecision?: float64;\n}\n\n@doc(\"A string indicating what entity categories to return.\")\nenum EntityCategory {\n  @doc(\"Entities describing a physical location.\")\n  Location: \"location\",\n\n  @doc(\"Entities describing an organization.\")\n  Organization: \"organization\",\n\n  @doc(\"Entities describing a person.\")\n  Person: \"person\",\n\n  @doc(\"Entities describing a quantity.\")\n  Quantity: \"quantity\",\n\n  @doc(\"Entities describing a date and time.\")\n  Datetime: \"datetime\",\n\n  @doc(\"Entities describing a URL.\")\n  Url: \"url\",\n\n  @doc(\"Entities describing an email address.\")\n  Email: \"email\",\n}\n\n@doc(\"Text analytics positive-negative sentiment analysis, scored as a floating point value in a range of zero to 1.\")\nmodel SentimentSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.SentimentSkill\";\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: SentimentSkillLanguage;\n}\n\n@doc(\"Using the Text Analytics API, evaluates unstructured text and for each record, provides sentiment labels (such as \\\"negative\\\", \\\"neutral\\\" and \\\"positive\\\") based on the highest confidence score found by the service at a sentence and document-level.\")\nmodel SentimentSkillV3 extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.V3.SentimentSkill\";\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: string;\n\n  @doc(\"If set to true, the skill output will include information from Text Analytics for opinion mining, namely targets (nouns or verbs) and their associated assessment (adjective) in the text. Default is false.\")\n  includeOpinionMining?: boolean = false;\n\n  @doc(\"The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary.\")\n  modelVersion: string;\n}\n\n@doc(\"Using the Text Analytics API, extracts linked entities from text.\")\nmodel EntityLinkingSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.V3.EntityLinkingSkill\";\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: string;\n\n  @doc(\"A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included.\")\n  @minValue(0)\n  @maxValue(1)\n  minimumPrecision?: float64;\n\n  @doc(\"The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary.\")\n  modelVersion?: string;\n}\n\n@doc(\"Using the Text Analytics API, extracts entities of different types from text.\")\nmodel EntityRecognitionSkillV3 extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.V3.EntityRecognitionSkill\";\n\n  @doc(\"A list of entity categories that should be extracted.\")\n  categories?: string[];\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: string;\n\n  @doc(\"A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included.\")\n  @minValue(0)\n  @maxValue(1)\n  minimumPrecision?: float64;\n\n  @doc(\"The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary.\")\n  modelVersion?: string;\n}\n\n@doc(\"Using the Text Analytics API, extracts personal information from an input text and gives you the option of masking it.\")\nmodel PIIDetectionSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.PIIDetectionSkill\";\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: string;\n\n  @doc(\"A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included.\")\n  @minValue(0)\n  @maxValue(1)\n  minimumPrecision?: float64;\n\n  @doc(\"A parameter that provides various ways to mask the personal information detected in the input text. Default is 'none'.\")\n  maskingMode?: PIIDetectionSkillMaskingMode; //  = PIIDetectionSkillMaskingMode.None\n\n  @doc(\"The character used to mask the text if the maskingMode parameter is set to replace. Default is '*'.\")\n  @maxLength(1)\n  maskingCharacter?: string;\n\n  @doc(\"The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary.\")\n  modelVersion?: string;\n\n  @doc(\"A list of PII entity categories that should be extracted and masked.\")\n  piiCategories?: string[];\n\n  @doc(\"If specified, will set the PII domain to include only a subset of the entity categories. Possible values include: 'phi', 'none'. Default is 'none'.\")\n  domain?: string;\n}\n\nenum PIIDetectionSkillMaskingMode {\n  @doc(\"No masking occurs and the maskedText output will not be returned.\")\n  None: \"none\",\n\n  @doc(\"Replaces the detected entities with the character given in the maskingCharacter parameter. The character will be repeated to the length of the detected entity so that the offsets will correctly correspond to both the input text as well as the output maskedText.\")\n  Replace: \"replace\",\n}\n\n@doc(\"A skill to split a string into chunks of text.\")\nmodel SplitSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.SplitSkill\";\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: SplitSkillLanguage;\n\n  @doc(\"A value indicating which split mode to perform.\")\n  textSplitMode: TextSplitMode;\n\n  @doc(\"The desired maximum page length. Default is 10000.\")\n  maximumPageLength?: int32 = 10000;\n}\n\n@doc(\"A value indicating which split mode to perform.\")\nmodel TextSplitMode {\n  @doc(\"Split the text into individual pages.\")\n  Pages: \"pages\";\n\n  @doc(\"Split the text into individual sentences.\")\n  Sentences: \"sentences\";\n}\n\n@doc(\"A skill looks for text from a custom, user-defined list of words and phrases.\")\nmodel CustomEntityLookupSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.CustomEntityLookupSkill\";\n\n  @doc(\"A value indicating which language code to use. Default is en.\")\n  defaultLanguageCode?: CustomEntityLookupSkillLanguage;\n\n  @doc(\"Path to a JSON or CSV file containing all the target text to match against. This entity definition is read at the beginning of an indexer run. Any updates to this file during an indexer run will not take effect until subsequent runs. This config must be accessible over HTTPS.\")\n  entitiesDefinitionUri?: string;\n\n  @doc(\"The inline CustomEntity definition.\")\n  inlineEntitiesDefinition?: CustomEntity[];\n\n  @doc(\"A global flag for CaseSensitive. If CaseSensitive is not set in CustomEntity, this value will be the default value.\")\n  globalDefaultCaseSensitive?: boolean;\n\n  @doc(\"A global flag for AccentSensitive. If AccentSensitive is not set in CustomEntity, this value will be the default value.\")\n  globalDefaultAccentSensitive?: boolean;\n\n  @doc(\"A global flag for FuzzyEditDistance. If FuzzyEditDistance is not set in CustomEntity, this value will be the default value.\")\n  globalDefaultFuzzyEditDistance?: int32;\n}\n\n@doc(\"An object that contains information about the matches that were found, and related metadata.\")\nmodel CustomEntity {\n  @doc(\"The top-level entity descriptor. Matches in the skill output will be grouped by this name, and it should represent the \\\"normalized\\\" form of the text being found.\")\n  name: string;\n\n  @doc(\"This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output.\")\n  description?: string;\n\n  @doc(\"This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output.\")\n  type?: string;\n\n  @doc(\"This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output.\")\n  subtype?: string;\n\n  @doc(\"This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output.\")\n  id?: string;\n\n  @doc(\"Defaults to false. Boolean value denoting whether comparisons with the entity name should be sensitive to character casing. Sample case insensitive matches of \\\"Microsoft\\\" could be: microsoft, microSoft, MICROSOFT.\")\n  caseSensitive?: boolean = false;\n\n  @doc(\"Defaults to false. Boolean value denoting whether comparisons with the entity name should be sensitive to accent.\")\n  accentSensitive?: boolean = false;\n\n  @doc(\"Defaults to 0. Maximum value of 5. Denotes the acceptable number of divergent characters that would still constitute a match with the entity name. The smallest possible fuzziness for any given match is returned. For instance, if the edit distance is set to 3, \\\"Windows10\\\" would still match \\\"Windows\\\", \\\"Windows10\\\" and \\\"Windows 7\\\". When case sensitivity is set to false, case differences do NOT count towards fuzziness tolerance, but otherwise do.\")\n  fuzzyEditDistance?: int32 = 0;\n\n  @doc(\"Changes the default case sensitivity value for this entity. It be used to change the default value of all aliases caseSensitive values.\")\n  defaultCaseSensitive?: boolean;\n\n  @doc(\"Changes the default case sensitivity value for this entity. It be used to change the default value of all aliases caseSensitive values.\")\n  defaultAccentSensitive?: boolean;\n\n  @doc(\"Changes the default fuzzy edit distance value for this entity. It can be used to change the default value of all aliases fuzzyEditDistance values.\")\n  defaultFuzzyEditDistance?: int32;\n\n  @doc(\"An array of complex objects that can be used to specify alternative spellings or synonyms to the root entity name.\")\n  aliases?: CustomEntityAlias[];\n}\n\n@doc(\"A complex object that can be used to specify alternative spellings or synonyms to the root entity name.\")\nmodel CustomEntityAlias {\n  @doc(\"The text of the alias.\")\n  text: string;\n\n  @doc(\"Determine if the alias is case sensitive.\")\n  caseSensitive?: boolean;\n\n  @doc(\"Determine if the alias is accent sensitive.\")\n  accentSensitive?: boolean;\n\n  @doc(\"Determine the fuzzy edit distance of the alias.\")\n  fuzzyEditDistance?: int32;\n}\n\n@doc(\"A skill to translate text from one language to another.\")\nmodel TextTranslationSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Text.TranslationSkill\";\n\n  @doc(\"The language code to translate documents into for documents that don't specify the to language explicitly. \")\n  defaultToLanguageCode: TextTranslationSkillLanguage;\n\n  @doc(\"The language code to translate documents from for documents that don't specify the from language explicitly.\")\n  defaultFromLanguageCode: TextTranslationSkillLanguage;\n\n  @doc(\"The language code to translate documents from when neither the fromLanguageCode input nor the defaultFromLanguageCode parameter are provided, and the automatic language detection is unsuccessful. Default is en.\")\n  suggestedFrom?: TextTranslationSkillLanguage;\n}\n\n@doc(\"A skill that extracts content from a file within the enrichment pipeline.\")\nmodel DocumentExtractionSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Util.DocumentExtractionSkill\";\n\n  @doc(\"The parsingMode for the skill. Will be set to 'default' if not defined.\")\n  parsingMode?: string;\n\n  @doc(\"The type of data to be extracted for the skill. Will be set to 'contentAndMetadata' if not defined.\")\n  dataToExtract?: string;\n\n  @doc(\"A dictionary of configurations for the skill.\")\n  configuration?: Record<{}>;\n}\n\n@doc(\"A skill that can call a Web API endpoint, allowing you to extend a skillset by having it call your custom code.\")\nmodel WebApiSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Custom.WebApiSkill\";\n\n  @doc(\"The url for the Web API.\")\n  uri: string;\n\n  @doc(\"The method for the http request.\")\n  httpMethod: string;\n\n  @doc(\"The desired timeout for the request. Default is 30 seconds.\")\n  timeout?: duration;\n\n  @doc(\"The desired batch size which indicates number of documents.\")\n  batchSize?: int32;\n\n  @doc(\"If set, the number of parallel calls that can be made to the Web API.\")\n  degreeOfParallelism?: int32;\n}\n\n@doc(\"The AML skill allows you to extend AI enrichment with a custom Azure Machine Learning (AML) model. Once an AML model is trained and deployed, an AML skill integrates it into AI enrichment.\")\nmodel AmlSkill extends SearchIndexerSkill {\n  `@odata.type`: \"#Microsoft.Skills.Custom.AmlSkill\";\n\n  @doc(\"(Required for no authentication or key authentication) The scoring URI of the AML service to which the JSON payload will be sent. Only the https URI scheme is allowed.\")\n  uri?: string;\n\n  @doc(\"(Required for key authentication) The key for the AML service.\")\n  key?: string;\n\n  @doc(\"(Required for token authentication). The Azure Resource Manager resource ID of the AML service. It should be in the format subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.MachineLearningServices/workspaces/{workspace-name}/services/{service_name}.\")\n  resourceId?: string;\n\n  @doc(\"(Optional) When specified, indicates the timeout for the http client making the API call.\")\n  timeout?: duration;\n\n  @doc(\"(Optional for token authentication). The region the AML service is deployed in.\")\n  region?: string;\n\n  @doc(\"(Optional) When specified, indicates the number of calls the indexer will make in parallel to the endpoint you have provided. You can decrease this value if your endpoint is failing under too high of a request load, or raise it if your endpoint is able to accept more requests and you would like an increase in the performance of the indexer. If not set, a default value of 5 is used. The degreeOfParallelism can be set to a maximum of 10 and a minimum of 1.\")\n  degreeOfParallelism?: int32;\n}\n\n@doc(\"Base type for describing any cognitive service resource attached to a skillset.\")\nmodel CognitiveServicesAccount {\n  @doc(\"Description of the cognitive service resource attached to a skillset.\")\n  description: string;\n}\n\n@doc(\"An empty object that represents the default cognitive service resource for a skillset.\")\nmodel DefaultCognitiveServicesAccount extends CognitiveServicesAccount {\n  `@odata.type`: \"#Microsoft.Azure.Search.DefaultCognitiveServices\";\n}\n\n@doc(\"A cognitive service resource provisioned with a key that is attached to a skillset.\")\nmodel CognitiveServicesAccountKey extends CognitiveServicesAccount {\n  `@odata.type`: \"#Microsoft.Azure.Search.CognitiveServicesByKey\";\n\n  @doc(\"The key used to provision the cognitive service resource attached to a skillset.\")\n  key: string;\n}\n\n@doc(\"Definition of additional projections to azure blob, table, or files, of enriched data.\")\nmodel SearchIndexerKnowledgeStore {\n  @doc(\"The connection string to the storage account projections will be stored in.\")\n  storageConnectionString: string;\n\n  @doc(\"A list of additional projections to perform during indexing.\")\n  projections: SearchIndexerKnowledgeStoreProjection[];\n}\n\n@doc(\"Container object for various projection selectors.\")\nmodel SearchIndexerKnowledgeStoreProjection {\n  @doc(\"Projections to Azure Table storage.\")\n  tables?: SearchIndexerKnowledgeStoreTableProjectionSelector;\n\n  @doc(\"Projections to Azure Blob storage.\")\n  objects?: SearchIndexerKnowledgeStoreObjectProjectionSelector;\n\n  @doc(\"Projections to Azure File storage.\")\n  files?: SearchIndexerKnowledgeStoreFileProjectionSelector;\n}\n\n@doc(\"Abstract class to share properties between concrete selectors.\")\nmodel SearchIndexerKnowledgeStoreProjectionSelector {\n  @doc(\"Name of reference key to different projection.\")\n  referenceKeyName?: string;\n\n  @doc(\"Name of generated  key to  store projection under.\")\n  generatedKeyName?: string;\n\n  @doc(\"Source data to project.\")\n  source?: string;\n\n  @doc(\"Source context for complex projections.\")\n  sourceContext?: string;\n\n  @doc(\"Nested inputs for complex projections.\")\n  inputs?: InputFieldMappingEntry[];\n}\n\n@doc(\"Description for what data to store in Azure Tables.\")\nmodel SearchIndexerKnowledgeStoreTableProjectionSelector\n  extends SearchIndexerKnowledgeStoreProjectionSelector {\n  @doc(\"Name of the Azure table to store projected data in.\")\n  tableName: string;\n}\n\n@doc(\"Abstract class to share properties between concrete selectors.\")\nmodel SearchIndexerKnowledgeStoreBlobProjectionSelector\n  extends SearchIndexerKnowledgeStoreProjectionSelector {\n  @doc(\"Blob container to store projections in.\")\n  storageContainer: string;\n}\n\n@doc(\"Projection definition for what data to store in Azure Blob.\")\nmodel SearchIndexerKnowledgeStoreObjectProjectionSelector\n  extends SearchIndexerKnowledgeStoreBlobProjectionSelector {}\n\n@doc(\"Projection definition for what data to store in Azure Files.\")\nmodel SearchIndexerKnowledgeStoreFileProjectionSelector\n  extends SearchIndexerKnowledgeStoreBlobProjectionSelector {}\n\n@doc(\"The names of skills to reset.\")\nmodel SkillNames {\n  @doc(\"the names of skills to be reset.\")\n  skillNames: string[];\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\skills.models.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\skills.models.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"./common.tsp\";\nimport \"./skills.models.tsp\";\n\nusing TypeSpec.Http;\n\nnamespace Azure.SearchService;\n\n@tag(\"Skillsets\")\ninterface Skillsets {\n  @route(\"/skillsets\")\n  @doc(\"List all skillsets in a search service.\")\n  @get\n  list(...SelectParameter, ...ClientRequestIdParameter, ...ApiVersionParameter): CollectionResult<\n    SearchIndexerSkillset,\n    \"Skillsets\"\n  > | SearchError;\n\n  @route(\"/skillsets\")\n  @doc(\"Creates a new skillset in a search service.\")\n  @post\n  create(\n    @doc(\"The skillset containing one or more skills to create in a search service.\")\n    @body\n    body: SearchIndexerSkillset,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchCreatedResponse<SearchIndexerSkillset> | SearchError;\n\n  @doc(\"Retrieves a skillset in a search service.\")\n  @route(\"/skillsets('{skillsetName}')\")\n  @get\n  get(\n    @doc(\"The name of the skillset to retrieve.\")\n    @path\n    skillsetName: string,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchIndexerSkillset | SearchError;\n\n  @doc(\"Creates a new skillset in a search service or updates the skillset if it already exists.\")\n  @route(\"/skillsets('{skillsetName}')\")\n  @put\n  createOrUpdate(\n    @doc(\"The name of the skillset to create or update.\")\n    @path\n    skillsetName: string,\n\n    @doc(\"The skillset containing one or more skills to create or update in a search service.\")\n    @body\n    body: SearchIndexerSkillset,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): SearchIndexerSkillset | SearchError;\n\n  @doc(\"Deletes a skillset in a search service.\")\n  @route(\"/skillsets('{skillsetName}')\")\n  @delete\n  delete(\n    @doc(\"The name of the skillset to delete.\")\n    @path\n    skillsetName: string,\n\n    ...ClientRequestIdParameter,\n    ...IfMatchParameter,\n    ...IfNoneMatchParameter,\n    ...ApiVersionParameter,\n  ): NoContentResponse | SearchError;\n\n  @doc(\"Reset an existing skillset in a search service\")\n  @route(\"/skillsets('{skillsetName}')\")\n  @post\n  resetSkills(\n    @doc(\"The name of the skillset to reset.\")\n    @path\n    skillsetName: string,\n\n    @body\n    body: SkillNames,\n\n    ...ClientRequestIdParameter,\n    ...ApiVersionParameter,\n  ): NoContentResponse | SearchError;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\searchservice\\skills.ops.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\searchservice\\skills.ops.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\nusing Azure.Core.Traits;\n\n@service({\n  title: \"Contoso Widget Manager\",\n})\n@versioned(Contoso.WidgetManager.Versions)\nnamespace Contoso.WidgetManager;\n\n@doc(\"The Contoso Widget Manager service version.\")\nenum Versions {\n  @doc(\"Version 2022-08-31\")\n  @useDependency(Azure.Core.Versions.v1_0_Preview_2)\n  v2022_08_31: \"2022-08-31\",\n\n  @doc(\"Version 2023-02-07\")\n  @useDependency(Azure.Core.Versions.v1_0_Preview_2)\n  v2023_02_07: \"2023-02-07\",\n}\n\n// Models ////////////////////\n\n@doc(\"A widget.\")\n@resource(\"widgets\")\nmodel Widget {\n  @key(\"widgetName\")\n  @doc(\"The widget name.\")\n  @visibility(\"read\")\n  name: string;\n\n  @doc(\"The ID of the widget's manufacturer.\")\n  manufacturerId: string;\n\n  ...EtagProperty;\n}\n\n@doc(\"A manufacturer of widgets.\")\n@resource(\"manufacturers\")\nmodel Manufacturer {\n  @key(\"manufacturerId\")\n  @doc(\"The manufacturer's unique ID.\")\n  @visibility(\"read\")\n  id: string;\n\n  @doc(\"The manufacturer's name.\")\n  name: string;\n\n  @doc(\"The manufacturer's full address.\")\n  address: string;\n\n  ...EtagProperty;\n}\n\n// Operations ////////////////////\n\nalias ServiceTraits = SupportsRepeatableRequests &\n  SupportsConditionalRequests<Versions.v2023_02_07> &\n  SupportsClientRequestId;\n\nalias Operations = Azure.Core.ResourceOperations<ServiceTraits>;\n\ninterface Widgets {\n  // Operation Status\n  @doc(\"Gets status of a Widget operation.\")\n  getWidgetOperationStatus is Operations.GetResourceOperationStatus<Widget>;\n\n  // Widget Operations\n  @doc(\"Creates or updates a Widget asynchronously\")\n  @pollingOperation(Widgets.getWidgetOperationStatus)\n  createOrUpdateWidget is Operations.LongRunningResourceCreateOrUpdate<Widget>;\n\n  @doc(\"Get a Widget\")\n  getWidget is Operations.ResourceRead<Widget>;\n\n  @doc(\"Delete a Widget asynchronously.\")\n  @pollingOperation(Widgets.getWidgetOperationStatus)\n  deleteWidget is Operations.LongRunningResourceDelete<Widget>;\n\n  @doc(\"List Widget resources\")\n  listWidgets is Operations.ResourceList<\n    Widget,\n    ListQueryParametersTrait<StandardListQueryParameters & SelectQueryParameter>\n  >;\n}\n\ninterface Manufacturers {\n  @doc(\"Gets status of a Manufacturer operation.\")\n  getManufacturerOperationStatus is Operations.GetResourceOperationStatus<Manufacturer>;\n\n  @doc(\"Creates or replaces a Manufacturer\")\n  createOrReplaceManufacturer is Operations.ResourceCreateOrReplace<Manufacturer>;\n\n  @doc(\"Get a Manufacturer\")\n  getManufacturer is Operations.ResourceRead<Manufacturer>;\n\n  @doc(\"Delete a Manufacturer asynchronously.\")\n  @pollingOperation(Manufacturers.getManufacturerOperationStatus)\n  deleteManufacturer is Operations.LongRunningResourceDelete<Manufacturer>;\n\n  @doc(\"List Manufacturer resources\")\n  listManufacturers is Operations.ResourceList<Manufacturer>;\n}\n\n// A \"global\" RPC operation\n@route(\"/service-status\")\n@doc(\"Responds with status information about the overall service.\")\nop getServiceStatus is RpcOperation<\n  {},\n  {\n    statusString: string;\n  },\n  ServiceTraits\n>;\n", "file_path": "../../packages/samples/specs\\data-plane\\trait-versioning\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\trait-versioning\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.Core;\nusing Azure.Core.Traits;\n\n@service({\n  title: \"Contoso Widget Manager\",\n})\n@versioned(Contoso.WidgetManager.Versions)\nnamespace Contoso.WidgetManager;\n\n@doc(\"The Contoso Widget Manager service version.\")\nenum Versions {\n  @doc(\"Version 2022-08-31\")\n  @useDependency(Azure.Core.Versions.v1_0_Preview_2)\n  `2022-08-31`,\n}\n\n// Models ////////////////////\n\n@doc(\"The color of a widget.\")\nenum WidgetColor {\n  @doc(\"Black\")\n  Black,\n\n  @doc(\"White\")\n  White,\n\n  @doc(\"Red\")\n  Red,\n\n  @doc(\"Green\")\n  Green,\n\n  @doc(\"Blue\")\n  Blue,\n}\n\n@doc(\"A widget.\")\n@resource(\"widgets\")\nmodel Widget {\n  @key(\"widgetName\")\n  @doc(\"The widget name.\")\n  @visibility(\"read\")\n  name: string;\n\n  @doc(\"The widget color.\")\n  color: WidgetColor;\n\n  @doc(\"The ID of the widget's manufacturer.\")\n  manufacturerId: string;\n\n  ...EtagProperty;\n}\n\n@doc(\"The repair state of a widget.\")\n@lroStatus\nenum WidgetRepairState {\n  @doc(\"Widget repairs succeeded.\")\n  Succeeded,\n\n  @doc(\"Widget repairs failed.\")\n  Failed,\n\n  @doc(\"Widget repairs were canceled.\")\n  Canceled,\n\n  @doc(\"Widget was sent to the manufacturer.\")\n  SentToManufacturer,\n}\n\n@doc(\"A submitted repair request for a widget.\")\nmodel WidgetRepairRequest {\n  @doc(\"The state of the widget repair request.\")\n  requestState: WidgetRepairState;\n\n  @doc(\"The date and time when the repair is scheduled to occur.\")\n  scheduledDateTime: utcDateTime;\n\n  @doc(\"The date and time when the request was created.\")\n  createdDateTime: utcDateTime;\n\n  @doc(\"The date and time when the request was updated.\")\n  updatedDateTime: utcDateTime;\n\n  @doc(\"The date and time when the request was completed.\")\n  completedDateTime: utcDateTime;\n}\n\n@doc(\"The parameters for a widget status request\")\nmodel WidgetRepairStatusParams {\n  @doc(\"The ID of the widget being repaired.\")\n  @path\n  widgetId: string;\n}\n\n@doc(\"A widget's part.\")\n@resource(\"parts\")\n@parentResource(Widget)\nmodel WidgetPart {\n  @key(\"widgetPartName\")\n  @doc(\"The name of the part.\")\n  @visibility(\"read\")\n  name: string;\n\n  @doc(\"The ID to use for reordering the part.\")\n  partId: string;\n\n  @doc(\"The ID of the part's manufacturer.\")\n  manufacturerId: string;\n\n  ...EtagProperty;\n}\n\n@doc(\"The details of a reorder request for a WidgetPart.\")\nmodel WidgetPartReorderRequest {\n  @doc(\"Identifies who signed off the reorder request.\")\n  signedOffBy: string;\n}\n\n// An example of a singleton resource\n@doc(\"Provides analytics about the use and maintenance of a Widget.\")\n@resource(\"analytics\")\n@parentResource(Widget)\nmodel WidgetAnalytics {\n  @key(\"analyticsId\")\n  @doc(\"The identifier for the analytics object.  There is only one named 'current'.\")\n  @visibility(\"read\")\n  id: \"current\";\n\n  @doc(\"The number of uses of the widget.\")\n  useCount: int64;\n\n  @doc(\"The number of times the widget was repaired.\")\n  repairCount: int64;\n}\n\n@doc(\"A manufacturer of widgets.\")\n@resource(\"manufacturers\")\nmodel Manufacturer {\n  @key(\"manufacturerId\")\n  @doc(\"The manufacturer's unique ID.\")\n  @visibility(\"read\")\n  id: string;\n\n  @doc(\"The manufacturer's name.\")\n  name: string;\n\n  @doc(\"The manufacturer's full address.\")\n  address: string;\n\n  ...EtagProperty;\n}\n\n// Operations ////////////////////\n\nalias ServiceTraits = SupportsRepeatableRequests &\n  SupportsConditionalRequests &\n  SupportsClientRequestId;\n\nalias Operations = Azure.Core.ResourceOperations<ServiceTraits>;\n\ninterface Widgets {\n  // Operation Status\n  @doc(\"Gets status of a Widget operation.\")\n  getWidgetOperationStatus is Operations.GetResourceOperationStatus<Widget>;\n\n  // Widget Operations\n  @doc(\"Creates or updates a Widget asynchronously\")\n  @pollingOperation(Widgets.getWidgetOperationStatus)\n  createOrUpdateWidget is Operations.LongRunningResourceCreateOrUpdate<Widget>;\n\n  @doc(\"Get a Widget\")\n  getWidget is Operations.ResourceRead<Widget>;\n\n  @doc(\"Delete a Widget asynchronously.\")\n  @pollingOperation(Widgets.getWidgetOperationStatus)\n  deleteWidget is Operations.LongRunningResourceDelete<Widget>;\n\n  @doc(\"List Widget resources\")\n  listWidgets is Operations.ResourceList<\n    Widget,\n    ListQueryParametersTrait<StandardListQueryParameters & SelectQueryParameter>\n  >;\n\n  // Widget Analytics\n  @doc(\"Get a WidgetAnalytics\")\n  getAnalytics is Operations.ResourceRead<WidgetAnalytics>;\n\n  @doc(\"Creates or updates a WidgetAnalytics\")\n  updateAnalytics is Operations.ResourceCreateOrUpdate<WidgetAnalytics>;\n\n  // Widget Repair Operations\n  #suppress \"@azure-tools/typespec-azure-core/use-standard-operations\" \"This is a custom operation status endpoint.\"\n  @doc(\"Get the status of a WidgetRepairRequest.\")\n  @route(\"/widgets/{widgetId}/repairs/{operationId}\")\n  getRepairStatus is Foundations.GetOperationStatus<WidgetRepairStatusParams, WidgetRepairRequest>;\n\n  @doc(\"Schedule a widget for repairs.\")\n  @pollingOperation(Widgets.getWidgetOperationStatus)\n  scheduleRepairs is Operations.LongRunningResourceAction<\n    Widget,\n    WidgetRepairRequest,\n    WidgetRepairRequest & RequestIdResponseHeader\n  >;\n}\n\ninterface WidgetParts {\n  @doc(\"Gets status of a WidgetPart operation.\")\n  getWidgetPartOperationStatus is Operations.GetResourceOperationStatus<WidgetPart>;\n\n  @doc(\"Creates a WidgetPart\")\n  createWidgetPart is Operations.ResourceCreateWithServiceProvidedName<WidgetPart>;\n\n  @doc(\"Get a WidgetPart\")\n  getWidgetPart is Operations.ResourceRead<WidgetPart>;\n\n  @doc(\"Delete a WidgetPart\")\n  deleteWidgetPart is Operations.ResourceDelete<WidgetPart>;\n\n  @doc(\"List WidgetPart resources\")\n  listWidgetParts is Operations.ResourceList<WidgetPart>;\n\n  @doc(\"Reorder all parts for the widget.\")\n  @pollingOperation(WidgetParts.getWidgetPartOperationStatus)\n  reorderParts is Operations.LongRunningResourceCollectionAction<\n    WidgetPart,\n    WidgetPartReorderRequest,\n    TypeSpec.Http.AcceptedResponse\n  >;\n}\n\ninterface Manufacturers {\n  @doc(\"Gets status of a Manufacturer operation.\")\n  getManufacturerOperationStatus is Operations.GetResourceOperationStatus<Manufacturer>;\n\n  @doc(\"Creates or replaces a Manufacturer\")\n  createOrReplaceManufacturer is Operations.ResourceCreateOrReplace<Manufacturer>;\n\n  @doc(\"Get a Manufacturer\")\n  getManufacturer is Operations.ResourceRead<Manufacturer>;\n\n  @doc(\"Delete a Manufacturer asynchronously.\")\n  @pollingOperation(Manufacturers.getManufacturerOperationStatus)\n  deleteManufacturer is Operations.LongRunningResourceDelete<Manufacturer>;\n\n  @doc(\"List Manufacturer resources\")\n  listManufacturers is Operations.ResourceList<Manufacturer>;\n}\n\n// A \"global\" RPC operation\n@route(\"service-status\")\n@doc(\"Responds with status information about the overall service.\")\nop getServiceStatus is RpcOperation<\n  {},\n  {\n    statusString: string;\n  },\n  ServiceTraits\n>;\n\nmodel CustomResult {\n  @lroResult\n  MyResult: string;\n\n  @lroErrorResult\n  MyError: string;\n}\n", "file_path": "../../packages/samples/specs\\data-plane\\widget-manager\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\data-plane\\widget-manager\\main.tsp"}, {"file_content": "using TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\nnamespace AppConfig;\n\n@route(\"/keys\")\nnamespace KeysResource {\n  @doc(\"Gets a list of keys.\")\n  @operationId(\"GetKeys\")\n  @get\n  op list(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    ...AcceptDatetimeHeader,\n    @query name: string,\n    @header after: string,\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n    @header contentType: \"application/vnd.microsoft.appconfig.keyset+json\" | \"application/json\";\n    @body body: Page<Key>;\n  } | Error;\n\n  @doc(\"Requests the headers and status of the given resource.\")\n  @operationId(\"CheckKeys\")\n  @head\n  op listHead(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    ...AcceptDatetimeHeader,\n    @query name: string,\n    @header after: string,\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n  } | Error;\n}\n", "file_path": "../../packages/samples/specs\\misc\\appconfig\\keys.tsp", "link_to_file": "file://../../packages/samples/specs\\misc\\appconfig\\keys.tsp"}, {"file_content": "using TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\n@service({\n  title: \"App Config Service\",\n})\nnamespace AppConfig;\n\n@doc(\"Used for /kv endpoints (key in query)\")\nmodel KeyFilters {\n  @doc(\"A filter for the name of the returned keys.\")\n  @query\n  key?: string;\n\n  @doc(\"A filter used to match labels\")\n  @query\n  label?: string;\n}\n\n@doc(\"Used for /kv/{id} endpoints (key in path)\")\nmodel KeyWithFilters {\n  @doc(\"A filter for the name of the returned keys.\")\n  @path\n  key: string;\n\n  @doc(\"A filter used to match labels\")\n  @query\n  label?: string;\n}\n\n@route(\"/kv\")\nnamespace KeyValuesResource {\n  @doc(\"Gets a list of key-values.\")\n  @operationId(\"GetKeyValues\")\n  @get\n  op list(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    ...AcceptDatetimeHeader,\n    ...KeyFilters,\n\n    @doc(\"Instructs the server to return elements that appear after the element referred to by the specified token.\")\n    @query\n    After: plainDate,\n\n    @doc(\"Used to select what fields are present in the returned resource(s).\")\n    @query({\n      format: \"multi\",\n    })\n    $Select?: KeyField[],\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n\n    @header\n    contentType: \"application/vnd.microsoft.appconfig.keyset+json\" | \"application/json\";\n\n    @body body: Page<KeyValue>;\n  } | Error;\n\n  @doc(\"Gets a list of key-values.\")\n  @operationId(\"CheckKeyValues\")\n  @head\n  op listHead(\n    ...AcceptDatetimeHeader,\n    ...KeyFilters,\n\n    @doc(\"Instructs the server to return elements that appear after the element referred to by the specified token.\")\n    @query\n    After: plainDate,\n\n    @doc(\"Used to select what fields are present in the returned resource(s).\")\n    @query({\n      format: \"multi\",\n    })\n    $Select?: KeyField[],\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n  } | Error;\n\n  @doc(\"Gets a single key-value.\")\n  @operationId(\"GetKeyValue\")\n  @get\n  op read(\n    ...ETagHeaders,\n    ...AcceptDatetimeHeader,\n    ...KeyWithFilters,\n\n    @doc(\"Used to select what fields are present in the returned resource(s).\")\n    @query({\n      format: \"multi\",\n    })\n    $Select?: KeyField[],\n  ): {\n    ...Response<200>;\n    ...KeyValueHeaders;\n\n    @header\n    contentType: \"application/vnd.microsoft.appconfig.kv+json\" | \"application/json\";\n\n    @body body: KeyValue;\n  } | Error;\n\n  @doc(\"Requests the headers and status of the given resource.\")\n  @operationId(\"CheckKeyValue\")\n  @head\n  op readHead(...ETagHeaders, ...AcceptDatetimeHeader, ...KeyWithFilters): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n    ...LastModifiedHeader;\n  } | Error;\n\n  @doc(\"Creates a key-value.\")\n  @operationId(\"PutKeyValue\")\n  @put\n  op createOrUpdate(\n    ...ETagHeaders,\n    ...KeyWithFilters,\n    @header contentType:\n      | \"application/vnd.microsoft.appconfig.kv+json\"\n      | \"application/vnd.microsoft.appconfig.kvset+json\"\n      | \"application/json\"\n      | \"text/json\"\n      | \"application/*+json\"\n      | \"application/json-patch+json\",\n    @body entity: KeyValue,\n  ): {\n    ...Response<200>;\n    ...KeyValueHeaders;\n\n    @header\n    contentType: \"application/vnd.microsoft.appconfig.kv+json\" | \"application/json\";\n\n    @body body: KeyValue;\n  } | Error;\n\n  @doc(\"Updates a key-value pair\")\n  @operationId(\"UpdateKeyValue\")\n  @post\n  op createOrUpdate2(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    ...ETagHeaders,\n    ...KeyWithFilters,\n    @header contentType: \"application/json-patch+json\",\n    @body jsonPatch: string[],\n  ): {\n    ...Response<200>;\n    ...KeyValueHeaders;\n\n    @header\n    contentType: \"application/vnd.microsoft.appconfig.kv+json\" | \"application/json\";\n\n    @body body: KeyValue;\n  } | Error;\n\n  @doc(\"Deletes a key-value.\")\n  @operationId(\"DeleteKeyValue\")\n  @delete\n  op delete(...ApiVersion, ...SyncTokenHeader, ...KeyWithFilters, @header ifMatch: string): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n    ...ETagHeader;\n\n    @header\n    contentType: \"application/vnd.microsoft.appconfig.kv+json\" | \"application/json\";\n\n    @body body: KeyValue;\n  } | {\n    ...Response<204>;\n    ...SyncTokenHeader;\n  } | Error;\n}\n", "file_path": "../../packages/samples/specs\\misc\\appconfig\\keyvalues.tsp", "link_to_file": "file://../../packages/samples/specs\\misc\\appconfig\\keyvalues.tsp"}, {"file_content": "using TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\nnamespace AppConfig;\n\n@route(\"/labels\")\nnamespace LabelsResource {\n  @doc(\"Gets a list of labels.\")\n  @operationId(\"GetLabels\")\n  @get\n  op list(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    ...AcceptDatetimeHeader,\n    @query name?: string,\n    @query after?: string,\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n\n    @header\n    contentType: \"application/vnd.microsoft.appconfig.labelset+json\" | \"application/json\";\n\n    @body body: Page<Label>;\n  } | Error;\n\n  @doc(\"Requests the headers and status of the given resource.\")\n  @operationId(\"CheckLabels\")\n  @head\n  op listHead(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    ...AcceptDatetimeHeader,\n    @query name?: string,\n    @query after?: string,\n\n    @query({\n      format: \"multi\",\n    })\n    $Select?: LabelField[],\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n  } | Error;\n}\n", "file_path": "../../packages/samples/specs\\misc\\appconfig\\labels.tsp", "link_to_file": "file://../../packages/samples/specs\\misc\\appconfig\\labels.tsp"}, {"file_content": "using TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\nnamespace AppConfig;\n\n@route(\"/locks\")\nnamespace LocksResource {\n  @operationId(\"GetLock\")\n  @get\n  op read(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    @path key: string,\n    @query label: string,\n    ...ETagHeaders,\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n    @body body: KeyValue;\n  } | Error;\n\n  @operationId(\"DeleteLock\")\n  @delete\n  op delete(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    @path key: string,\n    @query label: string,\n    ...ETagHeaders,\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n    @body body: KeyValue;\n  } | Error;\n}\n", "file_path": "../../packages/samples/specs\\misc\\appconfig\\locks.tsp", "link_to_file": "file://../../packages/samples/specs\\misc\\appconfig\\locks.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\n\nimport \"./keyvalues.tsp\";\nimport \"./labels.tsp\";\nimport \"./locks.tsp\";\nimport \"./models.tsp\";\nimport \"./revisions.tsp\";\nimport \"./keys.tsp\";\n", "file_path": "../../packages/samples/specs\\misc\\appconfig\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\misc\\appconfig\\main.tsp"}, {"file_content": "using TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\nnamespace AppConfig;\n\n@friendlyName(\"Paged{name}\", TResource)\n@doc(\"Paged collection of {name} items\", TResource)\nmodel Page<TResource extends {}> {\n  @doc(\"The {name} items on this page\", TResource)\n  items: TResource[];\n\n  @doc(\"The link to the next page of items\")\n  nextLink?: string;\n}\n\nmodel ETagHeader {\n  @header eTag: string;\n}\n\nmodel ETagHeaders {\n  @header ifMatch: string;\n  @header ifNoneMatch: string;\n}\n\nmodel LastModifiedHeader {\n  @header lastModified: plainDate;\n}\n\nmodel AcceptDatetimeHeader {\n  @header acceptDatetime: plainDate;\n}\n\nmodel SyncTokenHeader {\n  @doc(\"Used to guarantee real-time consistency between requests.\")\n  @header\n  syncToken?: string;\n}\n\nmodel ApiVersion {\n  @query apiVersion: string;\n}\n\n@doc(\"Azure App Configuration error object.\")\n@error\nmodel Error {\n  @header\n  contentType: \"application/problem+json\";\n\n  @doc(\"The type of the error\")\n  type: string;\n\n  @doc(\"A brief summary of the error.\")\n  title: string;\n\n  @doc(\"The name of the parameter that resulted in the error.\")\n  name: string;\n\n  @doc(\"A detailed description of the error.\")\n  detail: string;\n\n  @doc(\"The HTTP status code that the error maps to.\")\n  statusCode: int32;\n}\n\nmodel Label {\n  name: string;\n}\n\nalias KeyValueHeaders = SyncTokenHeader & LastModifiedHeader & ETagHeader;\n\nmodel Key {\n  key: string;\n}\n\nmodel Value {\n  label?: string;\n  tags: Record<string>;\n  locked: boolean;\n}\n\nmodel KeyValue {\n  ...Key;\n  ...Value;\n}\n\nenum KeyField {\n  key,\n  label,\n  content_type,\n  value,\n  last_modified,\n  tags,\n}\n\nenum LabelField {\n  name,\n}\n", "file_path": "../../packages/samples/specs\\misc\\appconfig\\models.tsp", "link_to_file": "file://../../packages/samples/specs\\misc\\appconfig\\models.tsp"}, {"file_content": "using TypeSpec.Http;\nusing TypeSpec.OpenAPI;\n\nnamespace AppConfig;\n\n@route(\"/revisions\")\nnamespace RevisionsResource {\n  @doc(\"Gets a list of revisions.\")\n  @operationId(\"GetRevisions\")\n  @get\n  op list(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    ...AcceptDatetimeHeader,\n\n    @doc(\"Used to select what fields are present in the returned resource(s).\")\n    @query({\n      format: \"multi\",\n    })\n    $Select?: KeyField[],\n\n    @doc(\"A filter used to match labels\")\n    @query\n    label: string,\n\n    @doc(\"A filter used to match keys.\")\n    @query\n    key: string,\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n\n    @header\n    contentType: \"application/vnd.microsoft.appconfig.kvset+json\" | \"application/json\";\n\n    @body body: Page<KeyValue>;\n  } | Error;\n\n  @doc(\"Requests the headers and status of the given resource.\")\n  @operationId(\"CheckRevisions\")\n  @head\n  op listHead(\n    ...ApiVersion,\n    ...SyncTokenHeader,\n    ...AcceptDatetimeHeader,\n    @query name: string,\n    @query after: string,\n  ): {\n    ...Response<200>;\n    ...SyncTokenHeader;\n  } | Error;\n}\n", "file_path": "../../packages/samples/specs\\misc\\appconfig\\revisions.tsp", "link_to_file": "file://../../packages/samples/specs\\misc\\appconfig\\revisions.tsp"}, {"file_content": "import \"./overloads.tsp\";\n", "file_path": "../../packages/samples/specs\\misc\\overloads\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\misc\\overloads\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\n\n@service({\n  title: \"TypeSpec Overloads Sample\",\n})\nnamespace TypeSpec.Samples.Overloads;\n\nusing TypeSpec.Http;\n\n@route(\"/typespec/things\")\nnamespace Things {\n  @post\n  op postThing(@body thing: Thing): Thing;\n\n  @route(\"?overload=withParam\")\n  @post\n  op postThingWithParam(\n    @body body: {\n      thing: Thing;\n      param: string;\n    },\n  ): Thing;\n\n  @route(\"?overload=returnString\")\n  @post\n  op postThingReturnString(@body thing: Thing): ThingStringResponse;\n}\n\nmodel Thing {\n  name: string;\n}\n\nmodel ThingStringResponse {\n  @header\n  contentType: \"text/plain; charset=utf=8\";\n\n  ...Body<string>;\n}\n", "file_path": "../../packages/samples/specs\\misc\\overloads\\overloads.tsp", "link_to_file": "file://../../packages/samples/specs\\misc\\overloads\\overloads.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\nimport \"./ref-library/int-templates.tsp\";\nimport \"./ref-library/op-templates.tsp\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@service({\n  title: \"Microsoft.EnvelopeTest\",\n  version: \"2021-09-21-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n@useLibraryNamespace(Microsoft.InterfacesTest, Microsoft.OperationsTest)\n@armProviderNamespace\nnamespace Microsoft.LibraryTest;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\nmodel AllPropertiesResource is TrackedResource<AllPropertiesProperties> {\n  @doc(\"The name of the all properties resource.\")\n  @key(\"allPropertiesName\")\n  @segment(\"allProperties\")\n  @path\n  name: string;\n\n  ...EntityTag;\n  ...ManagedBy;\n  ...ResourceKind;\n  ...ResourcePlan;\n  ...ResourceSku;\n  ...ManagedServiceIdentity;\n}\n\n@armResourceOperations\ninterface AllProperties\n  extends TrackedResourceOperations<AllPropertiesResource, AllPropertiesProperties> {}\n\n@doc(\"rp-specific proeprties for the resource with all envelope properties\")\nmodel AllPropertiesProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: SystemEnvelopeProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n@Azure.Core.lroStatus\n@doc(\"Envelope provisioning state\")\nenum SystemEnvelopeProvisioningState {\n  ...ResourceProvisioningState,\n\n  @doc(\"Working\")\n  Working,\n}\n\n@armResourceOperations\ninterface TrackedOperations extends Microsoft.InterfacesTest.TrackedOperations {}\n\n@armResourceOperations\ninterface TrackedChildOperations extends Microsoft.InterfacesTest.TrackedChildOperations {}\n\n@armResourceOperations\ninterface TenantOperations extends Microsoft.InterfacesTest.TenantOperations {}\n\n@armResourceOperations\ninterface ExtensionOperations extends Microsoft.InterfacesTest.ExtensionOperations {}\n\n@armResourceOperations\ninterface Tracked2Operations extends Microsoft.OperationsTest.Tracked2Operations {}\n", "file_path": "../../packages/samples/specs\\resource-manager\\arm-library\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\arm-library\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n#suppress \"@azure-tools/typespec-azure-resource-manager/missing-operations-endpoint\" \"cuz\"\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n@armLibraryNamespace\nnamespace Microsoft.InterfacesTest;\n\n// Tracked resources\n\n/**\n * A Test Tracked Resource\n */\nmodel TestTrackedResource is TrackedResource<TestTrackedProperties> {\n  @doc(\"The name of the Tracked resource.\")\n  @key(\"trackedResourceName\")\n  @segment(\"trackedResources\")\n  @visibility(\"read\")\n  @path\n  name: string;\n}\n\n/**\n * The operations for a Test Tracked Resource\n */\n@armResourceOperations(TestTrackedResource)\ninterface TrackedOperations\n  extends TrackedResourceOperations<TestTrackedResource, TestTrackedProperties> {}\n\n@doc(\"rp-specific properties for the resource with all envelope properties\")\nmodel TestTrackedProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  @visibility(\"read\")\n  provisioningState?: ResourceProvisioningState;\n\n  @visibility(\"create\", \"read\")\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n@parentResource(TestTrackedResource)\nmodel TestTrackedChild is ProxyResource<TrackedChildProperties> {\n  @doc(\"The name of the Tracked child.\")\n  @key(\"childName\")\n  @segment(\"children\")\n  @path\n  name: string;\n}\n\n@doc(\"A child of a tracked resource\")\nmodel TrackedChildProperties {\n  @doc(\"The flavor of the tracked child\")\n  flavor: string;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@doc(\"Operations for the tracked child\")\n@armResourceOperations(TestTrackedChild)\ninterface TrackedChildOperations extends ProxyResourceOperations<TestTrackedChild> {}\n\n// Tenant resources\n\n@tenantResource\nmodel TestTenantResource is ProxyResource<TestTenantProperties> {\n  @doc(\"The name of the tenant resource.\")\n  @key(\"tenantResourceName\")\n  @segment(\"tenantResources\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestTenantResource)\ninterface TenantOperations\n  extends ProxyResourceOperations<TestTenantResource>,\n    ResourceUpdate<TestTenantResource, TestTenantProperties> {}\n\n@doc(\"rp-specific proeprties for the resource\")\nmodel TestTenantProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: ResourceProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n// Extension resources\n\nmodel TestExtensionResource is ExtensionResource<TestExtensionProperties> {\n  @doc(\"The name of the extension resource.\")\n  @key(\"extensionResourceName\")\n  @segment(\"extensionResources\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestExtensionResource)\ninterface ExtensionOperations\n  extends ProxyResourceOperations<TestExtensionResource>,\n    ResourceUpdate<TestExtensionResource, TestExtensionProperties> {}\n\n@doc(\"rp-specific proeprties for the resource\")\nmodel TestExtensionProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: ResourceProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\arm-library\\ref-library\\int-templates.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\arm-library\\ref-library\\int-templates.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n#suppress \"@azure-tools/typespec-azure-resource-manager/missing-operations-endpoint\" \"cuz\"\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n@armLibraryNamespace\nnamespace Microsoft.OperationsTest;\n\n// Tracked resources\nmodel TestTrackedResource2 is TrackedResource<TestTrackedProperties2> {\n  @doc(\"The name of the Tracked resource.\")\n  @key(\"trackedResourceName\")\n  @segment(\"trackedResource2s\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestTrackedResource2)\ninterface Tracked2Operations {\n  get is ArmResourceRead<TestTrackedResource2>;\n  create is ArmResourceCreateOrUpdateSync<TestTrackedResource2>;\n  update is ArmResourcePatchSync<TestTrackedResource2, TestTrackedProperties2>;\n  delete is ArmResourceDeleteSync<TestTrackedResource2>;\n  listByResourceGroup is ArmResourceListByParent<TestTrackedResource2>;\n  listBySubscription is ArmListBySubscription<TestTrackedResource2>;\n}\n\n@doc(\"rp-specific proeprties for the resource with all envelope properties\")\nmodel TestTrackedProperties2 {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: ResourceProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\arm-library\\ref-library\\op-templates.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\arm-library\\ref-library\\op-templates.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\nimport \"@azure-tools/typespec-providerhub\";\n\nusing Azure.ResourceManager;\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\n\n@armProviderNamespace\n@service({\n  title: \"CodeSigningManagementClient\",\n  version: \"2020-12-14-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n@doc(\"Code Sign Resource Provider Account and Certificate Profile management API.\")\nnamespace Microsoft.CodeSigning;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@doc(\"A CodeSignAccount resource\")\nmodel CodeSignAccount is TrackedResource<CodeSignAccountProperties> {\n  @doc(\"Code Signing account name\")\n  @pattern(\"^[a-zA-Z0-9-]{3,24}$\")\n  @key(\"accountName\")\n  @segment(\"codeSignAccounts\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface CodeSignAccounts\n  extends TrackedResourceOperations<CodeSignAccount, CodeSignAccountProperties> {}\n\n#suppress \"@azure-tools/typespec-azure-resource-manager/empty-updateable-properties\" \"This is an existing service that cannot be changed.\"\n@doc(\"Properties of the code sign account\")\nmodel CodeSignAccountProperties {\n  @visibility(\"read\")\n  @doc(\"The URI of the code sign account for performing operations on certificate profiles. This property is readonly\")\n  accountUri?: string;\n\n  @visibility(\"read\")\n  @doc(\"Indicates whether the account has been verified.\")\n  verificationStatus?: VerificationStatus;\n\n  @visibility(\"read\")\n  @doc(\"The status of the last operation.\")\n  provisioningState?: ProvisioningState;\n}\n\n@doc(\"Object containing updates for patch operations\")\nmodel CodeSignAccountPatch {\n  @doc(\"Resource tags.\")\n  tags: {};\n}\n\n@doc(\"Current verification information.\")\nenum VerificationStatus {\n  @doc(\"Verification is completed.\")\n  Completed,\n\n  @doc(\"Verification is in progress.\")\n  InProgress,\n\n  @doc(\"Verification is not completed.\")\n  NotCompleted,\n}\n\n@doc(\"The rotation policy for the profile.\")\nenum RotationPolicy {\n  @doc(\"Monthly rotation policy.\")\n  Monthly,\n}\n\n@doc(\"The type of the profile.\")\nenum ProfileType {\n  @doc(\"Test profile.\")\n  Test,\n\n  @doc(\"Trial profile.\")\n  Trial,\n\n  @doc(\"Private trust profile.\")\n  PrivateTrust,\n\n  @doc(\"Public trust profile.\")\n  PublicTrust,\n}\n\n@doc(\"The status of the current operation.\")\n@Azure.Core.lroStatus\nenum ProvisioningState {\n  ...ResourceProvisioningState,\n\n  @doc(\"The resource is being provisioned.\")\n  Provisioning,\n\n  @doc(\"The resource is updating.\")\n  Updating,\n\n  @doc(\"The resource is being deleted.\")\n  Deleting,\n\n  @doc(\"The resource create request has been accepted.\")\n  Accepted,\n}\n\n@parentResource(CodeSignAccount)\nmodel CertificateProfile is ProxyResource<CertificateProfileProperties> {\n  @doc(\"Certificate profile name\")\n  @pattern(\"^[a-zA-Z0-9-]{3,24}$\")\n  @key(\"profileName\")\n  @segment(\"certificateProfiles\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface CertificateProfiles\n  extends ResourceRead<CertificateProfile>,\n    ResourceUpdate<CertificateProfile, CertificateProfileProperties>,\n    ResourceListByParent<CertificateProfile> {}\n\n@doc(\"Properties of the certificate profile\")\nmodel CertificateProfileProperties {\n  @doc(\"The kind of certificate profile represented.\")\n  profileType: ProfileType;\n\n  @doc(\"The certificate rotation policy.\")\n  rotationPolicy: RotationPolicy;\n\n  @doc(\"Name of the certificate\")\n  commonName: string;\n\n  @visibility(\"read\")\n  @doc(\"Certificate authority of the certificate\")\n  authority?: string;\n\n  @doc(\"Subject Alternative Name of the certificate\")\n  subjectAlternativeName: string;\n\n  @visibility(\"read\")\n  @doc(\"The certificate organization.\")\n  organization?: string;\n\n  @visibility(\"read\")\n  @doc(\"The street address of the entity the certificate was issued to.\")\n  streetAddress?: string;\n\n  @visibility(\"read\")\n  @doc(\"The city of the entity the certificate was issued to.\")\n  city?: string;\n\n  @visibility(\"read\")\n  @doc(\"The state of the entity the certificate was issued to.\")\n  state?: string;\n\n  @visibility(\"read\")\n  @doc(\"The country of the entity the certificate was issued to.\")\n  country?: string;\n\n  // TODO: Flatten?\n\n  @visibility(\"read\")\n  @doc(\"The set of certificates associated with this profile.\")\n  certificates?: Certificate[];\n\n  @visibility(\"read\")\n  @doc(\"The provisioning state of the certificate.\")\n  provisioningState?: ProvisioningState;\n}\n\n@doc(\"Properties of the certificate\")\nmodel Certificate {\n  @doc(\"Id of the certificate\")\n  @visibility(\"read\")\n  id?: string;\n\n  @doc(\"Subject name of the certificate\")\n  @visibility(\"read\")\n  subjectName?: string;\n\n  @doc(\"Subject alternative name of the certificate\")\n  @visibility(\"read\")\n  subjectAlternativeName?: string;\n\n  @doc(\"Thumbprint of the certificate\")\n  @visibility(\"read\")\n  thumbprint?: string;\n\n  @doc(\"Certificate created date\")\n  @visibility(\"read\")\n  createdDate?: string;\n\n  @doc(\"Certificate expiry date\")\n  @visibility(\"read\")\n  expiryDate?: string;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\codesigning\\codesigning.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\codesigning\\codesigning.tsp"}, {"file_content": "import \"./codesigning.tsp\";\n", "file_path": "../../packages/samples/specs\\resource-manager\\codesigning\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\codesigning\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@armProviderNamespace\n@service({\n  title: \"ContosoProviderHubClient\",\n  version: \"2021-10-01-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n@doc(\"Contoso Resource Provider management API.\")\nnamespace Microsoft.ContosoProviderHub;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@doc(\"A ContosoProviderHub resource\")\nmodel Employee is TrackedResource<EmployeeProperties> {\n  @doc(\"The first and last name fo the employee\")\n  @pattern(\"^[a-zA-Z0-9-]{3,24}$\")\n  @key(\"employeeName\")\n  @segment(\"employees\")\n  @path\n  name: string;\n}\n\n@doc(\"The rp-specific properties of the employee\")\nmodel EmployeeProperties {\n  @doc(\"The employee age in years\")\n  age?: int32;\n\n  @doc(\"The city of current residence\")\n  city?: string;\n\n  @doc(\"security profile for the employee\")\n  @encode(\"base64url\")\n  profile?: bytes;\n\n  @visibility(\"read\")\n  @doc(\"The status of the last operation.\")\n  provisioningState?: ProvisioningState;\n}\n\n@armResourceOperations\ninterface Employees extends TrackedResourceOperations<Employee, EmployeeProperties> {}\n\n@doc(\"The provisioning state of a resource.\")\n@Azure.Core.lroStatus\nenum ProvisioningState {\n  ...ResourceProvisioningState,\n\n  @doc(\"The resource is being provisioned\")\n  Provisioning,\n\n  @doc(\"The resource is updating\")\n  Updating,\n\n  @doc(\"The resource is being deleted\")\n  Deleting,\n\n  @doc(\"The resource create request has been accepted\")\n  Accepted,\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\contoso\\contoso.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\contoso\\contoso.tsp"}, {"file_content": "import \"./contoso.tsp\";\n", "file_path": "../../packages/samples/specs\\resource-manager\\contoso\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\contoso\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n#suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is an existing namespace.\"\n@armProviderNamespace\n@service({\n  title: \"Microsoft.CSharpAttributeTest\",\n  version: \"2021-09-21-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\nnamespace Microsoft.CSharpAttributeTest;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\nmodel CustomAttributesResource is TrackedResource<CustomAttributesProperties> {\n  @doc(\"The name of the all properties resource.\")\n  @key(\"customAttributesName\")\n  @segment(\"customAttributes\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface CustomAttributes\n  extends TrackedResourceOperations<CustomAttributesResource, CustomAttributesProperties> {}\n\n@doc(\"CustomAttributesProperties models that included fields will have custom C# attribute.\")\nmodel CustomAttributesProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: EnvelopeProvisioningState;\n\n  @doc(\"duration will have custom JsonConverter attributes\")\n  pollingInterval: duration;\n\n  @doc(\"safeint will have custom [SafeInt] attributes that later validation can key on\")\n  safeNumber: safeint;\n}\n\n@Azure.Core.lroStatus\n@doc(\"Envelope provisioning state.\")\nenum EnvelopeProvisioningState {\n  ...ResourceProvisioningState,\n\n  @doc(\"Working state.\")\n  Working,\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\csharpattributetest\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\csharpattributetest\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\nimport \"@azure-tools/typespec-providerhub\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\nusing Azure.Core;\n\n@armProviderNamespace(\"Contoso.CustomerManagedKeyExample\")\n@service({\n  title: \"Contoso.CustomerManagedKeyExample\",\n  version: \"2023-03-01-preview\",\n})\n@doc(\"An example of using the Customer Managed Key Encryption properties in a resource type.\")\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n@armCommonTypesVersion(Azure.ResourceManager.CommonTypes.Versions.v5)\nnamespace Microsoft.UpdateTests;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@doc(\"Widget Resoruce\")\nmodel WidgetResource is TrackedResource<WidgetResourceProperties> {\n  @doc(\"The name of the widget.\")\n  @key(\"widgetName\")\n  @segment(\"widgets\")\n  @path\n  name: string;\n}\n\n@doc(\"Widget Resource Properties.\")\nmodel WidgetResourceProperties {\n  @doc(\"The widget color.\")\n  @visibility(\"create\", \"read\")\n  color: string;\n\n  ...Encryption;\n}\n\n@armResourceOperations\ninterface Widgets {\n  get is ArmResourceRead<WidgetResource>;\n  create is ArmResourceCreateOrUpdateAsync<WidgetResource>;\n  update is ArmTagsPatchSync<WidgetResource>;\n  delete is ArmResourceDeleteAsync<WidgetResource>;\n  listByResourceGroup is ArmResourceListByParent<WidgetResource>;\n  listBySubscription is ArmListBySubscription<WidgetResource>;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\customer-managed-keys\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\customer-managed-keys\\main.tsp"}, {"file_content": "namespace Microsoft.DiscriminatorTest.Common;\n\nusing TypeSpec.Rest;\n\n@discriminator(\"roleType\")\n@doc(\"The HR role of the employee\")\nmodel EmployeeRole {}\n\n@doc(\"An individual contributor\")\nmodel IcRole extends EmployeeRole {\n  @doc(\"The HR role of the employee\")\n  roleType: \"IC\";\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\discriminatortest\\common.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\discriminatortest\\common.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\nimport \"./common.tsp\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\nusing Microsoft.DiscriminatorTest.Common;\n\n@armProviderNamespace\n@service({\n  title: \"DiscriminatorTest\",\n  version: \"2021-10-01-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n@doc(\"DiscriminatorTest Resource Provider management API.\")\nnamespace Microsoft.DiscriminatorTest;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@doc(\"A DiscriminatorTest resource\")\nmodel Employee is TrackedResource<EmployeeProperties> {\n  @doc(\"The name of the employee\")\n  @pattern(\"^[a-zA-Z0-9-]{3,24}$\")\n  @key(\"employeeName\")\n  @segment(\"employees\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface Employees extends TrackedResourceOperations<Employee, EmployeeProperties> {\n  @doc(\"Increase employee compensation\")\n  @post\n  @armResourceAction(Employee)\n  giveRaise(...ResourceInstanceParameters<Employee>): ArmResponse<Employee> | ErrorResponse;\n}\n\n@doc(\"The rp-specific properties of the employee\")\nmodel EmployeeProperties {\n  @doc(\"age in years\")\n  age?: int32;\n\n  @doc(\"City of current residence\")\n  city?: string;\n\n  @doc(\"The HR role of the employee\")\n  role: EmployeeRole;\n\n  @doc(\"The HR compensation type of the employee\")\n  employeeType: EmployeeType;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@discriminator(\"employeeType\")\n@doc(\"The employee HR compensationtype\")\nmodel EmployeeType {}\n\n@doc(\"An employee paid hourly wage\")\nmodel HourlyEmployee extends EmployeeType {\n  @doc(\"The HR compensation type of the employee\")\n  employeeType: \"Hourly\";\n\n  @doc(\"hourly pay rate\")\n  hourlyRate: int32;\n}\n\n@doc(\"An employee paid a salary\")\nmodel SalariedEmployee extends EmployeeType {\n  @doc(\"The HR compensation type of the employee\")\n  employeeType: \"Salaried\";\n\n  @doc(\"Annual salary of the employee\")\n  annualPay: int32;\n}\n\n@doc(\"An executive employee\")\nmodel ExecutiveEmployee extends EmployeeType {\n  @doc(\"The HR compensation type of the employee\")\n  employeeType: \"Executive\";\n\n  @doc(\"The executive compensation for the employee\")\n  specialReward: int32;\n}\n\n@doc(\"A manager\")\nmodel ManagerRole extends EmployeeRole {\n  @doc(\"The HR compensation type of the employee\")\n  roleType: \"Manager\";\n\n  @doc(\"The size of the team managed\")\n  teamSize: int32;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\discriminatortest\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\discriminatortest\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-providerhub-controller\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\nimport \"./models.tsp\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\nusing Autorest;\n\n@armProviderNamespace\n@service({\n  title: \"Dynatrace.Observability\",\n})\n@versioned(Versions)\nnamespace Dynatrace.Observability;\n\ninterface Operations extends Azure.ResourceManager.Operations {\n  checkName is checkGlobalNameAvailability;\n  checkLocalName is checkLocalNameAvailability;\n}\n\n@doc(\"Dynatrace Monitor Resource version\")\nenum Versions {\n  @doc(\"Version 2021-06-13-preview\")\n  @useDependency(Azure.Core.Versions.v1_0_Preview_2, Azure.ResourceManager.Versions.v1_0_Preview_1)\n  `2021-06-13-preview`,\n\n  @doc(\"Version 2021-07-01-preview\")\n  @useDependency(Azure.Core.Versions.v1_0_Preview_2, Azure.ResourceManager.Versions.v1_0_Preview_1)\n  `2022-04-30-preview`,\n}\n\n@doc(\"Dynatrace Monitor Resource\")\nmodel MonitorResource is TrackedResource<MonitorProperties> {\n  @doc(\"Monitor resource name\")\n  @key(\"monitorName\")\n  @segment(\"monitors\")\n  @path\n  name: string;\n\n  ...ManagedServiceIdentity; // change here to use the standard definition\n}\n\n@armResourceOperations\ninterface Monitors extends TrackedResourceOperations<MonitorResource, MonitorProperties> {\n  @post\n  @doc(\"Gets the user account credentials for a Monitor\")\n  @armResourceAction(MonitorResource)\n  getAccountCredentials(\n    ...ResourceInstanceParameters<MonitorResource>,\n  ): AccountInfoSecure | ErrorResponse;\n\n  @post\n  @doc(\"List the resources currently being monitored by the Dynatrace monitor resource.\")\n  @armResourceAction(MonitorResource)\n  listMonitoredResources(\n    ...ResourceInstanceParameters<MonitorResource>,\n  ): ArmResponse<MonitoredResourceListResponse> | ErrorResponse;\n\n  @post\n  @action(\"vmHostPayload\")\n  @doc(\"Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM.\")\n  @armResourceAction(MonitorResource)\n  getVmHostPayload(\n    ...ResourceInstanceParameters<MonitorResource>,\n  ): ArmResponse<VMExtensionPayload> | ErrorResponse;\n\n  @post\n  @action(\"vmHostUpdate\")\n  @doc(\"Sending request to update the collection when Dynatrace agent has been installed on a VM for a given monitor.\")\n  @armResourceAction(MonitorResource)\n  listVmHostUpdate(\n    ...ResourceInstanceParameters<MonitorResource>,\n    ...VMHostUpdateParameter, // change here\n  ): ArmResponse<VMResourcesListResponse> | ErrorResponse;\n\n  @post\n  @doc(\"List the compute resources currently being monitored by the Dynatrace resource.\")\n  @armResourceAction(MonitorResource)\n  listVmHosts(\n    ...ResourceInstanceParameters<MonitorResource>,\n  ): ArmResponse<VMResourcesListResponse> | ErrorResponse;\n\n  @post\n  @action(\"singleSignOnConfigurations\")\n  @doc(\"List the single sign-on configurations for a given monitor resource.\")\n  @armResourceAction(MonitorResource)\n  listSingleSignOnConfigurations(\n    ...ResourceInstanceParameters<MonitorResource>,\n  ): ArmResponse<VMResourcesListResponse> | ErrorResponse;\n}\n\n@doc(\"Tag rules for a monitor resource\")\n@parentResource(MonitorResource)\nmodel TagRule is ProxyResource<MonitoringTagRulesProperties> {\n  @doc(\"Monitor RuleSet resource name\")\n  @key(\"ruleSetName\")\n  @segment(\"tagRules\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface TagRules\n  extends ProxyResourceOperations<TagRule>,\n    ProxyResourceUpdate<TagRule, MonitoringTagRulesProperties> {}\n\n// note: I think you only need get.  It is odd to have PUT without DELETE, though.\n\n@doc(\"Single sign-on configurations for a given monitor resource.\")\n@parentResource(MonitorResource)\nmodel DynatraceSingleSignOnResource is ProxyResource<DynatraceSingleSignOnProperties> {\n  @doc(\"Single Sign On Configuration Name\")\n  @key(\"configurationName\")\n  @segment(\"singleSignOnConfigurations\")\n  @path\n  name: string;\n}\n\n// check if this is correct. We only need these 2 operations\n\n#suppress \"@azure-tools/typespec-azure-resource-manager/no-resource-delete-operation\" \"Single sign on resources must be deleted out of band\"\n@armResourceOperations(DynatraceSingleSignOnResource)\ninterface SingleSignOn\n  extends ResourceCreate<DynatraceSingleSignOnResource>,\n    ResourceRead<DynatraceSingleSignOnResource>,\n    ResourceListByParent<DynatraceSingleSignOnResource> {}\n", "file_path": "../../packages/samples/specs\\resource-manager\\dynatrace\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\dynatrace\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-autorest\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nnamespace Dynatrace.Observability;\n\nusing TypeSpec.Http;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@doc(\"A virtual machine reference\")\n@pattern(\"\\\\/subscriptions\\\\/[a-z0-9\\\\-]+\\\\/resourceGroups\\\\/[^\\\\/]+\\\\/providers\\\\/Microsoft\\\\.Compute\\\\/virtualMachines\\\\/[^\\\\/]+\")\nscalar virtualMachineId extends string;\n\n@doc(\"Reusable representation of an email address\")\n@pattern(\"^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z]{2,}$\")\nscalar email extends string;\n\n@doc(\"Shorthand for setting length limit.\")\n@maxLength(50)\nscalar MediumString extends string;\n\n@doc(\"Credential string.\")\n@secret\nscalar SecureString extends string;\n\n@doc(\"Indicates whether metrics are being sent.\")\nenum SendingMetricsStatus {\n  @doc(\"Metrics are enabled.\")\n  Enabled,\n\n  @doc(\"Metrics are disabled.\")\n  Disabled,\n}\n\n@doc(\"Indicates whether logs are being sent.\")\nenum SendingLogsStatus {\n  @doc(\"Logs are enabled.\")\n  Enabled,\n\n  @doc(\"Logs are disabled.\")\n  Disabled,\n}\n\n@doc(\"Indicates whether AAD logs are being sent.\")\nenum SendAadLogsStatus {\n  @doc(\"AAD logs are enabled.\")\n  Enabled,\n\n  @doc(\"AAD logs are disabled.\")\n  Disabled,\n}\n\n@doc(\"Indicates whether activity logs are being sent.\")\nenum SendActivityLogsStatus {\n  @doc(\"Activity logs are enabled.\")\n  Enabled,\n\n  @doc(\"Activity logs are disabled.\")\n  Disabled,\n}\n\n@doc(\"Indicates whether subscription logs are being sent.\")\nenum SendSubscriptionLogsStatus {\n  @doc(\"Subscription logs are enabled.\")\n  Enabled,\n\n  @doc(\"Subscription logs are disabled.\")\n  Disabled,\n}\n\n// Why is this not represented as a subResource? How are monitored resources added?\n//MonitorResource and MontitoredResource are really close together as names, and may cause confusion\n// perhaps ObservedResource\n@doc(\"Details of resource being monitored by Dynatrace monitor resource\")\nmodel MonitoredResource {\n  @doc(\"The ARM id of the resource.\")\n  id?: string;\n\n  @doc(\"Flag indicating if resource is sending metrics to Dynatrace.\")\n  sendingMetrics?: SendingMetricsStatus;\n\n  @added(Versions.`2022-04-30-preview`)\n  @doc(\"Reason for why the resource is sending metrics (or why it is not sending).\")\n  reasonForMetricsStatus?: string;\n\n  @doc(\"Flag indicating if resource is sending logs to Dynatrace.\")\n  sendingLogs?: SendingLogsStatus;\n\n  @added(Versions.`2022-04-30-preview`)\n  @doc(\"Reason for why the resource is sending logs (or why it is not sending).\")\n  reasonForLogsStatus?: string;\n}\n\n@doc(\"List of all the resources being monitored by Dynatrace monitor resource\")\nmodel MonitoredResourceListResponse extends Azure.Core.Page<MonitoredResource> {}\n\n@doc(\"Properties specific to the monitor resource.\")\nmodel MonitorProperties {\n  @doc(\"Status of the monitor.\")\n  monitoringStatus?: MonitoringStatus;\n\n  @doc(\"Marketplace subscription status.\")\n  marketplaceSubscriptionStatus?: MarketplaceSubscriptionStatus;\n\n  @doc(\"Properties of the Dynatrace environment.\")\n  dynatraceEnvironmentProperties?: DynatraceEnvironmentProperties;\n\n  #suppress \"@azure-tools/typespec-providerhub/non-breaking-versioning\" \"This is a preview api-version\"\n  @removed(Versions.`2022-04-30-preview`)\n  @doc(\"User info.\")\n  userInfo?: UserInfo;\n\n  @doc(\"Billing plan information.\")\n  planData?: PlanData;\n\n  @visibility(\"read\")\n  @doc(\"Liftr Resource category.\")\n  liftrResourceCategory?: LiftrResourceCategories;\n\n  @visibility(\"read\")\n  @doc(\"The priority of the resource.\")\n  liftrResourcePreference?: int32;\n\n  @visibility(\"read\")\n  @doc(\"Provisioning state of the resource.\")\n  provisioningState?: ProvisioningState;\n\n  @doc(\"A foo\")\n  @added(Versions.`2022-04-30-preview`)\n  foo?: string;\n}\n\n@doc(\"An artificial model for testing versioning\")\nmodel DynatraceEnvironmentBase {\n  @added(Versions.`2022-04-30-preview`)\n  @doc(\"Dynatrace Environment Information\")\n  @visibility(\"read\")\n  environmentInfo?: EnvironmentInfo;\n}\n\n@doc(\"Properties of the Dynatrace environment.\")\nmodel DynatraceEnvironmentProperties extends DynatraceEnvironmentBase {\n  @doc(\"User id\")\n  @visibility(\"read\")\n  userId?: string;\n\n  @doc(\"Dynatrace Account Information\")\n  @visibility(\"read\")\n  accountInfo?: AccountInfo;\n}\n\n@doc(\"Dynatrace Account Information\")\nmodel AccountInfo {\n  @visibility(\"read\")\n  @doc(\"Account Id of the account this environment is linked to\")\n  accountId?: string;\n\n  @visibility(\"read\")\n  @doc(\"Region in which the account is created\")\n  regionId?: string;\n}\n\n@doc(\"Dynatrace account API Key\")\nmodel AccountInfoSecure {\n  @visibility(\"read\")\n  @doc(\"Account Id of the account this environment is linked to\")\n  accountId?: string;\n\n  @visibility(\"read\")\n  @doc(\"API Key of the user account\")\n  apiKey?: SecureString;\n\n  @visibility(\"read\")\n  @doc(\"Region in which the account is created\")\n  regionId?: string;\n}\n\n@doc(\"Dynatrace Environment Information\")\nmodel EnvironmentInfo {\n  @visibility(\"read\")\n  @doc(\"Id of the environment created\")\n  environmentId?: string;\n\n  @visibility(\"read\")\n  @doc(\"Ingestion key of the environment\")\n  ingestionKey?: string;\n\n  @visibility(\"read\")\n  @doc(\"Ingestion endpoint used for sending logs\")\n  logsIngestionEndpoint?: string;\n}\n\n@doc(\"Provisioning state of the monitoring resource\")\n@Azure.Core.lroStatus\nenum ProvisioningState {\n  ...ResourceProvisioningState,\n\n  @doc(\"The resource provisioning has been accepted.\")\n  Accepted,\n\n  @doc(\"The resource is being created.\")\n  Creating,\n\n  @doc(\"The resource is being updated.\")\n  Updating,\n\n  @doc(\"The resource is being deleted.\")\n  Deleting,\n\n  @doc(\"The resource has been deleted.\")\n  Deleted,\n\n  @doc(\"The resource status is unspecified.\")\n  NotSpecified,\n}\n\n@doc(\"Flag specifying if the resource monitoring is enabled or disabled.\")\nenum MonitoringStatus {\n  @doc(\"Monitoring enabled\")\n  Enabled,\n\n  @doc(\"Monitoring disabled\")\n  Disabled,\n}\n\n@doc(\"Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.\")\nenum MarketplaceSubscriptionStatus {\n  @doc(\"Subscription is active\")\n  Active,\n\n  @doc(\"Subscription is suspended\")\n  Suspended,\n}\n\n@doc(\"Liftr resource category\")\nenum LiftrResourceCategories {\n  @doc(\"Unknown\")\n  Unknown,\n\n  @doc(\"Monitor logs\")\n  MonitorLogs,\n}\n\n@doc(\"User info.\")\nmodel UserInfo {\n  @doc(\"First Name of the user\")\n  firstName?: MediumString;\n\n  @doc(\"Last Name of the user\")\n  lastName?: MediumString;\n\n  @doc(\"Email of the user used by Dynatrace for contacting them if needed\")\n  emailAddress?: email;\n\n  @maxLength(40)\n  @doc(\"Phone number of the user used by Dynatrace for contacting them if needed\")\n  phoneNumber?: string;\n\n  @doc(\"Country of the user\")\n  country?: string;\n}\n\n@doc(\"Billing plan information.\")\nmodel PlanData {\n  @doc(\"different usage type like PAYG/COMMITTED. this could be enum\")\n  usageType?: MediumString;\n\n  @doc(\"different billing cycles like MONTHLY/WEEKLY. this could be enum\")\n  billingCycle?: MediumString;\n\n  @doc(\"plan id as published by Dynatrace\")\n  planDetails?: MediumString;\n\n  @doc(\"date when plan was applied\")\n  effectiveDate?: utcDateTime;\n}\n\n@doc(\"Properties for the Tag rules resource of a Monitor account.\")\nmodel MonitoringTagRulesProperties {\n  @doc(\"Set of rules for sending logs for the Monitor resource.\")\n  logRules?: LogRules;\n\n  @visibility(\"read\")\n  @doc(\"Provisioning state of the resource.\")\n  provisioningState?: ProvisioningState;\n}\n\n@doc(\"Set of rules for sending logs for the Monitor resource.\")\nmodel LogRules {\n  @doc(\"Flag specifying if AAD logs should be sent for the Monitor resource.\")\n  sendAadLogs?: SendAadLogsStatus; // Enabled, Disabled\n\n  @doc(\"Flag specifying if subscription logs should be sent for the Monitor resource.\")\n  sendSubscriptionLogs?: SendSubscriptionLogsStatus; // Enabled, Disabled\n\n  @doc(\"Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.\")\n  sendActivityLogs?: SendActivityLogsStatus; // Enabled, Disabled\n\n  @doc(\"\"\"\n  List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured.\n  If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.\n  \"\"\")\n  @OpenAPI.extension(\"x-ms-identifiers\", [\"name\"])\n  filteringTags?: FilteringTag[];\n}\n\n@doc(\"The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.\")\nmodel FilteringTag {\n  @doc(\"The name (also known as the key) of the tag.\")\n  name?: string;\n\n  @doc(\"The value of the tag.\")\n  value?: string;\n\n  @doc(\"Valid actions for a filtering tag. Exclusion takes priority over inclusion.\")\n  action?: TagAction;\n}\n\n@doc(\"Valid actions for a filtering tag. Exclusion takes priority over inclusion.\")\nenum TagAction {\n  @doc(\"Include tag\")\n  Include,\n\n  @doc(\"Exclude tag\")\n  Exclude,\n}\n\n#suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is an existing service.\"\n@doc(\"Response of payload to be passed while installing VM agent.\")\nmodel VMExtensionPayload {\n  @doc(\"API Key of the user account\")\n  apiKey?: SecureString;\n\n  @doc(\"Id of the environment created\")\n  environmentId?: string;\n}\n\n#suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is an existing service.\"\n@doc(\"VM Resource Ids\")\nmodel VMResources {\n  @doc(\"VM resource ID on which agent is installed\")\n  id?: virtualMachineId; // made a chaneg here to inform about the kind of reference this must be.\n\n  @doc(\"Version of the Dynatrace agent installed on the VM.\")\n  agentVersion?: string;\n}\n\n#suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is an existing service.\"\n@doc(\"Various states of the updating vm extension on resource\")\nenum VMHostUpdateState {\n  @doc(\"Extension is being installed\")\n  Install,\n\n  @doc(\"Extension is being deleted\")\n  Delete,\n}\n\n#suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is an existing service.\"\n@doc(\"Response of a list VM Host Update Operation.\")\nmodel VMResourcesListResponse extends Azure.Core.Page<VMResources> {}\n\n#suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is an existing service.\"\n@doc(\"Host Update Parameter specification.\")\nmodel VMHostUpdateParameter {\n  @doc(\"The details of the VMHost update request.\")\n  @body\n  request: VMHostUpdateRequest;\n}\n\n#suppress \"@azure-tools/typespec-azure-core/casing-style\" \"This is an existing service.\"\n@doc(\"Request of a list VM Host Update Operation.\")\nmodel VMHostUpdateRequest {\n  @doc(\"VM resource ID on which agent is installed/deleted\")\n  vmResourceIds?: VMResources[]; // [yes, it is] check if this is the correct way to make this an array\n\n  @doc(\"Specifies the state of the operation - install/ delete.\")\n  state?: VMHostUpdateState;\n}\n\n@doc(\"Various states of the SSO resource\")\nenum SingleSignOnStates {\n  @doc(\"Initial state\")\n  Initial,\n\n  @doc(\"SSO is enabled\")\n  Enable,\n\n  @doc(\"SSO is disabled\")\n  Disable,\n\n  @doc(\"Existing SSO authentication\")\n  Existing,\n}\n\n@doc(\"The details of a DynaTrace single sign-on.\")\nmodel DynatraceSingleSignOnProperties {\n  @doc(\"State of Single Sign On\")\n  singleSignOnState?: SingleSignOnStates;\n\n  @doc(\"Version of the Dynatrace agent installed on the VM.\")\n  enterpriseAppId?: string;\n\n  @doc(\"The login URL specific to this Dynatrace Environment\")\n  singleSignOnUrl: string;\n\n  @doc(\"array of Aad(azure active directory) domains\")\n  aadDomains: string[]; // [yes, it is] check if this is the correct way to make this an array\n\n  @doc(\"Provisioning state of the resource.\")\n  provisioningState?: ProvisioningState;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\dynatrace\\models.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\dynatrace\\models.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@service({\n  title: \"Microsoft.EnvelopeTest\",\n  version: \"2021-09-21-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n@armProviderNamespace\nnamespace Microsoft.EnvelopeTest;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\nmodel AllPropertiesResource is TrackedResource<AllPropertiesProperties> {\n  @doc(\"The name of the all properties resource.\")\n  @key(\"allPropertiesName\")\n  @segment(\"allProperties\")\n  @path\n  name: string;\n\n  ...EntityTag;\n  ...ManagedBy;\n  ...ResourceKind;\n  ...ResourcePlan;\n  ...ResourceSku;\n  ...ManagedServiceIdentity;\n}\n\n@armResourceOperations\ninterface AllProperties\n  extends TrackedResourceOperations<AllPropertiesResource, AllPropertiesProperties> {}\n\n@doc(\"rp-specific proeprties for the resource with all envelope properties\")\nmodel AllPropertiesProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: EnvelopeProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n@doc(\"rp-specific properties for the resource using system-only Managed Identity\")\nmodel SystemOnlyProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: EnvelopeProvisioningState;\n}\n\nmodel SystemOnlyResource is TrackedResource<SystemOnlyProperties> {\n  @doc(\"The name of the all properties resource.\")\n  @key(\"systemOnlyPropertiesName\")\n  @segment(\"systems\")\n  @path\n  name: string;\n\n  ...ManagedSystemAssignedIdentity;\n}\n\n@armResourceOperations\ninterface SystemsOnlyResources\n  extends TrackedResourceOperations<SystemOnlyResource, SystemOnlyProperties> {}\n\n@Azure.Core.lroStatus\n@doc(\"Envelope provisioning state\")\nenum EnvelopeProvisioningState {\n  ...ResourceProvisioningState,\n\n  @doc(\"Working\")\n  Working,\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\envelopetest\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\envelopetest\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\nusing Azure.ResourceManager.Foundations;\nusing Autorest;\n\n@armProviderNamespace\n@service({\n  title: \"Microsoft.Confluent\",\n  version: \"2021-03-01-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\nnamespace Microsoft.Confluent;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@doc(\"A string that represents a URI.\")\nscalar Uri extends string;\n\n@doc(\"Reusable representation of an email address\")\n@pattern(\"\\\\w+@\\\\w+\\\\.\\\\w+\")\nscalar email extends string;\n\n@doc(\"Shorthand for setting length limit.\")\n@minLength(5)\n@maxLength(50)\nscalar MediumString extends string;\n\n@doc(\"Shorthand for setting length limit.\")\n@maxLength(25)\nscalar ShortString extends string;\n\n@doc(\"Details of the Confluent organization.\")\nmodel Organization is TrackedResource<OrganizationProperties> {\n  @doc(\"Organization resource name\")\n  @key(\"organizationName\")\n  @segment(\"organizations\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface Organizations extends TrackedResourceOperations<Organization, OrganizationProperties> {}\n\n@doc(\"Details of the Confluent organization.\")\nmodel OrganizationProperties {\n  @doc(\"UTC Time when Organization resource was created.\")\n  @visibility(\"read\")\n  createdTime?: utcDateTime;\n\n  @doc(\"Id of the Confluent organization.\")\n  @visibility(\"read\", \"create\")\n  organizationId: string;\n\n  @doc(\"Single sign-on url for the Confluent organization.\")\n  @visibility(\"read\", \"create\")\n  ssoUrl: Uri;\n\n  @doc(\"Details of the product offering.\")\n  offerDetail: OfferDetail;\n\n  @doc(\"Subscriber details.\")\n  userDetail: UserDetail;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@doc(\"SaaS offer status.\")\nenum OfferStatus {\n  @doc(\"Offer started.\")\n  Started,\n\n  @doc(\"Offer pending fulfillment start.\")\n  PendingFulfillmentStart,\n\n  @doc(\"Offer in progress.\")\n  InProgress,\n\n  @doc(\"Offer subscribed.\")\n  Subscribed,\n\n  @doc(\"Offer suspended.\")\n  Suspended,\n\n  @doc(\"Offer reinstated.\")\n  Reinstated,\n\n  @doc(\"Offer succeeded.\")\n  Succeeded,\n\n  @doc(\"Offer failed.\")\n  Failed,\n\n  @doc(\"Offer unsubscribed.\")\n  Unsubscribed,\n\n  @doc(\"Offer updating.\")\n  Updating,\n}\n\n@doc(\"Details of the product offering.\")\nmodel OfferDetail {\n  @doc(\"Id of the product publisher.\")\n  publisherId: MediumString;\n\n  @doc(\"Id of the product offering.\")\n  id: MediumString;\n\n  @doc(\"Id of the product offer plan.\")\n  planId: MediumString;\n\n  @doc(\"Name of the product offer plan.\")\n  planName: MediumString;\n\n  @doc(\"Offer plan term unit.\")\n  termUnit: ShortString;\n\n  @doc(\"SaaS offer status.\")\n  status: OfferStatus;\n}\n\n@doc(\"Details of the subscriber\")\nmodel UserDetail {\n  @doc(\"Subscriber first name.\")\n  firstName: MediumString;\n\n  @doc(\"Subscriber last name.\")\n  lastName: MediumString;\n\n  @doc(\"Subscriber email address.\")\n  emailAddress: email;\n}\n\n@doc(\"The details of a marketplace agreement.\")\n@singleton\nmodel ConfluentAgreementResource is ProxyResource<ConfluentAgreementResourceProperties> {\n  @key\n  @segment(\"agreements\")\n  @path\n  @doc(\"The name fo the agreement\")\n  name: string;\n}\n\n@doc(\"The details of the agreement.\")\nmodel ConfluentAgreementResourceProperties {\n  ...DefaultProvisioningStateProperty;\n}\n\n#suppress \"@azure-tools/typespec-azure-resource-manager/no-resource-delete-operation\" \"AN agreement can only be deleted out of band.\"\n@armResourceOperations(ConfluentAgreementResource)\ninterface MarketplaceAgreements extends ResourceListBySubscription<ConfluentAgreementResource> {\n  @put\n  @doc(\"Create a new marketplace agreement.\")\n  @armResourceCreateOrUpdate(ConfluentAgreementResource)\n  create(\n    ...SubscriptionScope<ConfluentAgreementResource>,\n    ...KeysOf<ConfluentAgreementResource>,\n\n    @doc(\"The agreement details.\")\n    @body\n    agreement: ConfluentAgreementResource,\n  ): ArmResponse<ConfluentAgreementResource> | ErrorResponse;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\liftr.confluent\\confluent.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\liftr.confluent\\confluent.tsp"}, {"file_content": "import \"./confluent.tsp\";\n", "file_path": "../../packages/samples/specs\\resource-manager\\liftr.confluent\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\liftr.confluent\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@armProviderNamespace\n@service({\n  title: \"Azure Fluid Relay\",\n  version: \"2021-03-12-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\nnamespace Microsoft.FluidRelay;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@doc(\"A string that represents a URI.\")\nscalar Uri extends string;\n\n@doc(\"The representation of a secret value, represented as a string on the wire\")\n@secret\nscalar SecretKey extends string;\n\n@doc(\"Details of the FluidRelay server.\")\nmodel FluidRelayServer is TrackedResource<FluidRelayServerProperties> {\n  @path\n  @key\n  @doc(\"The resource name.\")\n  @segment(\"fluidRelayServers\")\n  name: string;\n}\n\n@armResourceOperations\ninterface FluidRelayServers\n  extends TrackedResourceOperations<FluidRelayServer, FluidRelayServerProperties> {\n  @doc(\"Regenerate the primary or secondary key for this server.\")\n  @post\n  @armResourceAction(FluidRelayServer)\n  regenerateKey(\n    ...ResourceInstanceParameters<FluidRelayServer>,\n\n    @doc(\"The details of the key generation request.\")\n    @body\n    parameters: RegenerateKeyRequest,\n  ): ArmResponse<FluidRelayServerKeys> | ErrorResponse;\n\n  @doc(\"Retrieve the keys for this server.\")\n  @post\n  @armResourceAction(FluidRelayServer)\n  getKeys(\n    ...ResourceInstanceParameters<FluidRelayServer>,\n  ): ArmResponse<FluidRelayServerKeys> | ErrorResponse;\n}\n\n@doc(\"The properties of a Fluid Relay Service resource.\")\nmodel FluidRelayServerProperties {\n  @doc(\"The Fluid tenantId for this server\")\n  @visibility(\"read\")\n  frsTenantId?: string;\n\n  @doc(\"The Fluid service endpoints for this server.\")\n  @visibility(\"read\")\n  fluidRelayEndpoints?: FluidRelayEndpoints;\n\n  @doc(\"Provisioning states for FluidRelay RP\")\n  provisioningState?: ProvisioningState;\n}\n\n@doc(\"Provisioning states for FluidRelay RP\")\n@Azure.Core.lroStatus\nenum ProvisioningState {\n  ...ResourceProvisioningState,\n}\n\n@doc(\"The Fluid Relay Service endpoints for this server.\")\nmodel FluidRelayEndpoints {\n  @doc(\"The Fluid Relay Orderer Endpoints.\")\n  @visibility(\"read\")\n  ordererEndpoints?: Uri[];\n\n  @doc(\"The Fluid Relay storage endpoints.\")\n  @visibility(\"read\")\n  storageEndpoints?: Uri[];\n}\n\n@doc(\"The set of available keys for this server.\")\nmodel FluidRelayServerKeys {\n  @doc(\"The primary key for this server.\")\n  @visibility(\"read\")\n  key1?: SecretKey;\n\n  @doc(\"The secondary key for this server.\")\n  @visibility(\"read\")\n  key2?: SecretKey;\n}\n\n@doc(\"The keys that are defined fro a FluidRelay Service.\")\nenum KeyName {\n  @doc(\"Key 1\")\n  key1,\n\n  @doc(\"Key 2\")\n  key2,\n}\n\n@doc(\"Specifies which key should be generated.\")\nmodel RegenerateKeyRequest {\n  @doc(\"The key to regenerate.\")\n  keyName: KeyName;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\liftr.frs\\fluidrelay.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\liftr.frs\\fluidrelay.tsp"}, {"file_content": "import \"./fluidrelay.tsp\";\n", "file_path": "../../packages/samples/specs\\resource-manager\\liftr.frs\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\liftr.frs\\main.tsp"}, {"file_content": "import \"./playfab.tsp\";\n", "file_path": "../../packages/samples/specs\\resource-manager\\liftr.playfab\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\liftr.playfab\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Versioning;\nusing TypeSpec.Rest;\nusing Azure.ResourceManager;\n\n@armProviderNamespace\n@service({\n  title: \"Azure PlayFab\",\n  version: \"2021-06-15-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\nnamespace Microsoft.PlayFab;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@doc(\"A reference to a resource of type title.\")\n@pattern(\"\\\\/subscriptions\\\\/[a-z0-9\\\\-]+\\\\/resourceGroups\\\\/[^\\\\/]+\\\\/providers\\\\/Microsoft\\\\.PlayFab\\\\/titles\\\\/[^\\\\/]+\")\nscalar TitleReference\n  extends ResourceIdentifier<[\n    {\n      type: \"Microsoft.Playfab/titles\",\n    }\n  ]>;\n\n@doc(\"A reference to a player database resource.\")\n@pattern(\"\\\\/subscriptions\\\\/[a-z0-9\\\\-]+\\\\/resourceGroups\\\\/[^\\\\/]+\\\\/providers\\\\/Microsoft\\\\.PlayFab\\\\/playerDatabases\\\\/[^\\\\/]+\")\nscalar PlayerDatabaseReference\n  extends ResourceIdentifier<[\n    {\n      type: \"Microsoft.Playfab/playerDatabases\",\n    }\n  ]>;\n\n@doc(\"Details of the player database.\")\nmodel PlayerDatabase is TrackedResource<PlayerDatabaseProperties> {\n  @doc(\"The name of the player database resource.\")\n  @key\n  @segment(\"playerDatabases\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface PlayerDatabases\n  extends TrackedResourceOperations<PlayerDatabase, PlayerDatabaseProperties> {}\n\n@doc(\"Details of a title.\")\nmodel Title is TrackedResource<TitleProperties> {\n  @doc(\"Name of the title resource.\")\n  @key\n  @segment(\"titles\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface Titles extends TrackedResourceOperations<Title, TitleProperties> {}\n\n@doc(\"The properties of a player database.\")\nmodel PlayerDatabaseProperties {\n  @doc(\"The user id for this player database\")\n  userId: string;\n\n  @doc(\"The set of titles belonging to this player database.\")\n  titles?: TitleReference[];\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@doc(\"The properties of a title.\")\nmodel TitleProperties {\n  @doc(\"The player database for this title\")\n  @visibility(\"create\", \"read\")\n  parentDatabase: PlayerDatabaseReference;\n\n  ...DefaultProvisioningStateProperty;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\liftr.playfab\\playfab.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\liftr.playfab\\playfab.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\nimport \"./models.tsp\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@armProviderNamespace\n@service({\n  title: \"Microsoft.Logz\",\n  version: \"2020-10-01-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1, Azure.Core.Versions.v1_0_Preview_2)\nnamespace Microsoft.Logz;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@doc(\"The LogZ Monitor resource details.\")\nmodel LogzMonitorResource is TrackedResource<LogzMonitorResourceProperties> {\n  @doc(\"Monitor resource name\")\n  @key(\"monitorName\")\n  @segment(\"monitors\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface Monitors\n  extends TrackedResourceOperations<LogzMonitorResource, LogzMonitorResourceProperties> {\n  @doc(\"List the resources currently being monitored by the Logz monitor resource.\")\n  @post\n  @armResourceAction(LogzMonitorResource)\n  listMonitoredResources(\n    ...ResourceInstanceParameters<LogzMonitorResource>,\n  ): MonitoredResourceListResponse | ErrorResponse;\n}\n\n@doc(\"Details of a TagRule.\")\n@parentResource(LogzMonitorResource)\nmodel TagRuleResource is ProxyResource<TagRuleProperties> {\n  @doc(\"Tag name\")\n  @key(\"tagName\")\n  @segment(\"tagRules\")\n  @path\n  name: string;\n}\n\n@doc(\"The properties of a tag rule resource\")\nmodel TagRuleProperties {\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations\ninterface TagRules extends ProxyResourceOperations<TagRuleResource> {}\n\n@doc(\"Details of a single sign-on configuration.\")\n@parentResource(LogzMonitorResource)\nmodel SingleSignOnConfigurationResource is ProxyResource<LogzSingleSignOnProperties> {\n  @doc(\"Configuration name\")\n  @key(\"configurationName\")\n  @segment(\"singleSignOnConfigurations\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface SingleSignOnConfigurations\n  extends ProxyResourceOperations<SingleSignOnConfigurationResource>,\n    ProxyResourceUpdate<SingleSignOnConfigurationResource, LogzSingleSignOnProperties> {}\n\n@doc(\"Details of a sub account.\")\n@parentResource(LogzMonitorResource)\nmodel SubAccountResource is ProxyResource<LogzMonitorResourceProperties> {\n  @doc(\"Sub account name\")\n  @key(\"subAccountName\")\n  @segment(\"accounts\")\n  @path\n  name: string;\n}\n\n@armResourceOperations\ninterface SubAccounts extends ProxyResourceOperations<SubAccountResource> {}\n\n@doc(\"Details of a SubAccount TagRule.\")\n@parentResource(SubAccountResource)\nmodel SubAccountTagRuleResource is ProxyResource<SubAccountProperties> {\n  @doc(\"Tag name\")\n  @key(\"tagName\")\n  @segment(\"tagRules\")\n  @path\n  name: string;\n}\n\n@doc(\"The properties of a subAccount resource\")\nmodel SubAccountProperties {\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations\ninterface SubAccountTagRules extends ProxyResourceOperations<SubAccountTagRuleResource> {}\n", "file_path": "../../packages/samples/specs\\resource-manager\\logz\\logz.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\logz\\logz.tsp"}, {"file_content": "import \"./models.tsp\";\nimport \"./logz.tsp\";\n", "file_path": "../../packages/samples/specs\\resource-manager\\logz\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\logz\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\nimport \"@azure-tools/typespec-autorest\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nnamespace Microsoft.Logz;\n\nusing Azure.ResourceManager;\n\n@doc(\"Reusable representation of an email address\")\n@pattern(\"^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\\\.)+[A-Za-z]{2,}$\")\nscalar email extends string;\n\n@doc(\"Shorthand for setting length limit.\")\n@minLength(5)\n@maxLength(50)\nscalar MediumString extends string;\n\n@doc(\"A resource that is monitored by a Logz monitor instance.\")\nmodel MonitoredResource {\n  @doc(\"The ARM id of the resource.\")\n  id: string;\n\n  @doc(\"Flag indicating if resource is sending metrics to Logz.\")\n  sendingMetrics: boolean;\n\n  @doc(\"Reason for why the resource is sending metrics (or why it is not sending).\")\n  reasonForMetricsStatus: string;\n\n  @doc(\"Flag indicating if resource is sending logs to Logz.\")\n  sendingLogs: boolean;\n\n  @doc(\"Reason for why the resource is sending logs (or why it is not sending).\")\n  reasonForLogsStatus: string;\n}\n\n@doc(\"A lit of monitored resources.\")\nmodel MonitoredResourceListResponse extends Azure.Core.Page<MonitoredResource> {}\n\n@doc(\"The properties of a Logz Monitor Service resource.\")\nmodel LogzMonitorResourceProperties {\n  @doc(\"Provisioning state of the resource.\")\n  provisioningState: ProvisioningState;\n\n  @doc(\"Status of the monitor.\")\n  monitoringStatus: MonitoringStatus;\n\n  @doc(\"Marketplace subscription status.\")\n  marketplaceSubscriptionStatus: MarketplaceSubscriptionStatus;\n\n  @doc(\"Properties of the Logz organization.\")\n  logzOrganizationProperties: LogzOrganizationProperties;\n\n  @doc(\"User info.\")\n  userInfo: UserInfo;\n\n  @doc(\"Billing plan information.\")\n  planData: PlanData;\n\n  @doc(\"Liftr Resource category.\")\n  liftrResourceCategory: LiftrResourceCategories;\n\n  @doc(\"The priority of the resource.\")\n  liftrResourcePreference: int32;\n}\n\n@doc(\"Provisioning state of the monitoring resource\")\n@Azure.Core.lroStatus\nenum ProvisioningState {\n  ...ResourceProvisioningState,\n\n  @doc(\"Accepted\")\n  Accepted,\n\n  @doc(\"Creating\")\n  Creating,\n\n  @doc(\"Updating\")\n  Updating,\n\n  @doc(\"Deleting\")\n  Deleting,\n\n  @doc(\"Deleted\")\n  Deleted,\n\n  @doc(\"Not Specified\")\n  NotSpecified,\n}\n\n@doc(\"Flag specifying if the resource monitoring is enabled or disabled.\")\nenum MonitoringStatus {\n  @doc(\"Enabled\")\n  Enabled,\n\n  @doc(\"Disabled\")\n  Disabled,\n}\n\n@doc(\"Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.\")\nenum MarketplaceSubscriptionStatus {\n  @doc(\"Active\")\n  Active,\n\n  @doc(\"Suspended\")\n  Suspended,\n}\n\n@doc(\"Details of the log organization.\")\nmodel LogzOrganizationProperties {\n  @doc(\"Id of the Logz organization.\")\n  id: string;\n\n  @doc(\"Name of the Logz organization.\")\n  companyName: string;\n\n  @doc(\"The Id of the Enterprise App used for Single sign on.\")\n  enterpriseAppId: string;\n}\n\n@doc(\"User details.\")\nmodel UserInfo {\n  @doc(\"First Name of the user\")\n  firstName: MediumString;\n\n  @doc(\"Last Name of the user\")\n  lastName: MediumString;\n\n  @doc(\"Email of the user used by Logz for contacting them if needed\")\n  emailAddress: email;\n\n  @maxLength(40)\n  @doc(\"Phone number of the user used by Logz for contacting them if needed\")\n  phoneNumber: string;\n}\n\n@doc(\"Billing plan information.\")\nmodel PlanData {\n  @doc(\"different usage type like PAYG/COMMITTED. this could be enum\")\n  usageType: MediumString;\n\n  @doc(\"different billing cycles like MONTHLY/WEEKLY. this could be enum\")\n  billingCycle: MediumString;\n\n  @doc(\"plan id as published by Logz\")\n  planDetails: MediumString;\n\n  @doc(\"date when plan was applied\")\n  effectiveDate: utcDateTime;\n}\n\n@doc(\"Liftr resource category\")\nenum LiftrResourceCategories {\n  @doc(\"Unknown\")\n  Unknown,\n\n  @doc(\"Monitor logs\")\n  MonitorLogs,\n}\n\n@doc(\"Properties for the Tag rules resource of a Monitor account.\")\nmodel MonitoringTagRulesProperties {\n  @doc(\"Set of rules for sending logs for the Monitor resource.\")\n  logRules: LogRules;\n}\n\n@doc(\"Set of rules for sending logs for the Monitor resource.\")\nmodel LogRules {\n  @doc(\"Flag specifying if AAD logs should be sent for the Monitor resource.\")\n  sendAadLogs: boolean;\n\n  @doc(\"Flag specifying if subscription logs should be sent for the Monitor resource.\")\n  sendSubscriptionLogs: boolean;\n\n  @doc(\"Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.\")\n  sendActivityLogs: boolean;\n\n  @doc(\"List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.\")\n  @OpenAPI.extension(\"x-ms-identifiers\", [\"name\"])\n  filteringTags: FilteringTag[];\n}\n\n@doc(\"The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.\")\nmodel FilteringTag {\n  @doc(\"The name (also known as the key) of the tag.\")\n  name: string;\n\n  @doc(\"The value of the tag.\")\n  value: string;\n\n  @doc(\"The action associated with thsi tag.\")\n  action: TagAction;\n}\n\n@doc(\"Valid actions for a filtering tag. Exclusion takes priority over inclusion.\")\nenum TagAction {\n  @doc(\"Include\")\n  Include,\n\n  @doc(\"Exclude\")\n  Exclude,\n}\n\n@doc(\"Single sign-on properties for a LogZ resource.\")\nmodel LogzSingleSignOnProperties {\n  @doc(\"Various states of the SSO resource\")\n  singleSignOnState: SingleSignOnStates;\n\n  @doc(\"The Id of the Enterprise App used for Single sign-on.\")\n  enterpriseAppId: string;\n\n  @doc(\"The login URL specific to this Logz Organization.\")\n  singleSignOnUrl: string;\n\n  @doc(\"The provisioning state of the SSO resource\")\n  provisioningState: ProvisioningState;\n}\n\n@doc(\"Various states of the SSO resource\")\nenum SingleSignOnStates {\n  @doc(\"Initial\")\n  Initial,\n\n  @doc(\"Enable\")\n  Enable,\n\n  @doc(\"Disable\")\n  Disable,\n\n  @doc(\"Existing\")\n  Existing,\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\logz\\models.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\logz\\models.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\nimport \"./opTemplates.tsp\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@service({\n  title: \"Microsoft.OperationsTest\",\n  version: \"2022-11-01-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n@armProviderNamespace\nnamespace Microsoft.OperationsTest;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n// Tracked resources\nmodel TestTrackedResource is TrackedResource<TestTrackedProperties> {\n  @doc(\"The name of the Tracked resource.\")\n  @key(\"trackedResourceName\")\n  @segment(\"trackedResources\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestTrackedResource)\ninterface TrackedOperations\n  extends TrackedResourceOperations<TestTrackedResource, TestTrackedProperties> {}\n\n@doc(\"rp-specific properties for the resource with all envelope properties\")\nmodel TestTrackedProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  @visibility(\"read\")\n  provisioningState?: EnvelopeProvisioningState;\n\n  @visibility(\"create\", \"read\")\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n@parentResource(TestTrackedResource)\nmodel TestTrackedChild is ProxyResource<TrackedChildProperties> {\n  @doc(\"The name of the Tracked child.\")\n  @key(\"childName\")\n  @segment(\"children\")\n  @path\n  name: string;\n}\n\n@doc(\"A child of a tracked resource\")\nmodel TrackedChildProperties {\n  @doc(\"The flavor of the tracked child\")\n  flavor: string;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@doc(\"Operations for the tracked child\")\n@armResourceOperations(TestTrackedChild)\ninterface TrackedChildOperations extends ProxyResourceOperations<TestTrackedChild> {}\n\n// Tenant resources\n\n@tenantResource\nmodel TestTenantResource is ProxyResource<TestTenantProperties> {\n  @doc(\"The name of the tenant resource.\")\n  @key(\"tenantResourceName\")\n  @segment(\"tenantResources\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestTenantResource)\ninterface TenantOperations\n  extends ProxyResourceOperations<TestTenantResource>,\n    ResourceUpdate<TestTenantResource, TestTenantProperties> {}\n\n@doc(\"rp-specific proeprties for the resource\")\nmodel TestTenantProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: EnvelopeProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n@parentResource(TestTenantResource)\nmodel TestTenantChile is ProxyResource<TenantChildProperties> {\n  @doc(\"The name of the tenant child.\")\n  @key(\"childName\")\n  @segment(\"children\")\n  @path\n  name: string;\n}\n\n@doc(\"A child of a tenant resource\")\nmodel TenantChildProperties {\n  @doc(\"The flavor of the tenant child\")\n  flavor: string;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations(TestTenantChile)\ninterface TenantChildOperations extends ProxyResourceOperations<TestTenantChile> {}\n\n// Extension resources\n\nmodel TestExtensionResource is ExtensionResource<TestExtensionProperties> {\n  @doc(\"The name of the extension resource.\")\n  @key(\"extensionResourceName\")\n  @segment(\"extensionResources\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestExtensionResource)\ninterface ExtensionOperations\n  extends ProxyResourceOperations<TestExtensionResource>,\n    ResourceUpdate<TestExtensionResource, TestExtensionProperties> {}\n\n@doc(\"rp-specific proeprties for the resource\")\nmodel TestExtensionProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: EnvelopeProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n@parentResource(TestExtensionResource)\nmodel TestExtensionChild is ProxyResource<ExtensionChildProperties> {\n  @doc(\"The name of the extension child.\")\n  @key(\"childName\")\n  @segment(\"children\")\n  @path\n  name: string;\n}\n\n@doc(\"A child of a tenant resource\")\nmodel ExtensionChildProperties {\n  @doc(\"The flavor of the extension child\")\n  flavor: string;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations(TestExtensionChild)\ninterface ExtensionChildOperations extends ProxyResourceOperations<TestExtensionChild> {}\n\n// Common\n\n@Azure.Core.lroStatus\n@doc(\"The set of provisioning state values\")\nenum EnvelopeProvisioningState {\n  ...ResourceProvisioningState,\n\n  @doc(\"Working\")\n  Working,\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\operationsTest\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\operationsTest\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\nnamespace Microsoft.OperationsTest;\n\n// Tracked resources\nmodel TestTrackedResource2 is TrackedResource<TestTrackedProperties2> {\n  @doc(\"The name of the Tracked resource.\")\n  @key(\"trackedResourceName\")\n  @segment(\"trackedResource2s\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestTrackedResource2)\ninterface Tracked2Operations {\n  get is ArmResourceRead<TestTrackedResource2>;\n  create is ArmResourceCreateOrUpdateSync<TestTrackedResource2>;\n  update is ArmResourcePatchSync<TestTrackedResource2, TestTrackedProperties2>;\n  delete is ArmResourceDeleteSync<TestTrackedResource2>;\n  listByResourceGroup is ArmResourceListByParent<TestTrackedResource2>;\n  listBySubscription is ArmListBySubscription<TestTrackedResource2>;\n}\n\n@doc(\"rp-specific proeprties for the resource with all envelope properties\")\nmodel TestTrackedProperties2 {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: EnvelopeProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n@parentResource(TestTrackedResource2)\nmodel TestTrackedChild2 is ProxyResource<TrackedChildProperties2> {\n  @doc(\"The name of the Tracked child.\")\n  @key(\"childName\")\n  @segment(\"children\")\n  @path\n  name: string;\n}\n\n@doc(\"A child of a tracked resource\")\nmodel TrackedChildProperties2 {\n  @doc(\"The flavor of the tracked child\")\n  flavor: string;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@doc(\"Operations for the tracked child\")\n@armResourceOperations(TestTrackedChild2)\ninterface TrackedChildOperations2 {\n  get is ArmResourceRead<TestTrackedChild2>;\n  create is ArmResourceCreateOrUpdateSync<TestTrackedChild2>;\n  update is ArmResourcePatchSync<TestTrackedChild2, TrackedChildProperties2>;\n  delete is ArmResourceDeleteSync<TestTrackedChild2>;\n  listByParent is ArmResourceListByParent<TestTrackedChild2>;\n}\n\n// Tenant resources\n\n@tenantResource\nmodel TestTenantResource2 is ProxyResource<TestTenantProperties2> {\n  @doc(\"The name of the tenant resource.\")\n  @key(\"tenantResourceName\")\n  @segment(\"tenantResource2s\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestTenantResource2)\ninterface TenantOperations2 {\n  get is ArmResourceRead<TestTenantResource2>;\n  create is ArmResourceCreateOrUpdateSync<TestTenantResource2>;\n  update is ArmResourcePatchSync<TestTenantResource2, TestTenantProperties2>;\n  delete is ArmResourceDeleteSync<TestTenantResource2>;\n  listByParent is ArmResourceListByParent<TestTenantResource2>;\n}\n\n@doc(\"rp-specific proeprties for the resource\")\nmodel TestTenantProperties2 {\n  @visibility(\"read\")\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState?: EnvelopeProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n@parentResource(TestTenantResource2)\nmodel TestTenantChile2 is ProxyResource<TenantChildProperties2> {\n  @doc(\"The name of the tenant child.\")\n  @key(\"childName\")\n  @segment(\"children\")\n  @path\n  name: string;\n}\n\n@doc(\"A child of a tenant resource\")\nmodel TenantChildProperties2 {\n  @doc(\"The flavor of the tenant child\")\n  flavor: string;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations(TestTenantChile2)\ninterface TenantChildOperations2 {\n  get is ArmResourceRead<TestTenantChile2>;\n  create is ArmResourceCreateOrUpdateSync<TestTenantChile2>;\n  update is ArmResourcePatchSync<TestTenantChile2, TestTenantProperties2>;\n  delete is ArmResourceDeleteSync<TestTenantChile2>;\n  listByParent is ArmResourceListByParent<TestTenantChile2>;\n}\n\n// Extension resources\n\nmodel TestExtensionResource2 is ExtensionResource<TestExtensionProperties2> {\n  @doc(\"The name of the extension resource.\")\n  @key(\"extensionResourceName\")\n  @segment(\"extensionResource2s\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestExtensionResource2)\ninterface ExtensionOperations2 {\n  get is ArmResourceRead<TestExtensionResource2>;\n  create is ArmResourceCreateOrUpdateSync<TestExtensionResource2>;\n  update is ArmResourcePatchSync<TestExtensionResource2, TestExtensionProperties2>;\n  delete is ArmResourceDeleteSync<TestExtensionResource2>;\n  listByParent is ArmResourceListByParent<TestExtensionResource2>;\n}\n\n@doc(\"rp-specific properties for the resource\")\nmodel TestExtensionProperties2 {\n  @doc(\"The status of the last operation performed on this resource.\")\n  provisioningState: EnvelopeProvisioningState;\n\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n}\n\n@parentResource(TestExtensionResource2)\nmodel TestExtensionChild2 is ProxyResource<ExtensionChildProperties2> {\n  @doc(\"The name of the extension child.\")\n  @key(\"childName\")\n  @segment(\"children\")\n  @path\n  name: string;\n}\n\n@doc(\"A child of a tenant resource\")\nmodel ExtensionChildProperties2 {\n  @doc(\"The flavor of the extension child\")\n  flavor: string;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations(TestExtensionChild2)\ninterface ExtensionChildOperations2 {\n  get is ArmResourceRead<TestExtensionChild2>;\n  create is ArmResourceCreateOrUpdateSync<TestExtensionChild2>;\n  update is ArmResourcePatchSync<TestExtensionChild2, ExtensionChildProperties2>;\n  delete is ArmResourceDeleteSync<TestExtensionChild2>;\n  listByParent is ArmResourceListByParent<TestExtensionChild2>;\n}\n\n@locationResource\nmodel LocationResource is ProxyResource<LocationProperties> {\n  @key(\"locationResourceName\")\n  @segment(\"locationResources\")\n  @doc(\"The name of the location resource\")\n  @path\n  name: string;\n}\n\n@doc(\"The rp-specific properties of a LocationResource\")\nmodel LocationProperties {\n  ...DefaultProvisioningStateProperty;\n\n  @doc(\"The color of the location\")\n  color: string;\n}\n\n@doc(\"The length of time a location resource is disabled\")\nmodel DisableLocationProperties {\n  @doc(\"The start of the disabling\")\n  startTime: utcDateTime;\n\n  @doc(\"The end time of disabling\")\n  endTime: utcDateTime;\n}\n\n@doc(\"A request to change a location resource in some unspecified manner\")\nmodel LocationMungeRequest {\n  @doc(\"Data on the unspecified change\")\n  mungeData: string;\n}\n\n@doc(\"The result of an unspecified change\")\nmodel LocationMungeResult {\n  @doc(\"Description fo the unspecified change\")\n  mungeResult: string;\n}\n\n@armResourceOperations(LocationResource)\ninterface LocationResourceOperations {\n  get is ArmResourceRead<LocationResource>;\n  create is ArmResourceCreateOrUpdateSync<LocationResource>;\n  update is ArmResourcePatchSync<LocationResource, LocationProperties>;\n  delete is ArmResourceDeleteSync<LocationResource>;\n  listByParent is ArmResourceListByParent<LocationResource>;\n  @doc(\"Disable a location for the given period\")\n  disable is ArmResourceActionNoContentSync<LocationResource, DisableLocationProperties>;\n  @doc(\"Make an unspecified change at the given location\")\n  munge is ArmResourceActionSync<LocationResource, LocationMungeRequest, LocationMungeResult>;\n}\n\n@parentResource(LocationResource)\nmodel LocationChild is ProxyResource<LocationProperties> {\n  @key(\"childname\")\n  @segment(\"children\")\n  @doc(\"The name of the location resource\")\n  @path\n  name: string;\n}\n\n@doc(\"The rp-specific properties of a LocationResource child\")\nmodel LocationChildProperties {\n  ...DefaultProvisioningStateProperty;\n\n  @doc(\"The color of the location\")\n  color: string;\n}\n\n@doc(\"The length of time a location resource child is enabled\")\nmodel EnableLocationChildProperties {\n  @doc(\"The start of the disabling\")\n  startTime: utcDateTime;\n\n  @doc(\"The end time of disabling\")\n  endTime: utcDateTime;\n}\n\n@doc(\"A request to change a location resource child in some unspecified manner\")\nmodel LocationMungeChildRequest {\n  @doc(\"Data on the unspecified change\")\n  mungeData: string;\n}\n\n@doc(\"The result of an unspecified change\")\nmodel LocationMungeChildResult {\n  @doc(\"Description fo the unspecified change\")\n  mungeResult: string;\n}\n\n@armResourceOperations(LocationChild)\ninterface LocationChildResourceOperations {\n  get is ArmResourceRead<LocationChild>;\n  create is ArmResourceCreateOrUpdateSync<LocationChild>;\n  update is ArmResourcePatchSync<LocationChild, LocationProperties>;\n  delete is ArmResourceDeleteSync<LocationChild>;\n  listByParent is ArmResourceListByParent<LocationChild>;\n  @doc(\"Enable a location for the given period\")\n  enable is ArmResourceActionNoContentAsync<LocationChild, EnableLocationChildProperties>;\n  @doc(\"Make an unspecified change at the given location\")\n  munge is ArmResourceActionAsync<\n    LocationChild,\n    LocationMungeChildRequest,\n    LocationMungeChildResult\n  >;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\operationsTest\\opTemplates.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\operationsTest\\opTemplates.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@service({\n  title: \"Microsoft.PrivateLinkTest\",\n})\n@versioned(Microsoft.PrivateLinkTest.Versions)\n@armProviderNamespace\nnamespace Microsoft.PrivateLinkTest;\n\n@doc(\"The PrivateLinkTest service versions.\")\nenum Versions {\n  @useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n  @armCommonTypesVersion(Azure.ResourceManager.CommonTypes.Versions.v4)\n  @doc(\"The 2023-08-01-preview version.\")\n  `2023-08-01-preview`,\n\n  @useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\n  @armCommonTypesVersion(Azure.ResourceManager.CommonTypes.Versions.v5)\n  @doc(\"The 2023-11-01-preview version.\")\n  `2023-11-01-preview`,\n}\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n// Tracked resources\nmodel TestTrackedResource is TrackedResource<TestTrackedProperties> {\n  @doc(\"The name of the Tracked resource.\")\n  @key(\"trackedResourceName\")\n  @segment(\"trackedResources\")\n  @path\n  name: string;\n}\n\n@armResourceOperations(TestTrackedResource)\ninterface TrackedOperations\n  extends TrackedResourceOperations<TestTrackedResource, TestTrackedProperties> {}\n\n@doc(\"rp-specific properties for the resource with all envelope properties\")\nmodel TestTrackedProperties {\n  @doc(\"The status of the last operation performed on this resource.\")\n  @visibility(\"read\")\n  provisioningState?: ResourceProvisioningState;\n\n  @visibility(\"create\", \"read\")\n  @doc(\"Name of the resource\")\n  displayName?: string = \"default\";\n\n  /** The private endpoints exposed by this resource */\n  @visibility(\"read\")\n  endpoints?: PrivateEndpoint[];\n}\n\n/** Holder for private endpoint connections */\n@parentResource(TestTrackedResource)\nmodel PrivateEndpointConnectionResource is ProxyResource<PrivateEndpointConnectionProperties> {\n  ...PrivateEndpointConnectionParameter;\n}\n\n/** Private connection operations */\n@armResourceOperations(PrivateEndpointConnectionResource)\ninterface PrivateEndpointConnections {\n  /** List existing private connections */\n  listConnections is ArmResourceListByParent<PrivateEndpointConnectionResource>;\n  /** Get a specific private connection */\n  get is ArmResourceRead<PrivateEndpointConnectionResource>;\n  /** Create a Private endpoint connection */\n  create is ArmResourceCreateOrReplaceSync<PrivateEndpointConnectionResource>;\n  /** Delete the private endpoint connection */\n  delete is ArmResourceDeleteSync<PrivateEndpointConnectionResource>;\n}\n\n/** Private Links for TestRackedResource */\n#suppress \"@azure-tools/typespec-providerhub-controller/no-resource-operations\" \"Expected for private links\"\n@parentResource(TestTrackedResource)\nmodel PrivateLinkResource is ProxyResource<PrivateLinkResourceProperties> {\n  ...PrivateLinkResourceParameter;\n}\n\n/** Operations for private links on TestTrackedResource */\n@armResourceOperations(PrivateLinkResource)\ninterface PrivateLinks {\n  /** list private links on the given resource */\n  list is ArmResourceListByParent<PrivateLinkResource>;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\private-links\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\private-links\\main.tsp"}, {"file_content": "import \"./servicelinker.tsp\";\n", "file_path": "../../packages/samples/specs\\resource-manager\\servicelinker\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\servicelinker\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@armProviderNamespace\n@service({\n  title: \"Microsoft.ServiceLinker provider\",\n  version: \"2021-01-01-privatepreview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\nnamespace Microsoft.ServiceLinker;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@doc(\"The details of a service linker.\")\nmodel LinkerResource is ExtensionResource<LinkerProperties> {\n  @doc(\"The name of the linker resource.\")\n  @path\n  @key(\"linkerName\")\n  @segment(\"linkers\")\n  name: string;\n}\n\n@armResourceOperations\ninterface Linker extends ExtensionResourceOperations<LinkerResource, LinkerProperties> {\n  @doc(\"Validate a linker resource.\")\n  @post\n  @armResourceAction(LinkerResource)\n  validateLinker(\n    ...ExtensionResourceInstanceParameters<LinkerResource>,\n  ): ArmResponse<ValidateResult> | ErrorResponse;\n\n  @doc(\"List linker resource configurations.\")\n  @post\n  @armResourceAction(LinkerResource)\n  listConfigurations(\n    ...ExtensionResourceInstanceParameters<LinkerResource>,\n  ): ArmResponse<SourceConfigurationResult> | ErrorResponse;\n}\n\n@doc(\"The rp-specific properties of a resource link\")\nmodel LinkerProperties {\n  @doc(\"The resource Id of the target service.\")\n  targetId: string;\n\n  @doc(\"The authentication type.\")\n  authInfo: AuthInfoBase;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@doc(\"The kmind of authentication used for this linker.\")\nenum AuthType {\n  @doc(\"System assigned identity\")\n  systemAssignedIdentity,\n\n  @doc(\"User assigned identity\")\n  userAssignedIdentity,\n\n  @doc(\"Service principal\")\n  servicePrincipal,\n\n  @doc(\"Secret\")\n  secret,\n}\n\n@doc(\"The abstract base model for all authentication types.\") // discriminator: authType\nmodel AuthInfoBase {\n  @doc(\"The authorization type\")\n  authType: AuthType;\n}\n\n// x-ms-discriminator-value: secret\n@doc(\"Authentication information for secret-based auth.\")\nmodel SecretAuthInfo extends AuthInfoBase {\n  @doc(\"username or account name for secret auth.\")\n  name: string;\n\n  // @secret\n\n  @doc(\"Password or account key for secret auth.\")\n  secret?: string;\n}\n\n// x-ms-discriminator-value: userAssignedIdentity\n@doc(\"Authentication information for user assigned identity based auth.\")\nmodel UserAssignedIdentityAuthInfo extends AuthInfoBase {\n  @doc(\"Client Id for userAssignedIdentity\")\n  id: string;\n}\n\n// x-ms-discriminator-value: systemAssignedIdentity\n@doc(\"Authentication information for system assigned identity based auth.\")\nmodel SystemAssignedIdentityAuthInfo extends AuthInfoBase {}\n\n// x-ms-discriminator-value: systemPrincipal\n@doc(\"Authentication information for service principal based auth.\")\nmodel SystemPrincipalAuthInfo extends AuthInfoBase {\n  @doc(\"ServicePrincipal Id for servicePrincipal auth.\")\n  id: string;\n\n  @doc(\"ServicePrincipal Name for servicePrincipal auth.\")\n  name: string;\n}\n\n@doc(\"Source configuration details.\")\nmodel SourceConfiguration {\n  @doc(\"The kind of configuration used in this instance.\")\n  type: SourceConfigurationType;\n\n  @doc(\"The configuration of the linker for appSettings or connectionStrings or serviceBindings\")\n  linkConfig: {};\n}\n\n@doc(\"The kind of source configuration used in a particular instance.\")\nenum SourceConfigurationType {\n  @doc(\"App settings\")\n  appSettings,\n\n  @doc(\"Connection settings\")\n  connectionSettings,\n\n  @doc(\"Service bindings\")\n  serviceBindings,\n}\n\n@doc(\"Configurations for source resource, include appSettings, connectionString and serviceBindings\")\nmodel SourceConfigurationResult {\n  @OpenAPI.extension(\"x-ms-identifiers\", [])\n  @doc(\"Details of the source configurations.\")\n  sourceConfigurations: SourceConfiguration[];\n}\n\n@doc(\"State of the linker resource.\")\nenum LinkerStatus {\n  @doc(\"Healthy\")\n  Healthy,\n\n  @doc(\"Not healthy\")\n  `Not healthy`,\n}\n\n@doc(\"Details of validation.\")\nmodel ValidateResult {\n  @doc(\"The linker name.\")\n  name: string;\n\n  @doc(\"Specifies if the linker is healthy.\")\n  linkerStatus: LinkerStatus;\n\n  @doc(\"The reason of the error.\")\n  reason: string;\n\n  @doc(\"The start time of the validation report.\")\n  reportStartTimeUtc: plainDate;\n\n  @doc(\"The end time of the validation report.\")\n  reportEndTimeUtc: plainDate;\n\n  @doc(\"The resource Id of the target service.\")\n  targetId: string;\n\n  @doc(\"The authentication type.\")\n  authType: AuthType;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\servicelinker\\servicelinker.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\servicelinker\\servicelinker.tsp"}, {"file_content": "// https://cadlplayground.z22.web.core.windows.net/cadl-azure/\nimport \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-core\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\nimport \"@azure-tools/typespec-providerhub\";\n\nusing TypeSpec.Http;\nusing TypeSpec.Rest;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\nusing Azure.Core;\n\n@armProviderNamespace(\"Microsoft.UpdateTests\")\n@service({\n  title: \"Microsoft.UpdateTests\",\n  version: \"2023-03-01-preview\",\n})\n@doc(\"Testign resource update using a Management API\")\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\nnamespace Microsoft.UpdateTests;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@Azure.Core.lroStatus\n@doc(\"Provisioning state\")\nenum ProvisioningState {\n  ...ResourceProvisioningState,\n\n  @doc(\"Provisioning\")\n  Provisioning,\n\n  @doc(\"Updating\")\n  Updating,\n\n  @doc(\"Deleting\")\n  Deleting,\n\n  @doc(\"Accepted\")\n  Accepted,\n}\n\n@doc(\"Access Point Gateway\")\nmodel TestUpdateResource is TrackedResource<TestUpdateResourceProperties> {\n  @doc(\"The name of the Gateway\")\n  @key(\"accessPointGatewayName\")\n  @segment(\"accessPointGateways\")\n  @path\n  name: string;\n}\n\n@doc(\"Access Point Gateway Site\")\n@parentResource(TestUpdateResource)\nmodel TestUpdateChildResource is TrackedResource<TestUpdateChildProperties> {\n  @doc(\"The name of the Gateway Site\")\n  @key(\"siteName\")\n  @segment(\"sites\")\n  @path\n  name: string;\n}\n\n@doc(\"Access Point Gateway Subnet\")\n@parentResource(TestUpdateChildResource)\nmodel TestCustomUpdateResource is TrackedResource<TestCustomUpdateProperties> {\n  @doc(\"The name of the Gateway Subnet\")\n  @key(\"subnetName\")\n  @segment(\"subnets\")\n  @path\n  name: string;\n}\n\n@doc(\"Cluster Classification Levels\")\nenum ClassificationLevel {\n  @doc(\"Collateral\")\n  Collateral,\n\n  @doc(\"SAR\")\n  Sar,\n\n  @doc(\"SCI\")\n  Sci,\n\n  @doc(\"SCI/SAR\")\n  SciSar,\n}\n\n@doc(\"Access Point Gateway Properties.\")\nmodel TestUpdateResourceProperties {\n  @doc(\"The Classification Level of the Access Point infrastructure.\")\n  @visibility(\"create\", \"read\")\n  classificationLevel: ClassificationLevel;\n\n  @doc(\"The status of the last operation.\")\n  @visibility(\"read\")\n  provisioningState?: ProvisioningState;\n}\n\n@doc(\"Gateway Site Properties.\")\nmodel TestUpdateChildProperties {\n  @doc(\"The status of the last operation.\")\n  @visibility(\"read\")\n  provisioningState?: ProvisioningState;\n}\n\n@doc(\"Gateway Subnet Properties.\")\nmodel TestCustomUpdateProperties {\n  @doc(\"The IP Range of the subnet\")\n  @visibility(\"read\", \"update\")\n  addressPrefix?: string;\n\n  @doc(\"The size of the subnet you wish to create\")\n  @visibility(\"create\", \"update\")\n  subnetMask?: string;\n\n  @doc(\"The status of the last operation.\")\n  @visibility(\"read\")\n  provisioningState?: ProvisioningState;\n}\n\n@doc(\"The update request body for custom update\")\nmodel CustomUpdateRequest {\n  @doc(\"The first update property\")\n  properties?: CustomUpdateProperties;\n\n  ...Azure.ResourceManager.Foundations.ArmTagsProperty;\n}\n\n@doc(\"Custom update request properties\")\nmodel CustomUpdateProperties {\n  @doc(\"The IP Range of the subnet\")\n  addressPrefix?: string;\n\n  @doc(\"The size of the subnet you wish to create\")\n  subnetMask?: string;\n}\n\n@armResourceOperations\ninterface TestUpdate {\n  get is ArmResourceRead<TestUpdateResource>;\n  create is ArmResourceCreateOrUpdateAsync<TestUpdateResource>;\n  update is ArmTagsPatchSync<TestUpdateResource>;\n  delete is ArmResourceDeleteAsync<TestUpdateResource>;\n  listByResourceGroup is ArmResourceListByParent<TestUpdateResource>;\n  listBySubscription is ArmListBySubscription<TestUpdateResource>;\n}\n\n@armResourceOperations\ninterface TestChildUpdate {\n  get is ArmResourceRead<TestUpdateChildResource>;\n  create is ArmResourceCreateOrUpdateAsync<TestUpdateChildResource>;\n  update is ArmTagsPatchSync<TestUpdateChildResource>;\n  delete is ArmResourceDeleteAsync<TestUpdateChildResource>;\n  listByResourceGroup is ArmResourceListByParent<TestUpdateChildResource>;\n  listBySubscription is ArmListBySubscription<TestUpdateChildResource>;\n}\n\n@armResourceOperations\ninterface TestCustomUpdate {\n  get is ArmResourceRead<TestCustomUpdateResource>;\n  create is ArmResourceCreateOrUpdateAsync<TestCustomUpdateResource>;\n  update is ArmCustomPatchAsync<TestCustomUpdateResource, CustomUpdateRequest>;\n  delete is ArmResourceDeleteWithoutOkAsync<TestCustomUpdateResource>;\n  listByResourceGroup is ArmResourceListByParent<TestCustomUpdateResource>;\n  listBySubscription is ArmListBySubscription<TestCustomUpdateResource>;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\tagsUpdateTest\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\tagsUpdateTest\\main.tsp"}, {"file_content": "import \"@typespec/http\";\nimport \"@typespec/rest\";\nimport \"@typespec/versioning\";\nimport \"@azure-tools/typespec-azure-resource-manager\";\nimport \"@azure-tools/typespec-providerhub\";\nimport \"@azure-tools/typespec-providerhub-controller\";\n\nusing TypeSpec.Rest;\nusing TypeSpec.Http;\nusing TypeSpec.Versioning;\nusing Azure.ResourceManager;\n\n@armProviderNamespace\n@service({\n  title: \"Microsoft.Contoso\",\n  version: \"2022-05-22-preview\",\n})\n@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)\nnamespace Microsoft.Contoso;\n\ninterface Operations extends Azure.ResourceManager.Operations {}\n\n@minValue(0)\nscalar UnsignedInt extends int32;\n\n// Tracked Resource\nmodel Building is TrackedResource<BuildingProperties> {\n  @doc(\"The name of the building\")\n  @segment(\"buildings\")\n  @key(\"buildingName\")\n  @TypeSpec.Http.path\n  name: string;\n\n  ...ManagedServiceIdentity;\n  ...ResourceSku;\n  ...ManagedBy;\n}\n\n@doc(\"The rp-specific building properties\")\nmodel BuildingProperties {\n  @doc(\"The street address\")\n  @visibility(\"read\", \"create\")\n  streetAddress: string;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations(Building)\ninterface Buildings extends TrackedResourceOperations<Building, BuildingProperties> {\n  @doc(\"Get out!\")\n  @post\n  @action\n  @armResourceAction(Building)\n  evacuate(...ResourceInstanceParameters<Building>): ArmResponse<Building> | ErrorResponse;\n}\n\n@parentResource(Building)\nmodel Room is ProxyResource<RoomProperties> {\n  @doc(\"The room name\")\n  @key(\"roomName\")\n  @segment(\"rooms\")\n  @path\n  name: string;\n}\n\n// Proxy Child Resource\n@doc(\"rp-specific room properties\")\nmodel RoomProperties {\n  @doc(\"The number of desks\")\n  desks: UnsignedInt;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations(Room)\ninterface Rooms extends ProxyResourceOperations<Room> {}\n\n//ExtensionResource\n\n@doc(\"A Permission Resource\")\nmodel Permission is ExtensionResource<PermissionProperties> {\n  @doc(\"The name of the permission resource\")\n  @segment(\"permissions\")\n  @key(\"permissionName\")\n  @path\n  name: string;\n}\n\n@doc(\"The resource-specific properties of a Permissions resource\")\nmodel PermissionProperties {\n  @doc(\"includes permission to read the target resource\")\n  read: boolean;\n\n  @doc(\"includes permission to write to the target resource\")\n  write: boolean;\n\n  @doc(\"includes permission to execute the target resource\")\n  execute: boolean;\n\n  @doc(\"includes permission to delete the target resource\")\n  delete: boolean;\n\n  @doc(\"The principals given this permission\")\n  principalName: string[];\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations(Permission)\ninterface Permissions extends ExtensionResourceOperations<Permission, PermissionProperties> {}\n\n// Tenant Resource\n\n@Azure.ResourceManager.tenantResource\nmodel Widget is ProxyResource<WidgetProperties> {\n  @doc(\"The name of the widget\")\n  @key(\"widgetName\")\n  @segment(\"widgets\")\n  @path\n  @visibility(\"read\")\n  name: string;\n}\n\n@doc(\"The properties of a widget\")\nmodel WidgetProperties {\n  @doc(\"The color of the widget\")\n  color: string;\n\n  @doc(\"The weight of the widget in (integral) pounds\")\n  weightInPounds?: UnsignedInt;\n\n  @doc(\"The weight in kilograms\")\n  weightInKilograms?: float32;\n\n  @doc(\"The spin of the widget\")\n  spin?: Spin;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n#suppress \"@azure-tools/typespec-azure-core/use-extensible-enum\" \"Existing service.\"\n@Azure.Core.fixed\n@doc(\"Spin.\")\nenum Spin {\n  @doc(\"Up\")\n  up,\n\n  @doc(\"Down\")\n  down,\n}\n\n@armResourceOperations(Widget)\ninterface Widgets extends TenantResourceOperations<Widget, WidgetProperties> {\n  @autoRoute\n  @doc(\"Flip to the opposite of the current spin\")\n  @post\n  @armResourceAction(Widget)\n  flipSpin(...TenantInstanceParameters<Widget>): ArmResponse<Widget> | ErrorResponse;\n}\n\n@parentResource(Widget)\nmodel Flange is ProxyResource<FlangeProperties> {\n  @doc(\"The name of the flange\")\n  @key(\"flangeName\")\n  @segment(\"flanges\")\n  @path\n  @visibility(\"read\")\n  name: string;\n}\n\n@doc(\"The properties of a Flange\")\nmodel FlangeProperties {\n  @doc(\"The description of the flange\")\n  description: string;\n\n  @doc(\"The weight in ounces of the flange\")\n  weight: safeint;\n\n  ...DefaultProvisioningStateProperty;\n}\n\n@armResourceOperations(Flange)\ninterface Flanges\n  extends TenantResourceCreate<Flange>,\n    TenantResourceDelete<Flange>,\n    TenantResourceRead<Flange>,\n    TenantResourceListByParent<Flange> {\n  @autoRoute\n  @action\n  @doc(\"Add a certain amount to the weight\")\n  @post\n  @armResourceAction(Flange)\n  increaseWeight(\n    ...TenantInstanceParameters<Flange>,\n\n    @doc(\"The request body.\")\n    @body\n    increment: safeint,\n  ): ArmNoContentResponse<\"Weight added successfully\"> | ErrorResponse;\n}\n", "file_path": "../../packages/samples/specs\\resource-manager\\tenantResource\\main.tsp", "link_to_file": "file://../../packages/samples/specs\\resource-manager\\tenantResource\\main.tsp"}]